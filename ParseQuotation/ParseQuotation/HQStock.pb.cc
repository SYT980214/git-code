// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: HQStock.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "HQStock.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace HQStockPackage {

namespace {

const ::google::protobuf::Descriptor* HQ1008_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1008_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1008s_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1008s_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1001_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1001s_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1001s_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1002_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1002s_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1002s_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1006_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1006_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1006s_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1006s_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1011_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1011_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1011s_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1011s_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1013_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1013_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1013s_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1013s_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1055_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1055_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1055s_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1055s_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1057_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1057_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1057s_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1057s_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1058_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1058_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1058s_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1058s_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1059_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1059_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1059s_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1059s_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1060_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1060_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1060s_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1060s_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1061_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1061_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1061s_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1061s_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1069_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1069_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1069s_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1069s_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1070_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1070_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1070s_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1070s_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1071_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1071_reflection_ = NULL;
const ::google::protobuf::Descriptor* HQ1071s_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HQ1071s_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_HQStock_2eproto() {
  protobuf_AddDesc_HQStock_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "HQStock.proto");
  GOOGLE_CHECK(file != NULL);
  HQ1008_descriptor_ = file->message_type(0);
  static const int HQ1008_offsets_[70] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, smarketno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, sstockcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, sabsolutetimestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dprecloseprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dopenprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dlastprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dhighprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dlowprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dcloseprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, davgprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dbusinessamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dbusinessbalance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dupprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, ddownprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dcurrentamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, damount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dpreamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dpresettlement_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dsettlement_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, diopv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, stradingphasecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dauctionprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dmatchedqty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dfundt1price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, sfundtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dmarketdealamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, sstopflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, sbsstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, slatestenquirytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dbusinweight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dbuyprice1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dbuyprice2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dbuyprice3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dbuyprice4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dbuyprice5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dsaleprice1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dsaleprice2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dsaleprice3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dsaleprice4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dsaleprice5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dbuyqty1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dbuyqty2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dbuyqty3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dbuyqty4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dbuyqty5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dsaleqty1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dsaleqty2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dsaleqty3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dsaleqty4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dsaleqty5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, sstockname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, danountperhand_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dtotalbuyamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dtotalsaleamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dcjbishu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, drealavgrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dpreavgrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, iinitdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dpe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dpe2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, ilayering_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, izsssl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, sstocktype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, scodetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, istrikedate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, iexpiredate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dmaxlimitedamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dmaxmarketamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, dholdbalance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, ddelta_),
  };
  HQ1008_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1008_descriptor_,
      HQ1008::default_instance_,
      HQ1008_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1008));
  HQ1008s_descriptor_ = file->message_type(1);
  static const int HQ1008s_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008s, rHQ1008_),
  };
  HQ1008s_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1008s_descriptor_,
      HQ1008s::default_instance_,
      HQ1008s_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008s, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1008s, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1008s));
  HQ1001_descriptor_ = file->message_type(2);
  static const int HQ1001_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1001, smarketno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1001, sstockcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1001, stimestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1001, dreferenceprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1001, dupprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1001, ddownprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1001, sbegintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1001, sendtime_),
  };
  HQ1001_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1001_descriptor_,
      HQ1001::default_instance_,
      HQ1001_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1001, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1001, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1001));
  HQ1001s_descriptor_ = file->message_type(3);
  static const int HQ1001s_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1001s, rhq1001_),
  };
  HQ1001s_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1001s_descriptor_,
      HQ1001s::default_instance_,
      HQ1001s_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1001s, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1001s, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1001s));
  HQ1002_descriptor_ = file->message_type(4);
  static const int HQ1002_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1002, smarketno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1002, sstockcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1002, dpopcprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1002, dsvol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1002, dreferenceprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1002, dupprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1002, ddownprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1002, damount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1002, sordimbdirection_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1002, stimestamp_),
  };
  HQ1002_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1002_descriptor_,
      HQ1002::default_instance_,
      HQ1002_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1002, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1002, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1002));
  HQ1002s_descriptor_ = file->message_type(5);
  static const int HQ1002s_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1002s, rhq1002_),
  };
  HQ1002s_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1002s_descriptor_,
      HQ1002s::default_instance_,
      HQ1002s_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1002s, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1002s, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1002s));
  HQ1006_descriptor_ = file->message_type(6);
  static const int HQ1006_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1006, smarketno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1006, sstockcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1006, stradestatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1006, dnominalprice_),
  };
  HQ1006_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1006_descriptor_,
      HQ1006::default_instance_,
      HQ1006_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1006, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1006, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1006));
  HQ1006s_descriptor_ = file->message_type(7);
  static const int HQ1006s_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1006s, rhq1006_),
  };
  HQ1006s_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1006s_descriptor_,
      HQ1006s::default_instance_,
      HQ1006s_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1006s, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1006s, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1006s));
  HQ1011_descriptor_ = file->message_type(8);
  static const int HQ1011_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1011, smarketno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1011, sstockcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1011, stimestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1011, dspecialmark_),
  };
  HQ1011_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1011_descriptor_,
      HQ1011::default_instance_,
      HQ1011_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1011, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1011, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1011));
  HQ1011s_descriptor_ = file->message_type(9);
  static const int HQ1011s_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1011s, rhq1011_),
  };
  HQ1011s_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1011s_descriptor_,
      HQ1011s::default_instance_,
      HQ1011s_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1011s, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1011s, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1011s));
  HQ1013_descriptor_ = file->message_type(10);
  static const int HQ1013_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1013, smarketno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1013, srecordno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1013, sreportseat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1013, sstockcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1013, dentrustprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1013, dentrustamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1013, sside_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1013, scontactinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1013, stransactdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1013, stransacttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1013, stranstype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1013, sconfirmid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1013, sbulkunderweightflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1013, sexectype_),
  };
  HQ1013_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1013_descriptor_,
      HQ1013::default_instance_,
      HQ1013_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1013, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1013, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1013));
  HQ1013s_descriptor_ = file->message_type(11);
  static const int HQ1013s_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1013s, rhq1013_),
  };
  HQ1013s_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1013s_descriptor_,
      HQ1013s::default_instance_,
      HQ1013s_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1013s, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1013s, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1013s));
  HQ1055_descriptor_ = file->message_type(12);
  static const int HQ1055_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1055, smarketno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1055, sstockcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1055, sstockname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1055, dbusinessamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1055, dbusinessbalance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1055, dcloseprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1055, dbuyvolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1055, dsellvolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1055, stradingphasecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1055, sabsolutetimestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1055, iinitdate_),
  };
  HQ1055_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1055_descriptor_,
      HQ1055::default_instance_,
      HQ1055_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1055, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1055, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1055));
  HQ1055s_descriptor_ = file->message_type(13);
  static const int HQ1055s_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1055s, rhq1055_),
  };
  HQ1055s_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1055s_descriptor_,
      HQ1055s::default_instance_,
      HQ1055s_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1055s, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1055s, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1055s));
  HQ1057_descriptor_ = file->message_type(14);
  static const int HQ1057_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1057, smarketno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1057, sstockcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1057, stradingday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1057, sforquotesysid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1057, sforquotetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1057, sactionday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1057, sabsolutetimestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1057, iinitdate_),
  };
  HQ1057_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1057_descriptor_,
      HQ1057::default_instance_,
      HQ1057_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1057, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1057, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1057));
  HQ1057s_descriptor_ = file->message_type(15);
  static const int HQ1057s_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1057s, rhq1057_),
  };
  HQ1057s_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1057s_descriptor_,
      HQ1057s::default_instance_,
      HQ1057s_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1057s, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1057s, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1057s));
  HQ1058_descriptor_ = file->message_type(16);
  static const int HQ1058_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1058, smarketno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1058, dthresholdamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1058, dposamt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1058, iamountstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1058, stradestatus_),
  };
  HQ1058_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1058_descriptor_,
      HQ1058::default_instance_,
      HQ1058_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1058, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1058, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1058));
  HQ1058s_descriptor_ = file->message_type(17);
  static const int HQ1058s_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1058s, rhq1058_),
  };
  HQ1058s_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1058s_descriptor_,
      HQ1058s::default_instance_,
      HQ1058s_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1058s, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1058s, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1058s));
  HQ1059_descriptor_ = file->message_type(18);
  static const int HQ1059_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1059, smarketno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1059, srecordno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1059, sreportseat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1059, sstockcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1059, dentrustprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1059, dentrustamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1059, sside_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1059, stransactdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1059, stransacttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1059, iexpirationdays_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1059, iexpirationtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1059, sexectype_),
  };
  HQ1059_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1059_descriptor_,
      HQ1059::default_instance_,
      HQ1059_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1059, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1059, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1059));
  HQ1059s_descriptor_ = file->message_type(19);
  static const int HQ1059s_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1059s, rhq1059_),
  };
  HQ1059s_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1059s_descriptor_,
      HQ1059s::default_instance_,
      HQ1059s_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1059s, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1059s, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1059s));
  HQ1060_descriptor_ = file->message_type(20);
  static const int HQ1060_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1060, smarketno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1060, sstockcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1060, sstockname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1060, stradingphasecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1060, dprevclosepx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1060, dnumtrades_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1060, dtotalvolumetrade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1060, dtotalvaluetrade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1060, dreferprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1060, dbuyamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1060, dsaleamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1060, stimestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1060, iinitdate_),
  };
  HQ1060_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1060_descriptor_,
      HQ1060::default_instance_,
      HQ1060_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1060, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1060, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1060));
  HQ1060s_descriptor_ = file->message_type(21);
  static const int HQ1060s_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1060s, rhq1060_),
  };
  HQ1060s_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1060s_descriptor_,
      HQ1060s::default_instance_,
      HQ1060s_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1060s, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1060s, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1060s));
  HQ1061_descriptor_ = file->message_type(22);
  static const int HQ1061_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1061, smarketno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1061, sstockcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1061, sstockname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1061, stradingphasecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1061, dprevclosepx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1061, dnumtrades_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1061, dtotalvolumetrade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1061, dtotalvaluetrade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1061, dreferprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1061, dbuyamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1061, dsaleamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1061, stimestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1061, iinitdate_),
  };
  HQ1061_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1061_descriptor_,
      HQ1061::default_instance_,
      HQ1061_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1061, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1061, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1061));
  HQ1061s_descriptor_ = file->message_type(23);
  static const int HQ1061s_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1061s, rhq1061_),
  };
  HQ1061s_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1061s_descriptor_,
      HQ1061s::default_instance_,
      HQ1061s_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1061s, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1061s, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1061s));
  HQ1069_descriptor_ = file->message_type(24);
  static const int HQ1069_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1069, iinitdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1069, imarginlegid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1069, smarketno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1069, sentrustbs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1069, skindtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1069, sruletype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1069, sstockcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1069, sfirstcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1069, sfirstbs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1069, ifirstration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1069, ssecondcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1069, ssecondbs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1069, isecondration_),
  };
  HQ1069_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1069_descriptor_,
      HQ1069::default_instance_,
      HQ1069_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1069, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1069, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1069));
  HQ1069s_descriptor_ = file->message_type(25);
  static const int HQ1069s_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1069s, rhq1069_),
  };
  HQ1069s_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1069s_descriptor_,
      HQ1069s::default_instance_,
      HQ1069s_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1069s, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1069s, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1069s));
  HQ1070_descriptor_ = file->message_type(26);
  static const int HQ1070_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, iinitdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, smarketno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, sstockcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, sstockname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, sbuyorderno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, ibuyquotetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, sbuyquoter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, dbuynetprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, dbuyqty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, dbuyallprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, dbuyprofitratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, ssaleorderno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, isalequotetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, ssalequoter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, dsalenetprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, dsaleqty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, dsaleallprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, dsaleprofitratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, daccruedinterest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, srecordstatus_),
  };
  HQ1070_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1070_descriptor_,
      HQ1070::default_instance_,
      HQ1070_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1070));
  HQ1070s_descriptor_ = file->message_type(27);
  static const int HQ1070s_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070s, rhq1070_),
  };
  HQ1070s_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1070s_descriptor_,
      HQ1070s::default_instance_,
      HQ1070s_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070s, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1070s, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1070s));
  HQ1071_descriptor_ = file->message_type(28);
  static const int HQ1071_offsets_[23] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, iinitdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, smarketno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, sstockcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, sstockname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, itimestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, dyesterdaycloseprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, dyesterdayweightedavgprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, dopenprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, dhighprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, dlowprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, dlastprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, dweightedavgprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, dtotalqty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, dtotalamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, dtotalnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, dyesterdaycloseyield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, dyesterdayweightedavgyield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, dopenyield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, dhighyield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, dlowyield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, dlastyield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, dweightedavgyield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, scodetype_),
  };
  HQ1071_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1071_descriptor_,
      HQ1071::default_instance_,
      HQ1071_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1071));
  HQ1071s_descriptor_ = file->message_type(29);
  static const int HQ1071s_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071s, rhq1071_),
  };
  HQ1071s_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HQ1071s_descriptor_,
      HQ1071s::default_instance_,
      HQ1071s_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071s, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HQ1071s, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HQ1071s));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_HQStock_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1008_descriptor_, &HQ1008::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1008s_descriptor_, &HQ1008s::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1001_descriptor_, &HQ1001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1001s_descriptor_, &HQ1001s::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1002_descriptor_, &HQ1002::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1002s_descriptor_, &HQ1002s::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1006_descriptor_, &HQ1006::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1006s_descriptor_, &HQ1006s::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1011_descriptor_, &HQ1011::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1011s_descriptor_, &HQ1011s::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1013_descriptor_, &HQ1013::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1013s_descriptor_, &HQ1013s::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1055_descriptor_, &HQ1055::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1055s_descriptor_, &HQ1055s::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1057_descriptor_, &HQ1057::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1057s_descriptor_, &HQ1057s::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1058_descriptor_, &HQ1058::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1058s_descriptor_, &HQ1058s::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1059_descriptor_, &HQ1059::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1059s_descriptor_, &HQ1059s::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1060_descriptor_, &HQ1060::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1060s_descriptor_, &HQ1060s::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1061_descriptor_, &HQ1061::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1061s_descriptor_, &HQ1061s::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1069_descriptor_, &HQ1069::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1069s_descriptor_, &HQ1069s::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1070_descriptor_, &HQ1070::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1070s_descriptor_, &HQ1070s::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1071_descriptor_, &HQ1071::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HQ1071s_descriptor_, &HQ1071s::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_HQStock_2eproto() {
  delete HQ1008::default_instance_;
  delete HQ1008_reflection_;
  delete HQ1008s::default_instance_;
  delete HQ1008s_reflection_;
  delete HQ1001::default_instance_;
  delete HQ1001_reflection_;
  delete HQ1001s::default_instance_;
  delete HQ1001s_reflection_;
  delete HQ1002::default_instance_;
  delete HQ1002_reflection_;
  delete HQ1002s::default_instance_;
  delete HQ1002s_reflection_;
  delete HQ1006::default_instance_;
  delete HQ1006_reflection_;
  delete HQ1006s::default_instance_;
  delete HQ1006s_reflection_;
  delete HQ1011::default_instance_;
  delete HQ1011_reflection_;
  delete HQ1011s::default_instance_;
  delete HQ1011s_reflection_;
  delete HQ1013::default_instance_;
  delete HQ1013_reflection_;
  delete HQ1013s::default_instance_;
  delete HQ1013s_reflection_;
  delete HQ1055::default_instance_;
  delete HQ1055_reflection_;
  delete HQ1055s::default_instance_;
  delete HQ1055s_reflection_;
  delete HQ1057::default_instance_;
  delete HQ1057_reflection_;
  delete HQ1057s::default_instance_;
  delete HQ1057s_reflection_;
  delete HQ1058::default_instance_;
  delete HQ1058_reflection_;
  delete HQ1058s::default_instance_;
  delete HQ1058s_reflection_;
  delete HQ1059::default_instance_;
  delete HQ1059_reflection_;
  delete HQ1059s::default_instance_;
  delete HQ1059s_reflection_;
  delete HQ1060::default_instance_;
  delete HQ1060_reflection_;
  delete HQ1060s::default_instance_;
  delete HQ1060s_reflection_;
  delete HQ1061::default_instance_;
  delete HQ1061_reflection_;
  delete HQ1061s::default_instance_;
  delete HQ1061s_reflection_;
  delete HQ1069::default_instance_;
  delete HQ1069_reflection_;
  delete HQ1069s::default_instance_;
  delete HQ1069s_reflection_;
  delete HQ1070::default_instance_;
  delete HQ1070_reflection_;
  delete HQ1070s::default_instance_;
  delete HQ1070s_reflection_;
  delete HQ1071::default_instance_;
  delete HQ1071_reflection_;
  delete HQ1071s::default_instance_;
  delete HQ1071s_reflection_;
}

void protobuf_AddDesc_HQStock_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rHQStock.proto\022\016HQStockPackage\"\256\013\n\006HQ10"
    "00\022\021\n\tsMarketNo\030\001 \002(\t\022\022\n\nsStockCode\030\002 \002("
    "\t\022\032\n\022sAbsoluteTimeStamp\030\003 \001(\t\022\026\n\016dPreclo"
    "sePrice\030\004 \001(\001\022\022\n\ndOpenPrice\030\005 \001(\001\022\022\n\ndLa"
    "stPrice\030\006 \001(\001\022\022\n\ndHighPrice\030\007 \001(\001\022\021\n\tdLo"
    "wPrice\030\010 \001(\001\022\023\n\013dClosePrice\030\t \001(\001\022\021\n\tdAv"
    "gPrice\030\n \001(\001\022\027\n\017dBusinessAmount\030\013 \001(\001\022\030\n"
    "\020dBusinessBalance\030\014 \001(\001\022\020\n\010dUpPrice\030\r \001("
    "\001\022\022\n\ndDownPrice\030\016 \001(\001\022\026\n\016dCurrentAmount\030"
    "\017 \001(\001\022\017\n\007dAmount\030\020 \001(\001\022\022\n\ndPreAmount\030\021 \001"
    "(\001\022\026\n\016dPreSettlement\030\022 \001(\001\022\023\n\013dSettleMen"
    "t\030\023 \001(\001\022\r\n\005dIopv\030\024 \001(\001\022\031\n\021sTradingPhaseC"
    "ode\030\025 \001(\t\022\025\n\rdAuctionPrice\030\026 \001(\001\022\023\n\013dMat"
    "chedQty\030\027 \001(\001\022\024\n\014dFundT1Price\030\030 \001(\001\022\021\n\ts"
    "FundType\030\031 \001(\t\022\031\n\021dMarketDealAmount\030\032 \001("
    "\001\022\021\n\tsStopFlag\030\033 \001(\t\022\021\n\tsBsStatus\030\034 \001(\t\022"
    "\032\n\022sLatestEnquiryTime\030\035 \001(\t\022\024\n\014dBusinWei"
    "ght\030\036 \001(\001\022\022\n\ndBuyPrice1\030\037 \001(\001\022\022\n\ndBuyPri"
    "ce2\030  \001(\001\022\022\n\ndBuyPrice3\030! \001(\001\022\022\n\ndBuyPri"
    "ce4\030\" \001(\001\022\022\n\ndBuyPrice5\030# \001(\001\022\023\n\013dSalePr"
    "ice1\030$ \001(\001\022\023\n\013dSalePrice2\030% \001(\001\022\023\n\013dSale"
    "Price3\030& \001(\001\022\023\n\013dSalePrice4\030\' \001(\001\022\023\n\013dSa"
    "lePrice5\030( \001(\001\022\020\n\010dBuyQty1\030) \001(\001\022\020\n\010dBuy"
    "Qty2\030* \001(\001\022\020\n\010dBuyQty3\030+ \001(\001\022\020\n\010dBuyQty4"
    "\030, \001(\001\022\020\n\010dBuyQty5\030- \001(\001\022\021\n\tdSaleQty1\030. "
    "\001(\001\022\021\n\tdSaleQty2\030/ \001(\001\022\021\n\tdSaleQty3\0300 \001("
    "\001\022\021\n\tdSaleQty4\0301 \001(\001\022\021\n\tdSaleQty5\0302 \001(\001\022"
    "\022\n\nsStockName\0303 \001(\014\022\026\n\016dAnountPerHand\0304 "
    "\001(\001\022\027\n\017dTotalbuyAmount\0305 \001(\001\022\030\n\020dTotalSa"
    "leAmount\0306 \001(\001\022\020\n\010dCJBiShu\0307 \001(\001\022\024\n\014dRea"
    "lavgRate\0308 \001(\001\022\023\n\013dPreavgRate\0309 \001(\001\022\021\n\ti"
    "InitDate\030: \001(\005\022\013\n\003dPe\030; \001(\001\022\014\n\004dPe2\030< \001("
    "\001\022\021\n\tiLayering\030= \001(\005\022\016\n\006iZSSSL\030> \001(\005\022\022\n\n"
    "sStockType\030\? \001(\t\022\021\n\tsCodeType\030@ \001(\t\022\023\n\013i"
    "StrikeDate\030A \001(\005\022\023\n\013iExpireDate\030B \001(\005\022\031\n"
    "\021dMaxLimitedAmount\030C \001(\001\022\030\n\020dMaxMarketAm"
    "ount\030D \001(\001\022\024\n\014dHoldBalance\030E \001(\001\022\016\n\006dDel"
    "ta\030F \001(\001\"2\n\007HQ1008s\022\'\n\007rHQ1008\030\001 \003(\0132\026.H"
    "QStockPackage.HQ1008\"\250\001\n\006HQ1001\022\021\n\tsMark"
    "etNo\030\001 \002(\t\022\022\n\nsStockCode\030\002 \002(\t\022\022\n\nsTimeS"
    "tamp\030\003 \001(\t\022\027\n\017dReferencePrice\030\004 \001(\001\022\020\n\010d"
    "UpPrice\030\005 \001(\001\022\022\n\ndDownPrice\030\006 \001(\001\022\022\n\nsBe"
    "ginTime\030\007 \001(\t\022\020\n\010sEndTime\030\010 \001(\t\"2\n\007HQ100"
    "1s\022\'\n\007rHQ1001\030\001 \003(\0132\026.HQStockPackage.HQ1"
    "001\"\320\001\n\006HQ1002\022\021\n\tsMarketNo\030\001 \002(\t\022\022\n\nsSt"
    "ockCode\030\002 \002(\t\022\022\n\ndPopcPrice\030\003 \001(\001\022\r\n\005dSv"
    "ol\030\004 \001(\001\022\027\n\017dReferencePrice\030\005 \001(\001\022\020\n\010dUp"
    "Price\030\006 \001(\001\022\022\n\ndDownPrice\030\007 \001(\001\022\017\n\007dAmou"
    "nt\030\010 \001(\001\022\030\n\020sOrdImbDirection\030\t \001(\t\022\022\n\nsT"
    "imeStamp\030\n \001(\t\"2\n\007HQ1002s\022\'\n\007rHQ1002\030\001 \003"
    "(\0132\026.HQStockPackage.HQ1002\"\\\n\006HQ1006\022\021\n\t"
    "sMarketNo\030\001 \002(\t\022\022\n\nsStockCode\030\002 \002(\t\022\024\n\014s"
    "TradeStatus\030\003 \001(\t\022\025\n\rdNominalPrice\030\004 \001(\001"
    "\"2\n\007HQ1006s\022\'\n\007rHQ1006\030\001 \003(\0132\026.HQStockPa"
    "ckage.HQ1006\"Y\n\006HQ1011\022\021\n\tsMarketNo\030\001 \002("
    "\t\022\022\n\nsStockCode\030\002 \002(\t\022\022\n\nsTimeStamp\030\003 \001("
    "\t\022\024\n\014dSpecialMark\030\004 \001(\003\"2\n\007HQ1011s\022\'\n\007rH"
    "Q1011\030\001 \003(\0132\026.HQStockPackage.HQ1011\"\262\002\n\006"
    "HQ1013\022\021\n\tsMarketNo\030\001 \002(\t\022\021\n\tsRecordNo\030\002"
    " \002(\t\022\023\n\013sReportSeat\030\003 \002(\t\022\022\n\nsStockCode\030"
    "\004 \001(\t\022\025\n\rdEntrustPrice\030\005 \001(\001\022\026\n\016dEntrust"
    "Amount\030\006 \001(\001\022\r\n\005sSide\030\007 \001(\t\022\024\n\014sContactI"
    "nfo\030\010 \001(\014\022\025\n\rsTransactDate\030\t \002(\t\022\025\n\rsTra"
    "nsactTime\030\n \001(\t\022\022\n\nsTransType\030\013 \001(\t\022\022\n\ns"
    "ConfirmID\030\014 \001(\t\022\034\n\024sBulkunderweightFlag\030"
    "\r \001(\t\022\021\n\tsExecType\030\016 \001(\t\"2\n\007HQ1013s\022\'\n\007r"
    "HQ1013\030\001 \003(\0132\026.HQStockPackage.HQ1013\"\376\001\n"
    "\006HQ1055\022\021\n\tsMarketNo\030\001 \002(\t\022\022\n\nsStockCode"
    "\030\002 \002(\t\022\022\n\nsStockName\030\003 \001(\014\022\027\n\017dBusinessA"
    "mount\030\004 \001(\001\022\030\n\020dBusinessBalance\030\005 \001(\001\022\023\n"
    "\013dClosePrice\030\006 \001(\001\022\022\n\ndBuyVolume\030\007 \001(\001\022\023"
    "\n\013dSellVolume\030\010 \001(\001\022\031\n\021sTradingPhaseCode"
    "\030\t \001(\t\022\032\n\022sAbsoluteTimeStamp\030\n \001(\t\022\021\n\tiI"
    "nitDate\030\013 \001(\005\"2\n\007HQ1055s\022\'\n\007rHQ1055\030\001 \003("
    "\0132\026.HQStockPackage.HQ1055\"\266\001\n\006HQ1057\022\021\n\t"
    "sMarketNo\030\001 \002(\t\022\022\n\nsStockCode\030\002 \002(\t\022\023\n\013s"
    "TradingDay\030\003 \001(\t\022\026\n\016sForquoteSysId\030\004 \001(\t"
    "\022\025\n\rsForquoteTime\030\005 \001(\t\022\022\n\nsActionDay\030\006 "
    "\001(\t\022\032\n\022sAbsoluteTimeStamp\030\007 \001(\t\022\021\n\tiInit"
    "Date\030\010 \001(\005\"2\n\007HQ1057s\022\'\n\007rHQ1057\030\001 \003(\0132\026"
    ".HQStockPackage.HQ1057\"s\n\006HQ1058\022\021\n\tsMar"
    "ketNo\030\001 \002(\t\022\030\n\020dThresholdAmount\030\002 \001(\001\022\017\n"
    "\007dPosAmt\030\003 \001(\001\022\025\n\riAmountStatus\030\004 \001(\005\022\024\n"
    "\014sTradeStatus\030\005 \001(\t\"2\n\007HQ1058s\022\'\n\007rHQ105"
    "8\030\001 \003(\0132\026.HQStockPackage.HQ1058\"\210\002\n\006HQ10"
    "59\022\021\n\tsMarketNo\030\001 \002(\t\022\021\n\tsRecordNo\030\002 \002(\t"
    "\022\023\n\013sReportSeat\030\003 \002(\t\022\022\n\nsStockCode\030\004 \001("
    "\t\022\025\n\rdEntrustPrice\030\005 \001(\001\022\026\n\016dEntrustAmou"
    "nt\030\006 \001(\001\022\r\n\005sSide\030\007 \001(\t\022\025\n\rsTransactDate"
    "\030\010 \002(\t\022\025\n\rsTransactTime\030\t \001(\t\022\027\n\017iExpira"
    "tionDays\030\n \001(\005\022\027\n\017iExpirationType\030\013 \001(\005\022"
    "\021\n\tsExecType\030\014 \001(\t\"2\n\007HQ1059s\022\'\n\007rHQ1059"
    "\030\001 \003(\0132\026.HQStockPackage.HQ1059\"\242\002\n\006HQ106"
    "0\022\021\n\tsMarketNo\030\001 \002(\t\022\022\n\nsStockCode\030\002 \002(\t"
    "\022\022\n\nsStockName\030\003 \001(\014\022\031\n\021sTradingPhaseCod"
    "e\030\004 \001(\t\022\024\n\014dPrevClosePx\030\005 \001(\001\022\022\n\ndNumTra"
    "des\030\006 \001(\001\022\031\n\021dTotalVolumeTrade\030\007 \001(\001\022\030\n\020"
    "dTotalValueTrade\030\010 \001(\001\022\023\n\013dReferPrice\030\t "
    "\001(\001\022\022\n\ndBuyAmount\030\n \001(\001\022\023\n\013dSaleAmount\030\013"
    " \001(\001\022\022\n\nsTimeStamp\030\014 \001(\t\022\021\n\tiInitDate\030\r "
    "\001(\005\"2\n\007HQ1060s\022\'\n\007rHQ1060\030\001 \003(\0132\026.HQStoc"
    "kPackage.HQ1060\"\242\002\n\006HQ1061\022\021\n\tsMarketNo\030"
    "\001 \002(\t\022\022\n\nsStockCode\030\002 \002(\t\022\022\n\nsStockName\030"
    "\003 \001(\014\022\031\n\021sTradingPhaseCode\030\004 \001(\t\022\024\n\014dPre"
    "vClosePx\030\005 \001(\001\022\022\n\ndNumTrades\030\006 \001(\001\022\031\n\021dT"
    "otalVolumeTrade\030\007 \001(\001\022\030\n\020dTotalValueTrad"
    "e\030\010 \001(\001\022\023\n\013dReferPrice\030\t \001(\001\022\022\n\ndBuyAmou"
    "nt\030\n \001(\001\022\023\n\013dSaleAmount\030\013 \001(\001\022\022\n\nsTimeSt"
    "amp\030\014 \001(\t\022\021\n\tiInitDate\030\r \001(\005\"2\n\007HQ1061s\022"
    "\'\n\007rHQ1061\030\001 \003(\0132\026.HQStockPackage.HQ1061"
    "\"\215\002\n\006HQ1069\022\021\n\tiInitDate\030\001 \001(\005\022\024\n\014iMargi"
    "nlegID\030\002 \001(\005\022\021\n\tsMarketNo\030\003 \002(\t\022\022\n\nsEntr"
    "ustBs\030\004 \001(\t\022\021\n\tsKindType\030\005 \001(\t\022\021\n\tsRuleT"
    "ype\030\006 \001(\t\022\022\n\nsStockCode\030\007 \002(\t\022\022\n\nsFirstC"
    "ode\030\010 \001(\t\022\020\n\010sFirstBs\030\t \001(\t\022\024\n\014iFirstRat"
    "ion\030\n \001(\005\022\023\n\013sSecondCode\030\013 \001(\t\022\021\n\tsSecon"
    "dBs\030\014 \001(\t\022\025\n\riSecondRation\030\r \001(\005\"2\n\007HQ10"
    "69s\022\'\n\007rHQ1069\030\001 \003(\0132\026.HQStockPackage.HQ"
    "1069\"\272\003\n\006HQ1070\022\021\n\tiInitDate\030\001 \001(\005\022\021\n\tsM"
    "arketNo\030\002 \002(\t\022\022\n\nsStockCode\030\003 \002(\t\022\022\n\nsSt"
    "ockName\030\004 \001(\014\022\023\n\013sBuyOrderNo\030\005 \001(\t\022\025\n\riB"
    "uyQuoteTime\030\006 \001(\005\022\022\n\nsBuyQuoter\030\007 \001(\014\022\024\n"
    "\014dBuyNetPrice\030\010 \001(\001\022\017\n\007dBuyQty\030\t \001(\001\022\024\n\014"
    "dBuyAllPrice\030\n \001(\001\022\027\n\017dBuyProfitRatio\030\013 "
    "\001(\001\022\024\n\014sSaleOrderNo\030\014 \001(\t\022\026\n\016iSaleQuoteT"
    "ime\030\r \001(\005\022\023\n\013sSaleQuoter\030\016 \001(\014\022\025\n\rdSaleN"
    "etPrice\030\017 \001(\001\022\020\n\010dSaleQty\030\020 \001(\001\022\025\n\rdSale"
    "AllPrice\030\021 \001(\001\022\030\n\020dSaleProfitRatio\030\022 \001(\001"
    "\022\030\n\020dAccruedInterest\030\023 \001(\001\022\025\n\rsRecordSta"
    "tus\030\024 \001(\t\"2\n\007HQ1070s\022\'\n\007rHQ1070\030\001 \003(\0132\026."
    "HQStockPackage.HQ1070\"\221\004\n\006HQ1071\022\021\n\tiIni"
    "tDate\030\001 \001(\005\022\021\n\tsMarketNo\030\002 \002(\t\022\022\n\nsStock"
    "Code\030\003 \002(\t\022\022\n\nsStockName\030\004 \001(\014\022\022\n\niTimeS"
    "tamp\030\005 \001(\005\022\034\n\024dYesterdayClosePrice\030\006 \001(\001"
    "\022\"\n\032dYesterdayWeightedAvgPrice\030\007 \001(\001\022\022\n\n"
    "dOpenPrice\030\010 \001(\001\022\022\n\ndHighPrice\030\t \001(\001\022\021\n\t"
    "dLowPrice\030\n \001(\001\022\022\n\ndLastPrice\030\013 \001(\001\022\031\n\021d"
    "WeightedAvgPrice\030\014 \001(\001\022\021\n\tdTotalQty\030\r \001("
    "\001\022\024\n\014dTotalAmount\030\016 \001(\001\022\021\n\tdTotalNum\030\017 \001"
    "(\001\022\034\n\024dYesterdayCloseYield\030\020 \001(\001\022\"\n\032dYes"
    "terdayWeightedAvgYield\030\021 \001(\001\022\022\n\ndOpenYie"
    "ld\030\022 \001(\001\022\022\n\ndHighYield\030\023 \001(\001\022\021\n\tdLowYiel"
    "d\030\024 \001(\001\022\022\n\ndLastYield\030\025 \001(\001\022\031\n\021dWeighted"
    "AvgYield\030\026 \001(\001\022\021\n\tsCodeType\030\027 \001(\t\"2\n\007HQ1"
    "071s\022\'\n\007rHQ1071\030\001 \003(\0132\026.HQStockPackage.H"
    "Q1071", 5805);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "HQStock.proto", &protobuf_RegisterTypes);
  HQ1008::default_instance_ = new HQ1008();
  HQ1008s::default_instance_ = new HQ1008s();
  HQ1001::default_instance_ = new HQ1001();
  HQ1001s::default_instance_ = new HQ1001s();
  HQ1002::default_instance_ = new HQ1002();
  HQ1002s::default_instance_ = new HQ1002s();
  HQ1006::default_instance_ = new HQ1006();
  HQ1006s::default_instance_ = new HQ1006s();
  HQ1011::default_instance_ = new HQ1011();
  HQ1011s::default_instance_ = new HQ1011s();
  HQ1013::default_instance_ = new HQ1013();
  HQ1013s::default_instance_ = new HQ1013s();
  HQ1055::default_instance_ = new HQ1055();
  HQ1055s::default_instance_ = new HQ1055s();
  HQ1057::default_instance_ = new HQ1057();
  HQ1057s::default_instance_ = new HQ1057s();
  HQ1058::default_instance_ = new HQ1058();
  HQ1058s::default_instance_ = new HQ1058s();
  HQ1059::default_instance_ = new HQ1059();
  HQ1059s::default_instance_ = new HQ1059s();
  HQ1060::default_instance_ = new HQ1060();
  HQ1060s::default_instance_ = new HQ1060s();
  HQ1061::default_instance_ = new HQ1061();
  HQ1061s::default_instance_ = new HQ1061s();
  HQ1069::default_instance_ = new HQ1069();
  HQ1069s::default_instance_ = new HQ1069s();
  HQ1070::default_instance_ = new HQ1070();
  HQ1070s::default_instance_ = new HQ1070s();
  HQ1071::default_instance_ = new HQ1071();
  HQ1071s::default_instance_ = new HQ1071s();
  HQ1008::default_instance_->InitAsDefaultInstance();
  HQ1008s::default_instance_->InitAsDefaultInstance();
  HQ1001::default_instance_->InitAsDefaultInstance();
  HQ1001s::default_instance_->InitAsDefaultInstance();
  HQ1002::default_instance_->InitAsDefaultInstance();
  HQ1002s::default_instance_->InitAsDefaultInstance();
  HQ1006::default_instance_->InitAsDefaultInstance();
  HQ1006s::default_instance_->InitAsDefaultInstance();
  HQ1011::default_instance_->InitAsDefaultInstance();
  HQ1011s::default_instance_->InitAsDefaultInstance();
  HQ1013::default_instance_->InitAsDefaultInstance();
  HQ1013s::default_instance_->InitAsDefaultInstance();
  HQ1055::default_instance_->InitAsDefaultInstance();
  HQ1055s::default_instance_->InitAsDefaultInstance();
  HQ1057::default_instance_->InitAsDefaultInstance();
  HQ1057s::default_instance_->InitAsDefaultInstance();
  HQ1058::default_instance_->InitAsDefaultInstance();
  HQ1058s::default_instance_->InitAsDefaultInstance();
  HQ1059::default_instance_->InitAsDefaultInstance();
  HQ1059s::default_instance_->InitAsDefaultInstance();
  HQ1060::default_instance_->InitAsDefaultInstance();
  HQ1060s::default_instance_->InitAsDefaultInstance();
  HQ1061::default_instance_->InitAsDefaultInstance();
  HQ1061s::default_instance_->InitAsDefaultInstance();
  HQ1069::default_instance_->InitAsDefaultInstance();
  HQ1069s::default_instance_->InitAsDefaultInstance();
  HQ1070::default_instance_->InitAsDefaultInstance();
  HQ1070s::default_instance_->InitAsDefaultInstance();
  HQ1071::default_instance_->InitAsDefaultInstance();
  HQ1071s::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_HQStock_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_HQStock_2eproto {
  StaticDescriptorInitializer_HQStock_2eproto() {
    protobuf_AddDesc_HQStock_2eproto();
  }
} static_descriptor_initializer_HQStock_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int HQ1008::kSMarketNoFieldNumber;
const int HQ1008::kSStockCodeFieldNumber;
const int HQ1008::kSAbsoluteTimeStampFieldNumber;
const int HQ1008::kDPreclosePriceFieldNumber;
const int HQ1008::kDOpenPriceFieldNumber;
const int HQ1008::kDLastPriceFieldNumber;
const int HQ1008::kDHighPriceFieldNumber;
const int HQ1008::kDLowPriceFieldNumber;
const int HQ1008::kDClosePriceFieldNumber;
const int HQ1008::kDAvgPriceFieldNumber;
const int HQ1008::kDBusinessAmountFieldNumber;
const int HQ1008::kDBusinessBalanceFieldNumber;
const int HQ1008::kDUpPriceFieldNumber;
const int HQ1008::kDDownPriceFieldNumber;
const int HQ1008::kDCurrentAmountFieldNumber;
const int HQ1008::kDAmountFieldNumber;
const int HQ1008::kDPreAmountFieldNumber;
const int HQ1008::kDPreSettlementFieldNumber;
const int HQ1008::kDSettleMentFieldNumber;
const int HQ1008::kDIopvFieldNumber;
const int HQ1008::kSTradingPhaseCodeFieldNumber;
const int HQ1008::kDAuctionPriceFieldNumber;
const int HQ1008::kDMatchedQtyFieldNumber;
const int HQ1008::kDFundT1PriceFieldNumber;
const int HQ1008::kSFundTypeFieldNumber;
const int HQ1008::kDMarketDealAmountFieldNumber;
const int HQ1008::kSStopFlagFieldNumber;
const int HQ1008::kSBsStatusFieldNumber;
const int HQ1008::kSLatestEnquiryTimeFieldNumber;
const int HQ1008::kDBusinWeightFieldNumber;
const int HQ1008::kDBuyPrice1FieldNumber;
const int HQ1008::kDBuyPrice2FieldNumber;
const int HQ1008::kDBuyPrice3FieldNumber;
const int HQ1008::kDBuyPrice4FieldNumber;
const int HQ1008::kDBuyPrice5FieldNumber;
const int HQ1008::kDSalePrice1FieldNumber;
const int HQ1008::kDSalePrice2FieldNumber;
const int HQ1008::kDSalePrice3FieldNumber;
const int HQ1008::kDSalePrice4FieldNumber;
const int HQ1008::kDSalePrice5FieldNumber;
const int HQ1008::kDBuyQty1FieldNumber;
const int HQ1008::kDBuyQty2FieldNumber;
const int HQ1008::kDBuyQty3FieldNumber;
const int HQ1008::kDBuyQty4FieldNumber;
const int HQ1008::kDBuyQty5FieldNumber;
const int HQ1008::kDSaleQty1FieldNumber;
const int HQ1008::kDSaleQty2FieldNumber;
const int HQ1008::kDSaleQty3FieldNumber;
const int HQ1008::kDSaleQty4FieldNumber;
const int HQ1008::kDSaleQty5FieldNumber;
const int HQ1008::kSStockNameFieldNumber;
const int HQ1008::kDAnountPerHandFieldNumber;
const int HQ1008::kDTotalbuyAmountFieldNumber;
const int HQ1008::kDTotalSaleAmountFieldNumber;
const int HQ1008::kDCJBiShuFieldNumber;
const int HQ1008::kDRealavgRateFieldNumber;
const int HQ1008::kDPreavgRateFieldNumber;
const int HQ1008::kIInitDateFieldNumber;
const int HQ1008::kDPeFieldNumber;
const int HQ1008::kDPe2FieldNumber;
const int HQ1008::kILayeringFieldNumber;
const int HQ1008::kIZSSSLFieldNumber;
const int HQ1008::kSStockTypeFieldNumber;
const int HQ1008::kSCodeTypeFieldNumber;
const int HQ1008::kIStrikeDateFieldNumber;
const int HQ1008::kIExpireDateFieldNumber;
const int HQ1008::kDMaxLimitedAmountFieldNumber;
const int HQ1008::kDMaxMarketAmountFieldNumber;
const int HQ1008::kDHoldBalanceFieldNumber;
const int HQ1008::kDDeltaFieldNumber;
#endif  // !_MSC_VER

HQ1008::HQ1008()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1008)
}

void HQ1008::InitAsDefaultInstance() {
}

HQ1008::HQ1008(const HQ1008& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1008)
}

void HQ1008::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sabsolutetimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dprecloseprice_ = 0;
  dopenprice_ = 0;
  dlastprice_ = 0;
  dhighprice_ = 0;
  dlowprice_ = 0;
  dcloseprice_ = 0;
  davgprice_ = 0;
  dbusinessamount_ = 0;
  dbusinessbalance_ = 0;
  dupprice_ = 0;
  ddownprice_ = 0;
  dcurrentamount_ = 0;
  damount_ = 0;
  dpreamount_ = 0;
  dpresettlement_ = 0;
  dsettlement_ = 0;
  diopv_ = 0;
  stradingphasecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dauctionprice_ = 0;
  dmatchedqty_ = 0;
  dfundt1price_ = 0;
  sfundtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dmarketdealamount_ = 0;
  sstopflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sbsstatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slatestenquirytime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dbusinweight_ = 0;
  dbuyprice1_ = 0;
  dbuyprice2_ = 0;
  dbuyprice3_ = 0;
  dbuyprice4_ = 0;
  dbuyprice5_ = 0;
  dsaleprice1_ = 0;
  dsaleprice2_ = 0;
  dsaleprice3_ = 0;
  dsaleprice4_ = 0;
  dsaleprice5_ = 0;
  dbuyqty1_ = 0;
  dbuyqty2_ = 0;
  dbuyqty3_ = 0;
  dbuyqty4_ = 0;
  dbuyqty5_ = 0;
  dsaleqty1_ = 0;
  dsaleqty2_ = 0;
  dsaleqty3_ = 0;
  dsaleqty4_ = 0;
  dsaleqty5_ = 0;
  sstockname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  danountperhand_ = 0;
  dtotalbuyamount_ = 0;
  dtotalsaleamount_ = 0;
  dcjbishu_ = 0;
  drealavgrate_ = 0;
  dpreavgrate_ = 0;
  iinitdate_ = 0;
  dpe_ = 0;
  dpe2_ = 0;
  ilayering_ = 0;
  izsssl_ = 0;
  sstocktype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scodetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  istrikedate_ = 0;
  iexpiredate_ = 0;
  dmaxlimitedamount_ = 0;
  dmaxmarketamount_ = 0;
  dholdbalance_ = 0;
  ddelta_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1008::~HQ1008() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1008)
  SharedDtor();
}

void HQ1008::SharedDtor() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sabsolutetimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sabsolutetimestamp_;
  }
  if (stradingphasecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stradingphasecode_;
  }
  if (sfundtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sfundtype_;
  }
  if (sstopflag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstopflag_;
  }
  if (sbsstatus_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sbsstatus_;
  }
  if (slatestenquirytime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete slatestenquirytime_;
  }
  if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockname_;
  }
  if (sstocktype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstocktype_;
  }
  if (scodetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scodetype_;
  }
  if (this != default_instance_) {
  }
}

void HQ1008::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1008::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1008_descriptor_;
}

const HQ1008& HQ1008::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1008* HQ1008::default_instance_ = NULL;

HQ1008* HQ1008::New() const {
  return new HQ1008;
}

void HQ1008::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HQ1008*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(dprecloseprice_, dlowprice_);
    if (has_smarketno()) {
      if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        smarketno_->clear();
      }
    }
    if (has_sstockcode()) {
      if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstockcode_->clear();
      }
    }
    if (has_sabsolutetimestamp()) {
      if (sabsolutetimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sabsolutetimestamp_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(dcloseprice_, damount_);
  }
  if (_has_bits_[16 / 32] & 16711680) {
    ZR_(dpreamount_, diopv_);
    ZR_(dauctionprice_, dfundt1price_);
    if (has_stradingphasecode()) {
      if (stradingphasecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stradingphasecode_->clear();
      }
    }
  }
  if (_has_bits_[24 / 32] & 4278190080) {
    ZR_(dbusinweight_, dbuyprice2_);
    if (has_sfundtype()) {
      if (sfundtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sfundtype_->clear();
      }
    }
    dmarketdealamount_ = 0;
    if (has_sstopflag()) {
      if (sstopflag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstopflag_->clear();
      }
    }
    if (has_sbsstatus()) {
      if (sbsstatus_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sbsstatus_->clear();
      }
    }
    if (has_slatestenquirytime()) {
      if (slatestenquirytime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        slatestenquirytime_->clear();
      }
    }
  }
  if (_has_bits_[32 / 32] & 255) {
    ZR_(dbuyprice3_, dsaleprice5_);
  }
  if (_has_bits_[40 / 32] & 65280) {
    ZR_(dbuyqty1_, dsaleqty3_);
  }
  if (_has_bits_[48 / 32] & 16711680) {
    ZR_(dsaleqty4_, dsaleqty5_);
    ZR_(danountperhand_, drealavgrate_);
    if (has_sstockname()) {
      if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstockname_->clear();
      }
    }
  }
  if (_has_bits_[56 / 32] & 4278190080) {
    ZR_(dpreavgrate_, dpe2_);
    izsssl_ = 0;
    if (has_sstocktype()) {
      if (sstocktype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstocktype_->clear();
      }
    }
    if (has_scodetype()) {
      if (scodetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        scodetype_->clear();
      }
    }
  }
  if (_has_bits_[64 / 32] & 63) {
    ZR_(dmaxlimitedamount_, iexpiredate_);
    istrikedate_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1008::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1008)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sMarketNo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smarketno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smarketno().data(), this->smarketno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "smarketno");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sStockCode;
        break;
      }

      // required string sStockCode = 2;
      case 2: {
        if (tag == 18) {
         parse_sStockCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstockcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstockcode().data(), this->sstockcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstockcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sAbsoluteTimeStamp;
        break;
      }

      // optional string sAbsoluteTimeStamp = 3;
      case 3: {
        if (tag == 26) {
         parse_sAbsoluteTimeStamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sabsolutetimestamp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sabsolutetimestamp().data(), this->sabsolutetimestamp().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sabsolutetimestamp");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_dPreclosePrice;
        break;
      }

      // optional double dPreclosePrice = 4;
      case 4: {
        if (tag == 33) {
         parse_dPreclosePrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dprecloseprice_)));
          set_has_dprecloseprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_dOpenPrice;
        break;
      }

      // optional double dOpenPrice = 5;
      case 5: {
        if (tag == 41) {
         parse_dOpenPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dopenprice_)));
          set_has_dopenprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_dLastPrice;
        break;
      }

      // optional double dLastPrice = 6;
      case 6: {
        if (tag == 49) {
         parse_dLastPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dlastprice_)));
          set_has_dlastprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_dHighPrice;
        break;
      }

      // optional double dHighPrice = 7;
      case 7: {
        if (tag == 57) {
         parse_dHighPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dhighprice_)));
          set_has_dhighprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_dLowPrice;
        break;
      }

      // optional double dLowPrice = 8;
      case 8: {
        if (tag == 65) {
         parse_dLowPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dlowprice_)));
          set_has_dlowprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_dClosePrice;
        break;
      }

      // optional double dClosePrice = 9;
      case 9: {
        if (tag == 73) {
         parse_dClosePrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dcloseprice_)));
          set_has_dcloseprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_dAvgPrice;
        break;
      }

      // optional double dAvgPrice = 10;
      case 10: {
        if (tag == 81) {
         parse_dAvgPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &davgprice_)));
          set_has_davgprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_dBusinessAmount;
        break;
      }

      // optional double dBusinessAmount = 11;
      case 11: {
        if (tag == 89) {
         parse_dBusinessAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbusinessamount_)));
          set_has_dbusinessamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_dBusinessBalance;
        break;
      }

      // optional double dBusinessBalance = 12;
      case 12: {
        if (tag == 97) {
         parse_dBusinessBalance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbusinessbalance_)));
          set_has_dbusinessbalance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_dUpPrice;
        break;
      }

      // optional double dUpPrice = 13;
      case 13: {
        if (tag == 105) {
         parse_dUpPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dupprice_)));
          set_has_dupprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_dDownPrice;
        break;
      }

      // optional double dDownPrice = 14;
      case 14: {
        if (tag == 113) {
         parse_dDownPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ddownprice_)));
          set_has_ddownprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_dCurrentAmount;
        break;
      }

      // optional double dCurrentAmount = 15;
      case 15: {
        if (tag == 121) {
         parse_dCurrentAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dcurrentamount_)));
          set_has_dcurrentamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(129)) goto parse_dAmount;
        break;
      }

      // optional double dAmount = 16;
      case 16: {
        if (tag == 129) {
         parse_dAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &damount_)));
          set_has_damount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(137)) goto parse_dPreAmount;
        break;
      }

      // optional double dPreAmount = 17;
      case 17: {
        if (tag == 137) {
         parse_dPreAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dpreamount_)));
          set_has_dpreamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(145)) goto parse_dPreSettlement;
        break;
      }

      // optional double dPreSettlement = 18;
      case 18: {
        if (tag == 145) {
         parse_dPreSettlement:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dpresettlement_)));
          set_has_dpresettlement();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(153)) goto parse_dSettleMent;
        break;
      }

      // optional double dSettleMent = 19;
      case 19: {
        if (tag == 153) {
         parse_dSettleMent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dsettlement_)));
          set_has_dsettlement();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(161)) goto parse_dIopv;
        break;
      }

      // optional double dIopv = 20;
      case 20: {
        if (tag == 161) {
         parse_dIopv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &diopv_)));
          set_has_diopv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_sTradingPhaseCode;
        break;
      }

      // optional string sTradingPhaseCode = 21;
      case 21: {
        if (tag == 170) {
         parse_sTradingPhaseCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stradingphasecode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stradingphasecode().data(), this->stradingphasecode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stradingphasecode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(177)) goto parse_dAuctionPrice;
        break;
      }

      // optional double dAuctionPrice = 22;
      case 22: {
        if (tag == 177) {
         parse_dAuctionPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dauctionprice_)));
          set_has_dauctionprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(185)) goto parse_dMatchedQty;
        break;
      }

      // optional double dMatchedQty = 23;
      case 23: {
        if (tag == 185) {
         parse_dMatchedQty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dmatchedqty_)));
          set_has_dmatchedqty();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(193)) goto parse_dFundT1Price;
        break;
      }

      // optional double dFundT1Price = 24;
      case 24: {
        if (tag == 193) {
         parse_dFundT1Price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dfundt1price_)));
          set_has_dfundt1price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_sFundType;
        break;
      }

      // optional string sFundType = 25;
      case 25: {
        if (tag == 202) {
         parse_sFundType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfundtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sfundtype().data(), this->sfundtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sfundtype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(209)) goto parse_dMarketDealAmount;
        break;
      }

      // optional double dMarketDealAmount = 26;
      case 26: {
        if (tag == 209) {
         parse_dMarketDealAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dmarketdealamount_)));
          set_has_dmarketdealamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(218)) goto parse_sStopFlag;
        break;
      }

      // optional string sStopFlag = 27;
      case 27: {
        if (tag == 218) {
         parse_sStopFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstopflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstopflag().data(), this->sstopflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstopflag");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(226)) goto parse_sBsStatus;
        break;
      }

      // optional string sBsStatus = 28;
      case 28: {
        if (tag == 226) {
         parse_sBsStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sbsstatus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sbsstatus().data(), this->sbsstatus().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sbsstatus");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(234)) goto parse_sLatestEnquiryTime;
        break;
      }

      // optional string sLatestEnquiryTime = 29;
      case 29: {
        if (tag == 234) {
         parse_sLatestEnquiryTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_slatestenquirytime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->slatestenquirytime().data(), this->slatestenquirytime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "slatestenquirytime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(241)) goto parse_dBusinWeight;
        break;
      }

      // optional double dBusinWeight = 30;
      case 30: {
        if (tag == 241) {
         parse_dBusinWeight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbusinweight_)));
          set_has_dbusinweight();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(249)) goto parse_dBuyPrice1;
        break;
      }

      // optional double dBuyPrice1 = 31;
      case 31: {
        if (tag == 249) {
         parse_dBuyPrice1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbuyprice1_)));
          set_has_dbuyprice1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(257)) goto parse_dBuyPrice2;
        break;
      }

      // optional double dBuyPrice2 = 32;
      case 32: {
        if (tag == 257) {
         parse_dBuyPrice2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbuyprice2_)));
          set_has_dbuyprice2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(265)) goto parse_dBuyPrice3;
        break;
      }

      // optional double dBuyPrice3 = 33;
      case 33: {
        if (tag == 265) {
         parse_dBuyPrice3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbuyprice3_)));
          set_has_dbuyprice3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(273)) goto parse_dBuyPrice4;
        break;
      }

      // optional double dBuyPrice4 = 34;
      case 34: {
        if (tag == 273) {
         parse_dBuyPrice4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbuyprice4_)));
          set_has_dbuyprice4();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(281)) goto parse_dBuyPrice5;
        break;
      }

      // optional double dBuyPrice5 = 35;
      case 35: {
        if (tag == 281) {
         parse_dBuyPrice5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbuyprice5_)));
          set_has_dbuyprice5();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(289)) goto parse_dSalePrice1;
        break;
      }

      // optional double dSalePrice1 = 36;
      case 36: {
        if (tag == 289) {
         parse_dSalePrice1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dsaleprice1_)));
          set_has_dsaleprice1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(297)) goto parse_dSalePrice2;
        break;
      }

      // optional double dSalePrice2 = 37;
      case 37: {
        if (tag == 297) {
         parse_dSalePrice2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dsaleprice2_)));
          set_has_dsaleprice2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(305)) goto parse_dSalePrice3;
        break;
      }

      // optional double dSalePrice3 = 38;
      case 38: {
        if (tag == 305) {
         parse_dSalePrice3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dsaleprice3_)));
          set_has_dsaleprice3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(313)) goto parse_dSalePrice4;
        break;
      }

      // optional double dSalePrice4 = 39;
      case 39: {
        if (tag == 313) {
         parse_dSalePrice4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dsaleprice4_)));
          set_has_dsaleprice4();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(321)) goto parse_dSalePrice5;
        break;
      }

      // optional double dSalePrice5 = 40;
      case 40: {
        if (tag == 321) {
         parse_dSalePrice5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dsaleprice5_)));
          set_has_dsaleprice5();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(329)) goto parse_dBuyQty1;
        break;
      }

      // optional double dBuyQty1 = 41;
      case 41: {
        if (tag == 329) {
         parse_dBuyQty1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbuyqty1_)));
          set_has_dbuyqty1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(337)) goto parse_dBuyQty2;
        break;
      }

      // optional double dBuyQty2 = 42;
      case 42: {
        if (tag == 337) {
         parse_dBuyQty2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbuyqty2_)));
          set_has_dbuyqty2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(345)) goto parse_dBuyQty3;
        break;
      }

      // optional double dBuyQty3 = 43;
      case 43: {
        if (tag == 345) {
         parse_dBuyQty3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbuyqty3_)));
          set_has_dbuyqty3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(353)) goto parse_dBuyQty4;
        break;
      }

      // optional double dBuyQty4 = 44;
      case 44: {
        if (tag == 353) {
         parse_dBuyQty4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbuyqty4_)));
          set_has_dbuyqty4();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(361)) goto parse_dBuyQty5;
        break;
      }

      // optional double dBuyQty5 = 45;
      case 45: {
        if (tag == 361) {
         parse_dBuyQty5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbuyqty5_)));
          set_has_dbuyqty5();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(369)) goto parse_dSaleQty1;
        break;
      }

      // optional double dSaleQty1 = 46;
      case 46: {
        if (tag == 369) {
         parse_dSaleQty1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dsaleqty1_)));
          set_has_dsaleqty1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(377)) goto parse_dSaleQty2;
        break;
      }

      // optional double dSaleQty2 = 47;
      case 47: {
        if (tag == 377) {
         parse_dSaleQty2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dsaleqty2_)));
          set_has_dsaleqty2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(385)) goto parse_dSaleQty3;
        break;
      }

      // optional double dSaleQty3 = 48;
      case 48: {
        if (tag == 385) {
         parse_dSaleQty3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dsaleqty3_)));
          set_has_dsaleqty3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(393)) goto parse_dSaleQty4;
        break;
      }

      // optional double dSaleQty4 = 49;
      case 49: {
        if (tag == 393) {
         parse_dSaleQty4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dsaleqty4_)));
          set_has_dsaleqty4();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(401)) goto parse_dSaleQty5;
        break;
      }

      // optional double dSaleQty5 = 50;
      case 50: {
        if (tag == 401) {
         parse_dSaleQty5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dsaleqty5_)));
          set_has_dsaleqty5();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(410)) goto parse_sStockName;
        break;
      }

      // optional bytes sStockName = 51;
      case 51: {
        if (tag == 410) {
         parse_sStockName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sstockname()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(417)) goto parse_dAnountPerHand;
        break;
      }

      // optional double dAnountPerHand = 52;
      case 52: {
        if (tag == 417) {
         parse_dAnountPerHand:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &danountperhand_)));
          set_has_danountperhand();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(425)) goto parse_dTotalbuyAmount;
        break;
      }

      // optional double dTotalbuyAmount = 53;
      case 53: {
        if (tag == 425) {
         parse_dTotalbuyAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dtotalbuyamount_)));
          set_has_dtotalbuyamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(433)) goto parse_dTotalSaleAmount;
        break;
      }

      // optional double dTotalSaleAmount = 54;
      case 54: {
        if (tag == 433) {
         parse_dTotalSaleAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dtotalsaleamount_)));
          set_has_dtotalsaleamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(441)) goto parse_dCJBiShu;
        break;
      }

      // optional double dCJBiShu = 55;
      case 55: {
        if (tag == 441) {
         parse_dCJBiShu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dcjbishu_)));
          set_has_dcjbishu();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(449)) goto parse_dRealavgRate;
        break;
      }

      // optional double dRealavgRate = 56;
      case 56: {
        if (tag == 449) {
         parse_dRealavgRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &drealavgrate_)));
          set_has_drealavgrate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(457)) goto parse_dPreavgRate;
        break;
      }

      // optional double dPreavgRate = 57;
      case 57: {
        if (tag == 457) {
         parse_dPreavgRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dpreavgrate_)));
          set_has_dpreavgrate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(464)) goto parse_iInitDate;
        break;
      }

      // optional int32 iInitDate = 58;
      case 58: {
        if (tag == 464) {
         parse_iInitDate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iinitdate_)));
          set_has_iinitdate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(473)) goto parse_dPe;
        break;
      }

      // optional double dPe = 59;
      case 59: {
        if (tag == 473) {
         parse_dPe:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dpe_)));
          set_has_dpe();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(481)) goto parse_dPe2;
        break;
      }

      // optional double dPe2 = 60;
      case 60: {
        if (tag == 481) {
         parse_dPe2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dpe2_)));
          set_has_dpe2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(488)) goto parse_iLayering;
        break;
      }

      // optional int32 iLayering = 61;
      case 61: {
        if (tag == 488) {
         parse_iLayering:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ilayering_)));
          set_has_ilayering();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(496)) goto parse_iZSSSL;
        break;
      }

      // optional int32 iZSSSL = 62;
      case 62: {
        if (tag == 496) {
         parse_iZSSSL:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &izsssl_)));
          set_has_izsssl();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(506)) goto parse_sStockType;
        break;
      }

      // optional string sStockType = 63;
      case 63: {
        if (tag == 506) {
         parse_sStockType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstocktype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstocktype().data(), this->sstocktype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstocktype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(514)) goto parse_sCodeType;
        break;
      }

      // optional string sCodeType = 64;
      case 64: {
        if (tag == 514) {
         parse_sCodeType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scodetype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scodetype().data(), this->scodetype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "scodetype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(520)) goto parse_iStrikeDate;
        break;
      }

      // optional int32 iStrikeDate = 65;
      case 65: {
        if (tag == 520) {
         parse_iStrikeDate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &istrikedate_)));
          set_has_istrikedate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(528)) goto parse_iExpireDate;
        break;
      }

      // optional int32 iExpireDate = 66;
      case 66: {
        if (tag == 528) {
         parse_iExpireDate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iexpiredate_)));
          set_has_iexpiredate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(537)) goto parse_dMaxLimitedAmount;
        break;
      }

      // optional double dMaxLimitedAmount = 67;
      case 67: {
        if (tag == 537) {
         parse_dMaxLimitedAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dmaxlimitedamount_)));
          set_has_dmaxlimitedamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(545)) goto parse_dMaxMarketAmount;
        break;
      }

      // optional double dMaxMarketAmount = 68;
      case 68: {
        if (tag == 545) {
         parse_dMaxMarketAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dmaxmarketamount_)));
          set_has_dmaxmarketamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(553)) goto parse_dHoldBalance;
        break;
      }

      // optional double dHoldBalance = 69;
      case 69: {
        if (tag == 553) {
         parse_dHoldBalance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dholdbalance_)));
          set_has_dholdbalance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(561)) goto parse_dDelta;
        break;
      }

      // optional double dDelta = 70;
      case 70: {
        if (tag == 561) {
         parse_dDelta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ddelta_)));
          set_has_ddelta();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1008)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1008)
  return false;
#undef DO_
}

void HQ1008::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1008)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smarketno(), output);
  }

  // required string sStockCode = 2;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sstockcode(), output);
  }

  // optional string sAbsoluteTimeStamp = 3;
  if (has_sabsolutetimestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sabsolutetimestamp().data(), this->sabsolutetimestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sabsolutetimestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sabsolutetimestamp(), output);
  }

  // optional double dPreclosePrice = 4;
  if (has_dprecloseprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->dprecloseprice(), output);
  }

  // optional double dOpenPrice = 5;
  if (has_dopenprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->dopenprice(), output);
  }

  // optional double dLastPrice = 6;
  if (has_dlastprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->dlastprice(), output);
  }

  // optional double dHighPrice = 7;
  if (has_dhighprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->dhighprice(), output);
  }

  // optional double dLowPrice = 8;
  if (has_dlowprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->dlowprice(), output);
  }

  // optional double dClosePrice = 9;
  if (has_dcloseprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->dcloseprice(), output);
  }

  // optional double dAvgPrice = 10;
  if (has_davgprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->davgprice(), output);
  }

  // optional double dBusinessAmount = 11;
  if (has_dbusinessamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->dbusinessamount(), output);
  }

  // optional double dBusinessBalance = 12;
  if (has_dbusinessbalance()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->dbusinessbalance(), output);
  }

  // optional double dUpPrice = 13;
  if (has_dupprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->dupprice(), output);
  }

  // optional double dDownPrice = 14;
  if (has_ddownprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->ddownprice(), output);
  }

  // optional double dCurrentAmount = 15;
  if (has_dcurrentamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->dcurrentamount(), output);
  }

  // optional double dAmount = 16;
  if (has_damount()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->damount(), output);
  }

  // optional double dPreAmount = 17;
  if (has_dpreamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->dpreamount(), output);
  }

  // optional double dPreSettlement = 18;
  if (has_dpresettlement()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->dpresettlement(), output);
  }

  // optional double dSettleMent = 19;
  if (has_dsettlement()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->dsettlement(), output);
  }

  // optional double dIopv = 20;
  if (has_diopv()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->diopv(), output);
  }

  // optional string sTradingPhaseCode = 21;
  if (has_stradingphasecode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stradingphasecode().data(), this->stradingphasecode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stradingphasecode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->stradingphasecode(), output);
  }

  // optional double dAuctionPrice = 22;
  if (has_dauctionprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->dauctionprice(), output);
  }

  // optional double dMatchedQty = 23;
  if (has_dmatchedqty()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->dmatchedqty(), output);
  }

  // optional double dFundT1Price = 24;
  if (has_dfundt1price()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->dfundt1price(), output);
  }

  // optional string sFundType = 25;
  if (has_sfundtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sfundtype().data(), this->sfundtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sfundtype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->sfundtype(), output);
  }

  // optional double dMarketDealAmount = 26;
  if (has_dmarketdealamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(26, this->dmarketdealamount(), output);
  }

  // optional string sStopFlag = 27;
  if (has_sstopflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstopflag().data(), this->sstopflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstopflag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      27, this->sstopflag(), output);
  }

  // optional string sBsStatus = 28;
  if (has_sbsstatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sbsstatus().data(), this->sbsstatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sbsstatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      28, this->sbsstatus(), output);
  }

  // optional string sLatestEnquiryTime = 29;
  if (has_slatestenquirytime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->slatestenquirytime().data(), this->slatestenquirytime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "slatestenquirytime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      29, this->slatestenquirytime(), output);
  }

  // optional double dBusinWeight = 30;
  if (has_dbusinweight()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(30, this->dbusinweight(), output);
  }

  // optional double dBuyPrice1 = 31;
  if (has_dbuyprice1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(31, this->dbuyprice1(), output);
  }

  // optional double dBuyPrice2 = 32;
  if (has_dbuyprice2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(32, this->dbuyprice2(), output);
  }

  // optional double dBuyPrice3 = 33;
  if (has_dbuyprice3()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(33, this->dbuyprice3(), output);
  }

  // optional double dBuyPrice4 = 34;
  if (has_dbuyprice4()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(34, this->dbuyprice4(), output);
  }

  // optional double dBuyPrice5 = 35;
  if (has_dbuyprice5()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(35, this->dbuyprice5(), output);
  }

  // optional double dSalePrice1 = 36;
  if (has_dsaleprice1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(36, this->dsaleprice1(), output);
  }

  // optional double dSalePrice2 = 37;
  if (has_dsaleprice2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(37, this->dsaleprice2(), output);
  }

  // optional double dSalePrice3 = 38;
  if (has_dsaleprice3()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(38, this->dsaleprice3(), output);
  }

  // optional double dSalePrice4 = 39;
  if (has_dsaleprice4()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(39, this->dsaleprice4(), output);
  }

  // optional double dSalePrice5 = 40;
  if (has_dsaleprice5()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(40, this->dsaleprice5(), output);
  }

  // optional double dBuyQty1 = 41;
  if (has_dbuyqty1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(41, this->dbuyqty1(), output);
  }

  // optional double dBuyQty2 = 42;
  if (has_dbuyqty2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(42, this->dbuyqty2(), output);
  }

  // optional double dBuyQty3 = 43;
  if (has_dbuyqty3()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(43, this->dbuyqty3(), output);
  }

  // optional double dBuyQty4 = 44;
  if (has_dbuyqty4()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(44, this->dbuyqty4(), output);
  }

  // optional double dBuyQty5 = 45;
  if (has_dbuyqty5()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(45, this->dbuyqty5(), output);
  }

  // optional double dSaleQty1 = 46;
  if (has_dsaleqty1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(46, this->dsaleqty1(), output);
  }

  // optional double dSaleQty2 = 47;
  if (has_dsaleqty2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(47, this->dsaleqty2(), output);
  }

  // optional double dSaleQty3 = 48;
  if (has_dsaleqty3()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(48, this->dsaleqty3(), output);
  }

  // optional double dSaleQty4 = 49;
  if (has_dsaleqty4()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(49, this->dsaleqty4(), output);
  }

  // optional double dSaleQty5 = 50;
  if (has_dsaleqty5()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(50, this->dsaleqty5(), output);
  }

  // optional bytes sStockName = 51;
  if (has_sstockname()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      51, this->sstockname(), output);
  }

  // optional double dAnountPerHand = 52;
  if (has_danountperhand()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(52, this->danountperhand(), output);
  }

  // optional double dTotalbuyAmount = 53;
  if (has_dtotalbuyamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(53, this->dtotalbuyamount(), output);
  }

  // optional double dTotalSaleAmount = 54;
  if (has_dtotalsaleamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(54, this->dtotalsaleamount(), output);
  }

  // optional double dCJBiShu = 55;
  if (has_dcjbishu()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(55, this->dcjbishu(), output);
  }

  // optional double dRealavgRate = 56;
  if (has_drealavgrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(56, this->drealavgrate(), output);
  }

  // optional double dPreavgRate = 57;
  if (has_dpreavgrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(57, this->dpreavgrate(), output);
  }

  // optional int32 iInitDate = 58;
  if (has_iinitdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(58, this->iinitdate(), output);
  }

  // optional double dPe = 59;
  if (has_dpe()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(59, this->dpe(), output);
  }

  // optional double dPe2 = 60;
  if (has_dpe2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(60, this->dpe2(), output);
  }

  // optional int32 iLayering = 61;
  if (has_ilayering()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(61, this->ilayering(), output);
  }

  // optional int32 iZSSSL = 62;
  if (has_izsssl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(62, this->izsssl(), output);
  }

  // optional string sStockType = 63;
  if (has_sstocktype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstocktype().data(), this->sstocktype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstocktype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      63, this->sstocktype(), output);
  }

  // optional string sCodeType = 64;
  if (has_scodetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scodetype().data(), this->scodetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scodetype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      64, this->scodetype(), output);
  }

  // optional int32 iStrikeDate = 65;
  if (has_istrikedate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(65, this->istrikedate(), output);
  }

  // optional int32 iExpireDate = 66;
  if (has_iexpiredate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(66, this->iexpiredate(), output);
  }

  // optional double dMaxLimitedAmount = 67;
  if (has_dmaxlimitedamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(67, this->dmaxlimitedamount(), output);
  }

  // optional double dMaxMarketAmount = 68;
  if (has_dmaxmarketamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(68, this->dmaxmarketamount(), output);
  }

  // optional double dHoldBalance = 69;
  if (has_dholdbalance()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(69, this->dholdbalance(), output);
  }

  // optional double dDelta = 70;
  if (has_ddelta()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(70, this->ddelta(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1008)
}

::google::protobuf::uint8* HQ1008::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1008)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->smarketno(), target);
  }

  // required string sStockCode = 2;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sstockcode(), target);
  }

  // optional string sAbsoluteTimeStamp = 3;
  if (has_sabsolutetimestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sabsolutetimestamp().data(), this->sabsolutetimestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sabsolutetimestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sabsolutetimestamp(), target);
  }

  // optional double dPreclosePrice = 4;
  if (has_dprecloseprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->dprecloseprice(), target);
  }

  // optional double dOpenPrice = 5;
  if (has_dopenprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->dopenprice(), target);
  }

  // optional double dLastPrice = 6;
  if (has_dlastprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->dlastprice(), target);
  }

  // optional double dHighPrice = 7;
  if (has_dhighprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->dhighprice(), target);
  }

  // optional double dLowPrice = 8;
  if (has_dlowprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->dlowprice(), target);
  }

  // optional double dClosePrice = 9;
  if (has_dcloseprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->dcloseprice(), target);
  }

  // optional double dAvgPrice = 10;
  if (has_davgprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->davgprice(), target);
  }

  // optional double dBusinessAmount = 11;
  if (has_dbusinessamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->dbusinessamount(), target);
  }

  // optional double dBusinessBalance = 12;
  if (has_dbusinessbalance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->dbusinessbalance(), target);
  }

  // optional double dUpPrice = 13;
  if (has_dupprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->dupprice(), target);
  }

  // optional double dDownPrice = 14;
  if (has_ddownprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->ddownprice(), target);
  }

  // optional double dCurrentAmount = 15;
  if (has_dcurrentamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->dcurrentamount(), target);
  }

  // optional double dAmount = 16;
  if (has_damount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->damount(), target);
  }

  // optional double dPreAmount = 17;
  if (has_dpreamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->dpreamount(), target);
  }

  // optional double dPreSettlement = 18;
  if (has_dpresettlement()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->dpresettlement(), target);
  }

  // optional double dSettleMent = 19;
  if (has_dsettlement()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(19, this->dsettlement(), target);
  }

  // optional double dIopv = 20;
  if (has_diopv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->diopv(), target);
  }

  // optional string sTradingPhaseCode = 21;
  if (has_stradingphasecode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stradingphasecode().data(), this->stradingphasecode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stradingphasecode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->stradingphasecode(), target);
  }

  // optional double dAuctionPrice = 22;
  if (has_dauctionprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(22, this->dauctionprice(), target);
  }

  // optional double dMatchedQty = 23;
  if (has_dmatchedqty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(23, this->dmatchedqty(), target);
  }

  // optional double dFundT1Price = 24;
  if (has_dfundt1price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(24, this->dfundt1price(), target);
  }

  // optional string sFundType = 25;
  if (has_sfundtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sfundtype().data(), this->sfundtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sfundtype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->sfundtype(), target);
  }

  // optional double dMarketDealAmount = 26;
  if (has_dmarketdealamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(26, this->dmarketdealamount(), target);
  }

  // optional string sStopFlag = 27;
  if (has_sstopflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstopflag().data(), this->sstopflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstopflag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->sstopflag(), target);
  }

  // optional string sBsStatus = 28;
  if (has_sbsstatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sbsstatus().data(), this->sbsstatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sbsstatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->sbsstatus(), target);
  }

  // optional string sLatestEnquiryTime = 29;
  if (has_slatestenquirytime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->slatestenquirytime().data(), this->slatestenquirytime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "slatestenquirytime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->slatestenquirytime(), target);
  }

  // optional double dBusinWeight = 30;
  if (has_dbusinweight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(30, this->dbusinweight(), target);
  }

  // optional double dBuyPrice1 = 31;
  if (has_dbuyprice1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(31, this->dbuyprice1(), target);
  }

  // optional double dBuyPrice2 = 32;
  if (has_dbuyprice2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(32, this->dbuyprice2(), target);
  }

  // optional double dBuyPrice3 = 33;
  if (has_dbuyprice3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(33, this->dbuyprice3(), target);
  }

  // optional double dBuyPrice4 = 34;
  if (has_dbuyprice4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(34, this->dbuyprice4(), target);
  }

  // optional double dBuyPrice5 = 35;
  if (has_dbuyprice5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(35, this->dbuyprice5(), target);
  }

  // optional double dSalePrice1 = 36;
  if (has_dsaleprice1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(36, this->dsaleprice1(), target);
  }

  // optional double dSalePrice2 = 37;
  if (has_dsaleprice2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(37, this->dsaleprice2(), target);
  }

  // optional double dSalePrice3 = 38;
  if (has_dsaleprice3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(38, this->dsaleprice3(), target);
  }

  // optional double dSalePrice4 = 39;
  if (has_dsaleprice4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(39, this->dsaleprice4(), target);
  }

  // optional double dSalePrice5 = 40;
  if (has_dsaleprice5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(40, this->dsaleprice5(), target);
  }

  // optional double dBuyQty1 = 41;
  if (has_dbuyqty1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(41, this->dbuyqty1(), target);
  }

  // optional double dBuyQty2 = 42;
  if (has_dbuyqty2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(42, this->dbuyqty2(), target);
  }

  // optional double dBuyQty3 = 43;
  if (has_dbuyqty3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(43, this->dbuyqty3(), target);
  }

  // optional double dBuyQty4 = 44;
  if (has_dbuyqty4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(44, this->dbuyqty4(), target);
  }

  // optional double dBuyQty5 = 45;
  if (has_dbuyqty5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(45, this->dbuyqty5(), target);
  }

  // optional double dSaleQty1 = 46;
  if (has_dsaleqty1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(46, this->dsaleqty1(), target);
  }

  // optional double dSaleQty2 = 47;
  if (has_dsaleqty2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(47, this->dsaleqty2(), target);
  }

  // optional double dSaleQty3 = 48;
  if (has_dsaleqty3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(48, this->dsaleqty3(), target);
  }

  // optional double dSaleQty4 = 49;
  if (has_dsaleqty4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(49, this->dsaleqty4(), target);
  }

  // optional double dSaleQty5 = 50;
  if (has_dsaleqty5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(50, this->dsaleqty5(), target);
  }

  // optional bytes sStockName = 51;
  if (has_sstockname()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        51, this->sstockname(), target);
  }

  // optional double dAnountPerHand = 52;
  if (has_danountperhand()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(52, this->danountperhand(), target);
  }

  // optional double dTotalbuyAmount = 53;
  if (has_dtotalbuyamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(53, this->dtotalbuyamount(), target);
  }

  // optional double dTotalSaleAmount = 54;
  if (has_dtotalsaleamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(54, this->dtotalsaleamount(), target);
  }

  // optional double dCJBiShu = 55;
  if (has_dcjbishu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(55, this->dcjbishu(), target);
  }

  // optional double dRealavgRate = 56;
  if (has_drealavgrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(56, this->drealavgrate(), target);
  }

  // optional double dPreavgRate = 57;
  if (has_dpreavgrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(57, this->dpreavgrate(), target);
  }

  // optional int32 iInitDate = 58;
  if (has_iinitdate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(58, this->iinitdate(), target);
  }

  // optional double dPe = 59;
  if (has_dpe()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(59, this->dpe(), target);
  }

  // optional double dPe2 = 60;
  if (has_dpe2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(60, this->dpe2(), target);
  }

  // optional int32 iLayering = 61;
  if (has_ilayering()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(61, this->ilayering(), target);
  }

  // optional int32 iZSSSL = 62;
  if (has_izsssl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(62, this->izsssl(), target);
  }

  // optional string sStockType = 63;
  if (has_sstocktype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstocktype().data(), this->sstocktype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstocktype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        63, this->sstocktype(), target);
  }

  // optional string sCodeType = 64;
  if (has_scodetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scodetype().data(), this->scodetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scodetype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        64, this->scodetype(), target);
  }

  // optional int32 iStrikeDate = 65;
  if (has_istrikedate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(65, this->istrikedate(), target);
  }

  // optional int32 iExpireDate = 66;
  if (has_iexpiredate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(66, this->iexpiredate(), target);
  }

  // optional double dMaxLimitedAmount = 67;
  if (has_dmaxlimitedamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(67, this->dmaxlimitedamount(), target);
  }

  // optional double dMaxMarketAmount = 68;
  if (has_dmaxmarketamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(68, this->dmaxmarketamount(), target);
  }

  // optional double dHoldBalance = 69;
  if (has_dholdbalance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(69, this->dholdbalance(), target);
  }

  // optional double dDelta = 70;
  if (has_ddelta()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(70, this->ddelta(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1008)
  return target;
}

int HQ1008::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sMarketNo = 1;
    if (has_smarketno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smarketno());
    }

    // required string sStockCode = 2;
    if (has_sstockcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstockcode());
    }

    // optional string sAbsoluteTimeStamp = 3;
    if (has_sabsolutetimestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sabsolutetimestamp());
    }

    // optional double dPreclosePrice = 4;
    if (has_dprecloseprice()) {
      total_size += 1 + 8;
    }

    // optional double dOpenPrice = 5;
    if (has_dopenprice()) {
      total_size += 1 + 8;
    }

    // optional double dLastPrice = 6;
    if (has_dlastprice()) {
      total_size += 1 + 8;
    }

    // optional double dHighPrice = 7;
    if (has_dhighprice()) {
      total_size += 1 + 8;
    }

    // optional double dLowPrice = 8;
    if (has_dlowprice()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional double dClosePrice = 9;
    if (has_dcloseprice()) {
      total_size += 1 + 8;
    }

    // optional double dAvgPrice = 10;
    if (has_davgprice()) {
      total_size += 1 + 8;
    }

    // optional double dBusinessAmount = 11;
    if (has_dbusinessamount()) {
      total_size += 1 + 8;
    }

    // optional double dBusinessBalance = 12;
    if (has_dbusinessbalance()) {
      total_size += 1 + 8;
    }

    // optional double dUpPrice = 13;
    if (has_dupprice()) {
      total_size += 1 + 8;
    }

    // optional double dDownPrice = 14;
    if (has_ddownprice()) {
      total_size += 1 + 8;
    }

    // optional double dCurrentAmount = 15;
    if (has_dcurrentamount()) {
      total_size += 1 + 8;
    }

    // optional double dAmount = 16;
    if (has_damount()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional double dPreAmount = 17;
    if (has_dpreamount()) {
      total_size += 2 + 8;
    }

    // optional double dPreSettlement = 18;
    if (has_dpresettlement()) {
      total_size += 2 + 8;
    }

    // optional double dSettleMent = 19;
    if (has_dsettlement()) {
      total_size += 2 + 8;
    }

    // optional double dIopv = 20;
    if (has_diopv()) {
      total_size += 2 + 8;
    }

    // optional string sTradingPhaseCode = 21;
    if (has_stradingphasecode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stradingphasecode());
    }

    // optional double dAuctionPrice = 22;
    if (has_dauctionprice()) {
      total_size += 2 + 8;
    }

    // optional double dMatchedQty = 23;
    if (has_dmatchedqty()) {
      total_size += 2 + 8;
    }

    // optional double dFundT1Price = 24;
    if (has_dfundt1price()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional string sFundType = 25;
    if (has_sfundtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sfundtype());
    }

    // optional double dMarketDealAmount = 26;
    if (has_dmarketdealamount()) {
      total_size += 2 + 8;
    }

    // optional string sStopFlag = 27;
    if (has_sstopflag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstopflag());
    }

    // optional string sBsStatus = 28;
    if (has_sbsstatus()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sbsstatus());
    }

    // optional string sLatestEnquiryTime = 29;
    if (has_slatestenquirytime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->slatestenquirytime());
    }

    // optional double dBusinWeight = 30;
    if (has_dbusinweight()) {
      total_size += 2 + 8;
    }

    // optional double dBuyPrice1 = 31;
    if (has_dbuyprice1()) {
      total_size += 2 + 8;
    }

    // optional double dBuyPrice2 = 32;
    if (has_dbuyprice2()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // optional double dBuyPrice3 = 33;
    if (has_dbuyprice3()) {
      total_size += 2 + 8;
    }

    // optional double dBuyPrice4 = 34;
    if (has_dbuyprice4()) {
      total_size += 2 + 8;
    }

    // optional double dBuyPrice5 = 35;
    if (has_dbuyprice5()) {
      total_size += 2 + 8;
    }

    // optional double dSalePrice1 = 36;
    if (has_dsaleprice1()) {
      total_size += 2 + 8;
    }

    // optional double dSalePrice2 = 37;
    if (has_dsaleprice2()) {
      total_size += 2 + 8;
    }

    // optional double dSalePrice3 = 38;
    if (has_dsaleprice3()) {
      total_size += 2 + 8;
    }

    // optional double dSalePrice4 = 39;
    if (has_dsaleprice4()) {
      total_size += 2 + 8;
    }

    // optional double dSalePrice5 = 40;
    if (has_dsaleprice5()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    // optional double dBuyQty1 = 41;
    if (has_dbuyqty1()) {
      total_size += 2 + 8;
    }

    // optional double dBuyQty2 = 42;
    if (has_dbuyqty2()) {
      total_size += 2 + 8;
    }

    // optional double dBuyQty3 = 43;
    if (has_dbuyqty3()) {
      total_size += 2 + 8;
    }

    // optional double dBuyQty4 = 44;
    if (has_dbuyqty4()) {
      total_size += 2 + 8;
    }

    // optional double dBuyQty5 = 45;
    if (has_dbuyqty5()) {
      total_size += 2 + 8;
    }

    // optional double dSaleQty1 = 46;
    if (has_dsaleqty1()) {
      total_size += 2 + 8;
    }

    // optional double dSaleQty2 = 47;
    if (has_dsaleqty2()) {
      total_size += 2 + 8;
    }

    // optional double dSaleQty3 = 48;
    if (has_dsaleqty3()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    // optional double dSaleQty4 = 49;
    if (has_dsaleqty4()) {
      total_size += 2 + 8;
    }

    // optional double dSaleQty5 = 50;
    if (has_dsaleqty5()) {
      total_size += 2 + 8;
    }

    // optional bytes sStockName = 51;
    if (has_sstockname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sstockname());
    }

    // optional double dAnountPerHand = 52;
    if (has_danountperhand()) {
      total_size += 2 + 8;
    }

    // optional double dTotalbuyAmount = 53;
    if (has_dtotalbuyamount()) {
      total_size += 2 + 8;
    }

    // optional double dTotalSaleAmount = 54;
    if (has_dtotalsaleamount()) {
      total_size += 2 + 8;
    }

    // optional double dCJBiShu = 55;
    if (has_dcjbishu()) {
      total_size += 2 + 8;
    }

    // optional double dRealavgRate = 56;
    if (has_drealavgrate()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[56 / 32] & (0xffu << (56 % 32))) {
    // optional double dPreavgRate = 57;
    if (has_dpreavgrate()) {
      total_size += 2 + 8;
    }

    // optional int32 iInitDate = 58;
    if (has_iinitdate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->iinitdate());
    }

    // optional double dPe = 59;
    if (has_dpe()) {
      total_size += 2 + 8;
    }

    // optional double dPe2 = 60;
    if (has_dpe2()) {
      total_size += 2 + 8;
    }

    // optional int32 iLayering = 61;
    if (has_ilayering()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ilayering());
    }

    // optional int32 iZSSSL = 62;
    if (has_izsssl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->izsssl());
    }

    // optional string sStockType = 63;
    if (has_sstocktype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstocktype());
    }

    // optional string sCodeType = 64;
    if (has_scodetype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scodetype());
    }

  }
  if (_has_bits_[64 / 32] & (0xffu << (64 % 32))) {
    // optional int32 iStrikeDate = 65;
    if (has_istrikedate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->istrikedate());
    }

    // optional int32 iExpireDate = 66;
    if (has_iexpiredate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->iexpiredate());
    }

    // optional double dMaxLimitedAmount = 67;
    if (has_dmaxlimitedamount()) {
      total_size += 2 + 8;
    }

    // optional double dMaxMarketAmount = 68;
    if (has_dmaxmarketamount()) {
      total_size += 2 + 8;
    }

    // optional double dHoldBalance = 69;
    if (has_dholdbalance()) {
      total_size += 2 + 8;
    }

    // optional double dDelta = 70;
    if (has_ddelta()) {
      total_size += 2 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1008::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1008* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1008*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1008::MergeFrom(const HQ1008& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_smarketno()) {
      set_smarketno(from.smarketno());
    }
    if (from.has_sstockcode()) {
      set_sstockcode(from.sstockcode());
    }
    if (from.has_sabsolutetimestamp()) {
      set_sabsolutetimestamp(from.sabsolutetimestamp());
    }
    if (from.has_dprecloseprice()) {
      set_dprecloseprice(from.dprecloseprice());
    }
    if (from.has_dopenprice()) {
      set_dopenprice(from.dopenprice());
    }
    if (from.has_dlastprice()) {
      set_dlastprice(from.dlastprice());
    }
    if (from.has_dhighprice()) {
      set_dhighprice(from.dhighprice());
    }
    if (from.has_dlowprice()) {
      set_dlowprice(from.dlowprice());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_dcloseprice()) {
      set_dcloseprice(from.dcloseprice());
    }
    if (from.has_davgprice()) {
      set_davgprice(from.davgprice());
    }
    if (from.has_dbusinessamount()) {
      set_dbusinessamount(from.dbusinessamount());
    }
    if (from.has_dbusinessbalance()) {
      set_dbusinessbalance(from.dbusinessbalance());
    }
    if (from.has_dupprice()) {
      set_dupprice(from.dupprice());
    }
    if (from.has_ddownprice()) {
      set_ddownprice(from.ddownprice());
    }
    if (from.has_dcurrentamount()) {
      set_dcurrentamount(from.dcurrentamount());
    }
    if (from.has_damount()) {
      set_damount(from.damount());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_dpreamount()) {
      set_dpreamount(from.dpreamount());
    }
    if (from.has_dpresettlement()) {
      set_dpresettlement(from.dpresettlement());
    }
    if (from.has_dsettlement()) {
      set_dsettlement(from.dsettlement());
    }
    if (from.has_diopv()) {
      set_diopv(from.diopv());
    }
    if (from.has_stradingphasecode()) {
      set_stradingphasecode(from.stradingphasecode());
    }
    if (from.has_dauctionprice()) {
      set_dauctionprice(from.dauctionprice());
    }
    if (from.has_dmatchedqty()) {
      set_dmatchedqty(from.dmatchedqty());
    }
    if (from.has_dfundt1price()) {
      set_dfundt1price(from.dfundt1price());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_sfundtype()) {
      set_sfundtype(from.sfundtype());
    }
    if (from.has_dmarketdealamount()) {
      set_dmarketdealamount(from.dmarketdealamount());
    }
    if (from.has_sstopflag()) {
      set_sstopflag(from.sstopflag());
    }
    if (from.has_sbsstatus()) {
      set_sbsstatus(from.sbsstatus());
    }
    if (from.has_slatestenquirytime()) {
      set_slatestenquirytime(from.slatestenquirytime());
    }
    if (from.has_dbusinweight()) {
      set_dbusinweight(from.dbusinweight());
    }
    if (from.has_dbuyprice1()) {
      set_dbuyprice1(from.dbuyprice1());
    }
    if (from.has_dbuyprice2()) {
      set_dbuyprice2(from.dbuyprice2());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_dbuyprice3()) {
      set_dbuyprice3(from.dbuyprice3());
    }
    if (from.has_dbuyprice4()) {
      set_dbuyprice4(from.dbuyprice4());
    }
    if (from.has_dbuyprice5()) {
      set_dbuyprice5(from.dbuyprice5());
    }
    if (from.has_dsaleprice1()) {
      set_dsaleprice1(from.dsaleprice1());
    }
    if (from.has_dsaleprice2()) {
      set_dsaleprice2(from.dsaleprice2());
    }
    if (from.has_dsaleprice3()) {
      set_dsaleprice3(from.dsaleprice3());
    }
    if (from.has_dsaleprice4()) {
      set_dsaleprice4(from.dsaleprice4());
    }
    if (from.has_dsaleprice5()) {
      set_dsaleprice5(from.dsaleprice5());
    }
  }
  if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (from.has_dbuyqty1()) {
      set_dbuyqty1(from.dbuyqty1());
    }
    if (from.has_dbuyqty2()) {
      set_dbuyqty2(from.dbuyqty2());
    }
    if (from.has_dbuyqty3()) {
      set_dbuyqty3(from.dbuyqty3());
    }
    if (from.has_dbuyqty4()) {
      set_dbuyqty4(from.dbuyqty4());
    }
    if (from.has_dbuyqty5()) {
      set_dbuyqty5(from.dbuyqty5());
    }
    if (from.has_dsaleqty1()) {
      set_dsaleqty1(from.dsaleqty1());
    }
    if (from.has_dsaleqty2()) {
      set_dsaleqty2(from.dsaleqty2());
    }
    if (from.has_dsaleqty3()) {
      set_dsaleqty3(from.dsaleqty3());
    }
  }
  if (from._has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    if (from.has_dsaleqty4()) {
      set_dsaleqty4(from.dsaleqty4());
    }
    if (from.has_dsaleqty5()) {
      set_dsaleqty5(from.dsaleqty5());
    }
    if (from.has_sstockname()) {
      set_sstockname(from.sstockname());
    }
    if (from.has_danountperhand()) {
      set_danountperhand(from.danountperhand());
    }
    if (from.has_dtotalbuyamount()) {
      set_dtotalbuyamount(from.dtotalbuyamount());
    }
    if (from.has_dtotalsaleamount()) {
      set_dtotalsaleamount(from.dtotalsaleamount());
    }
    if (from.has_dcjbishu()) {
      set_dcjbishu(from.dcjbishu());
    }
    if (from.has_drealavgrate()) {
      set_drealavgrate(from.drealavgrate());
    }
  }
  if (from._has_bits_[56 / 32] & (0xffu << (56 % 32))) {
    if (from.has_dpreavgrate()) {
      set_dpreavgrate(from.dpreavgrate());
    }
    if (from.has_iinitdate()) {
      set_iinitdate(from.iinitdate());
    }
    if (from.has_dpe()) {
      set_dpe(from.dpe());
    }
    if (from.has_dpe2()) {
      set_dpe2(from.dpe2());
    }
    if (from.has_ilayering()) {
      set_ilayering(from.ilayering());
    }
    if (from.has_izsssl()) {
      set_izsssl(from.izsssl());
    }
    if (from.has_sstocktype()) {
      set_sstocktype(from.sstocktype());
    }
    if (from.has_scodetype()) {
      set_scodetype(from.scodetype());
    }
  }
  if (from._has_bits_[64 / 32] & (0xffu << (64 % 32))) {
    if (from.has_istrikedate()) {
      set_istrikedate(from.istrikedate());
    }
    if (from.has_iexpiredate()) {
      set_iexpiredate(from.iexpiredate());
    }
    if (from.has_dmaxlimitedamount()) {
      set_dmaxlimitedamount(from.dmaxlimitedamount());
    }
    if (from.has_dmaxmarketamount()) {
      set_dmaxmarketamount(from.dmaxmarketamount());
    }
    if (from.has_dholdbalance()) {
      set_dholdbalance(from.dholdbalance());
    }
    if (from.has_ddelta()) {
      set_ddelta(from.ddelta());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1008::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1008::CopyFrom(const HQ1008& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1008::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void HQ1008::Swap(HQ1008* other) {
  if (other != this) {
    std::swap(smarketno_, other->smarketno_);
    std::swap(sstockcode_, other->sstockcode_);
    std::swap(sabsolutetimestamp_, other->sabsolutetimestamp_);
    std::swap(dprecloseprice_, other->dprecloseprice_);
    std::swap(dopenprice_, other->dopenprice_);
    std::swap(dlastprice_, other->dlastprice_);
    std::swap(dhighprice_, other->dhighprice_);
    std::swap(dlowprice_, other->dlowprice_);
    std::swap(dcloseprice_, other->dcloseprice_);
    std::swap(davgprice_, other->davgprice_);
    std::swap(dbusinessamount_, other->dbusinessamount_);
    std::swap(dbusinessbalance_, other->dbusinessbalance_);
    std::swap(dupprice_, other->dupprice_);
    std::swap(ddownprice_, other->ddownprice_);
    std::swap(dcurrentamount_, other->dcurrentamount_);
    std::swap(damount_, other->damount_);
    std::swap(dpreamount_, other->dpreamount_);
    std::swap(dpresettlement_, other->dpresettlement_);
    std::swap(dsettlement_, other->dsettlement_);
    std::swap(diopv_, other->diopv_);
    std::swap(stradingphasecode_, other->stradingphasecode_);
    std::swap(dauctionprice_, other->dauctionprice_);
    std::swap(dmatchedqty_, other->dmatchedqty_);
    std::swap(dfundt1price_, other->dfundt1price_);
    std::swap(sfundtype_, other->sfundtype_);
    std::swap(dmarketdealamount_, other->dmarketdealamount_);
    std::swap(sstopflag_, other->sstopflag_);
    std::swap(sbsstatus_, other->sbsstatus_);
    std::swap(slatestenquirytime_, other->slatestenquirytime_);
    std::swap(dbusinweight_, other->dbusinweight_);
    std::swap(dbuyprice1_, other->dbuyprice1_);
    std::swap(dbuyprice2_, other->dbuyprice2_);
    std::swap(dbuyprice3_, other->dbuyprice3_);
    std::swap(dbuyprice4_, other->dbuyprice4_);
    std::swap(dbuyprice5_, other->dbuyprice5_);
    std::swap(dsaleprice1_, other->dsaleprice1_);
    std::swap(dsaleprice2_, other->dsaleprice2_);
    std::swap(dsaleprice3_, other->dsaleprice3_);
    std::swap(dsaleprice4_, other->dsaleprice4_);
    std::swap(dsaleprice5_, other->dsaleprice5_);
    std::swap(dbuyqty1_, other->dbuyqty1_);
    std::swap(dbuyqty2_, other->dbuyqty2_);
    std::swap(dbuyqty3_, other->dbuyqty3_);
    std::swap(dbuyqty4_, other->dbuyqty4_);
    std::swap(dbuyqty5_, other->dbuyqty5_);
    std::swap(dsaleqty1_, other->dsaleqty1_);
    std::swap(dsaleqty2_, other->dsaleqty2_);
    std::swap(dsaleqty3_, other->dsaleqty3_);
    std::swap(dsaleqty4_, other->dsaleqty4_);
    std::swap(dsaleqty5_, other->dsaleqty5_);
    std::swap(sstockname_, other->sstockname_);
    std::swap(danountperhand_, other->danountperhand_);
    std::swap(dtotalbuyamount_, other->dtotalbuyamount_);
    std::swap(dtotalsaleamount_, other->dtotalsaleamount_);
    std::swap(dcjbishu_, other->dcjbishu_);
    std::swap(drealavgrate_, other->drealavgrate_);
    std::swap(dpreavgrate_, other->dpreavgrate_);
    std::swap(iinitdate_, other->iinitdate_);
    std::swap(dpe_, other->dpe_);
    std::swap(dpe2_, other->dpe2_);
    std::swap(ilayering_, other->ilayering_);
    std::swap(izsssl_, other->izsssl_);
    std::swap(sstocktype_, other->sstocktype_);
    std::swap(scodetype_, other->scodetype_);
    std::swap(istrikedate_, other->istrikedate_);
    std::swap(iexpiredate_, other->iexpiredate_);
    std::swap(dmaxlimitedamount_, other->dmaxlimitedamount_);
    std::swap(dmaxmarketamount_, other->dmaxmarketamount_);
    std::swap(dholdbalance_, other->dholdbalance_);
    std::swap(ddelta_, other->ddelta_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    std::swap(_has_bits_[2], other->_has_bits_[2]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1008::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1008_descriptor_;
  metadata.reflection = HQ1008_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1008s::kRHQ1008FieldNumber;
#endif  // !_MSC_VER

HQ1008s::HQ1008s()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1008s)
}

void HQ1008s::InitAsDefaultInstance() {
}

HQ1008s::HQ1008s(const HQ1008s& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1008s)
}

void HQ1008s::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1008s::~HQ1008s() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1008s)
  SharedDtor();
}

void HQ1008s::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HQ1008s::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1008s::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1008s_descriptor_;
}

const HQ1008s& HQ1008s::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1008s* HQ1008s::default_instance_ = NULL;

HQ1008s* HQ1008s::New() const {
  return new HQ1008s;
}

void HQ1008s::Clear() {
  rHQ1008_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1008s::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1008s)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HQStockPackage.HQ1008 rHQ1008 = 1;
      case 1: {
        if (tag == 10) {
         parse_rHQ1008:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rHQ1008()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_rHQ1008;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1008s)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1008s)
  return false;
#undef DO_
}

void HQ1008s::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1008s)
  // repeated .HQStockPackage.HQ1008 rHQ1008 = 1;
  for (int i = 0; i < this->rHQ1008_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rHQ1008(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1008s)
}

::google::protobuf::uint8* HQ1008s::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1008s)
  // repeated .HQStockPackage.HQ1008 rHQ1008 = 1;
  for (int i = 0; i < this->rHQ1008_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rHQ1008(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1008s)
  return target;
}

int HQ1008s::ByteSize() const {
  int total_size = 0;

  // repeated .HQStockPackage.HQ1008 rHQ1008 = 1;
  total_size += 1 * this->rHQ1008_size();
  for (int i = 0; i < this->rHQ1008_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rHQ1008(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1008s::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1008s* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1008s*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1008s::MergeFrom(const HQ1008s& from) {
  GOOGLE_CHECK_NE(&from, this);
  rHQ1008_.MergeFrom(from.rHQ1008_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1008s::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1008s::CopyFrom(const HQ1008s& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1008s::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rHQ1008())) return false;
  return true;
}

void HQ1008s::Swap(HQ1008s* other) {
  if (other != this) {
    rHQ1008_.Swap(&other->rHQ1008_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1008s::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1008s_descriptor_;
  metadata.reflection = HQ1008s_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1001::kSMarketNoFieldNumber;
const int HQ1001::kSStockCodeFieldNumber;
const int HQ1001::kSTimeStampFieldNumber;
const int HQ1001::kDReferencePriceFieldNumber;
const int HQ1001::kDUpPriceFieldNumber;
const int HQ1001::kDDownPriceFieldNumber;
const int HQ1001::kSBeginTimeFieldNumber;
const int HQ1001::kSEndTimeFieldNumber;
#endif  // !_MSC_VER

HQ1001::HQ1001()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1001)
}

void HQ1001::InitAsDefaultInstance() {
}

HQ1001::HQ1001(const HQ1001& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1001)
}

void HQ1001::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dreferenceprice_ = 0;
  dupprice_ = 0;
  ddownprice_ = 0;
  sbegintime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1001::~HQ1001() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1001)
  SharedDtor();
}

void HQ1001::SharedDtor() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (stimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stimestamp_;
  }
  if (sbegintime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sbegintime_;
  }
  if (sendtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sendtime_;
  }
  if (this != default_instance_) {
  }
}

void HQ1001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1001_descriptor_;
}

const HQ1001& HQ1001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1001* HQ1001::default_instance_ = NULL;

HQ1001* HQ1001::New() const {
  return new HQ1001;
}

void HQ1001::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HQ1001*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(dreferenceprice_, ddownprice_);
    if (has_smarketno()) {
      if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        smarketno_->clear();
      }
    }
    if (has_sstockcode()) {
      if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstockcode_->clear();
      }
    }
    if (has_stimestamp()) {
      if (stimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stimestamp_->clear();
      }
    }
    if (has_sbegintime()) {
      if (sbegintime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sbegintime_->clear();
      }
    }
    if (has_sendtime()) {
      if (sendtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sendtime_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1001)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sMarketNo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smarketno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smarketno().data(), this->smarketno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "smarketno");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sStockCode;
        break;
      }

      // required string sStockCode = 2;
      case 2: {
        if (tag == 18) {
         parse_sStockCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstockcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstockcode().data(), this->sstockcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstockcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sTimeStamp;
        break;
      }

      // optional string sTimeStamp = 3;
      case 3: {
        if (tag == 26) {
         parse_sTimeStamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stimestamp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stimestamp().data(), this->stimestamp().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stimestamp");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_dReferencePrice;
        break;
      }

      // optional double dReferencePrice = 4;
      case 4: {
        if (tag == 33) {
         parse_dReferencePrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dreferenceprice_)));
          set_has_dreferenceprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_dUpPrice;
        break;
      }

      // optional double dUpPrice = 5;
      case 5: {
        if (tag == 41) {
         parse_dUpPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dupprice_)));
          set_has_dupprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_dDownPrice;
        break;
      }

      // optional double dDownPrice = 6;
      case 6: {
        if (tag == 49) {
         parse_dDownPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ddownprice_)));
          set_has_ddownprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sBeginTime;
        break;
      }

      // optional string sBeginTime = 7;
      case 7: {
        if (tag == 58) {
         parse_sBeginTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sbegintime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sbegintime().data(), this->sbegintime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sbegintime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_sEndTime;
        break;
      }

      // optional string sEndTime = 8;
      case 8: {
        if (tag == 66) {
         parse_sEndTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sendtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sendtime().data(), this->sendtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sendtime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1001)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1001)
  return false;
#undef DO_
}

void HQ1001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1001)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smarketno(), output);
  }

  // required string sStockCode = 2;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sstockcode(), output);
  }

  // optional string sTimeStamp = 3;
  if (has_stimestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stimestamp().data(), this->stimestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stimestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->stimestamp(), output);
  }

  // optional double dReferencePrice = 4;
  if (has_dreferenceprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->dreferenceprice(), output);
  }

  // optional double dUpPrice = 5;
  if (has_dupprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->dupprice(), output);
  }

  // optional double dDownPrice = 6;
  if (has_ddownprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->ddownprice(), output);
  }

  // optional string sBeginTime = 7;
  if (has_sbegintime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sbegintime().data(), this->sbegintime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sbegintime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sbegintime(), output);
  }

  // optional string sEndTime = 8;
  if (has_sendtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sendtime().data(), this->sendtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sendtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->sendtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1001)
}

::google::protobuf::uint8* HQ1001::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1001)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->smarketno(), target);
  }

  // required string sStockCode = 2;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sstockcode(), target);
  }

  // optional string sTimeStamp = 3;
  if (has_stimestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stimestamp().data(), this->stimestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stimestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->stimestamp(), target);
  }

  // optional double dReferencePrice = 4;
  if (has_dreferenceprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->dreferenceprice(), target);
  }

  // optional double dUpPrice = 5;
  if (has_dupprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->dupprice(), target);
  }

  // optional double dDownPrice = 6;
  if (has_ddownprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->ddownprice(), target);
  }

  // optional string sBeginTime = 7;
  if (has_sbegintime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sbegintime().data(), this->sbegintime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sbegintime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sbegintime(), target);
  }

  // optional string sEndTime = 8;
  if (has_sendtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sendtime().data(), this->sendtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sendtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->sendtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1001)
  return target;
}

int HQ1001::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sMarketNo = 1;
    if (has_smarketno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smarketno());
    }

    // required string sStockCode = 2;
    if (has_sstockcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstockcode());
    }

    // optional string sTimeStamp = 3;
    if (has_stimestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stimestamp());
    }

    // optional double dReferencePrice = 4;
    if (has_dreferenceprice()) {
      total_size += 1 + 8;
    }

    // optional double dUpPrice = 5;
    if (has_dupprice()) {
      total_size += 1 + 8;
    }

    // optional double dDownPrice = 6;
    if (has_ddownprice()) {
      total_size += 1 + 8;
    }

    // optional string sBeginTime = 7;
    if (has_sbegintime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sbegintime());
    }

    // optional string sEndTime = 8;
    if (has_sendtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sendtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1001::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1001* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1001*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1001::MergeFrom(const HQ1001& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_smarketno()) {
      set_smarketno(from.smarketno());
    }
    if (from.has_sstockcode()) {
      set_sstockcode(from.sstockcode());
    }
    if (from.has_stimestamp()) {
      set_stimestamp(from.stimestamp());
    }
    if (from.has_dreferenceprice()) {
      set_dreferenceprice(from.dreferenceprice());
    }
    if (from.has_dupprice()) {
      set_dupprice(from.dupprice());
    }
    if (from.has_ddownprice()) {
      set_ddownprice(from.ddownprice());
    }
    if (from.has_sbegintime()) {
      set_sbegintime(from.sbegintime());
    }
    if (from.has_sendtime()) {
      set_sendtime(from.sendtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1001::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1001::CopyFrom(const HQ1001& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1001::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void HQ1001::Swap(HQ1001* other) {
  if (other != this) {
    std::swap(smarketno_, other->smarketno_);
    std::swap(sstockcode_, other->sstockcode_);
    std::swap(stimestamp_, other->stimestamp_);
    std::swap(dreferenceprice_, other->dreferenceprice_);
    std::swap(dupprice_, other->dupprice_);
    std::swap(ddownprice_, other->ddownprice_);
    std::swap(sbegintime_, other->sbegintime_);
    std::swap(sendtime_, other->sendtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1001_descriptor_;
  metadata.reflection = HQ1001_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1001s::kRHQ1001FieldNumber;
#endif  // !_MSC_VER

HQ1001s::HQ1001s()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1001s)
}

void HQ1001s::InitAsDefaultInstance() {
}

HQ1001s::HQ1001s(const HQ1001s& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1001s)
}

void HQ1001s::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1001s::~HQ1001s() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1001s)
  SharedDtor();
}

void HQ1001s::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HQ1001s::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1001s::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1001s_descriptor_;
}

const HQ1001s& HQ1001s::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1001s* HQ1001s::default_instance_ = NULL;

HQ1001s* HQ1001s::New() const {
  return new HQ1001s;
}

void HQ1001s::Clear() {
  rhq1001_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1001s::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1001s)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HQStockPackage.HQ1001 rHQ1001 = 1;
      case 1: {
        if (tag == 10) {
         parse_rHQ1001:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rhq1001()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_rHQ1001;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1001s)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1001s)
  return false;
#undef DO_
}

void HQ1001s::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1001s)
  // repeated .HQStockPackage.HQ1001 rHQ1001 = 1;
  for (int i = 0; i < this->rhq1001_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rhq1001(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1001s)
}

::google::protobuf::uint8* HQ1001s::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1001s)
  // repeated .HQStockPackage.HQ1001 rHQ1001 = 1;
  for (int i = 0; i < this->rhq1001_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rhq1001(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1001s)
  return target;
}

int HQ1001s::ByteSize() const {
  int total_size = 0;

  // repeated .HQStockPackage.HQ1001 rHQ1001 = 1;
  total_size += 1 * this->rhq1001_size();
  for (int i = 0; i < this->rhq1001_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rhq1001(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1001s::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1001s* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1001s*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1001s::MergeFrom(const HQ1001s& from) {
  GOOGLE_CHECK_NE(&from, this);
  rhq1001_.MergeFrom(from.rhq1001_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1001s::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1001s::CopyFrom(const HQ1001s& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1001s::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rhq1001())) return false;
  return true;
}

void HQ1001s::Swap(HQ1001s* other) {
  if (other != this) {
    rhq1001_.Swap(&other->rhq1001_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1001s::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1001s_descriptor_;
  metadata.reflection = HQ1001s_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1002::kSMarketNoFieldNumber;
const int HQ1002::kSStockCodeFieldNumber;
const int HQ1002::kDPopcPriceFieldNumber;
const int HQ1002::kDSvolFieldNumber;
const int HQ1002::kDReferencePriceFieldNumber;
const int HQ1002::kDUpPriceFieldNumber;
const int HQ1002::kDDownPriceFieldNumber;
const int HQ1002::kDAmountFieldNumber;
const int HQ1002::kSOrdImbDirectionFieldNumber;
const int HQ1002::kSTimeStampFieldNumber;
#endif  // !_MSC_VER

HQ1002::HQ1002()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1002)
}

void HQ1002::InitAsDefaultInstance() {
}

HQ1002::HQ1002(const HQ1002& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1002)
}

void HQ1002::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dpopcprice_ = 0;
  dsvol_ = 0;
  dreferenceprice_ = 0;
  dupprice_ = 0;
  ddownprice_ = 0;
  damount_ = 0;
  sordimbdirection_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1002::~HQ1002() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1002)
  SharedDtor();
}

void HQ1002::SharedDtor() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sordimbdirection_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sordimbdirection_;
  }
  if (stimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stimestamp_;
  }
  if (this != default_instance_) {
  }
}

void HQ1002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1002_descriptor_;
}

const HQ1002& HQ1002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1002* HQ1002::default_instance_ = NULL;

HQ1002* HQ1002::New() const {
  return new HQ1002;
}

void HQ1002::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HQ1002*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(dpopcprice_, damount_);
    if (has_smarketno()) {
      if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        smarketno_->clear();
      }
    }
    if (has_sstockcode()) {
      if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstockcode_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 768) {
    if (has_sordimbdirection()) {
      if (sordimbdirection_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sordimbdirection_->clear();
      }
    }
    if (has_stimestamp()) {
      if (stimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stimestamp_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1002)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sMarketNo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smarketno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smarketno().data(), this->smarketno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "smarketno");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sStockCode;
        break;
      }

      // required string sStockCode = 2;
      case 2: {
        if (tag == 18) {
         parse_sStockCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstockcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstockcode().data(), this->sstockcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstockcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_dPopcPrice;
        break;
      }

      // optional double dPopcPrice = 3;
      case 3: {
        if (tag == 25) {
         parse_dPopcPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dpopcprice_)));
          set_has_dpopcprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_dSvol;
        break;
      }

      // optional double dSvol = 4;
      case 4: {
        if (tag == 33) {
         parse_dSvol:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dsvol_)));
          set_has_dsvol();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_dReferencePrice;
        break;
      }

      // optional double dReferencePrice = 5;
      case 5: {
        if (tag == 41) {
         parse_dReferencePrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dreferenceprice_)));
          set_has_dreferenceprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_dUpPrice;
        break;
      }

      // optional double dUpPrice = 6;
      case 6: {
        if (tag == 49) {
         parse_dUpPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dupprice_)));
          set_has_dupprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_dDownPrice;
        break;
      }

      // optional double dDownPrice = 7;
      case 7: {
        if (tag == 57) {
         parse_dDownPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ddownprice_)));
          set_has_ddownprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_dAmount;
        break;
      }

      // optional double dAmount = 8;
      case 8: {
        if (tag == 65) {
         parse_dAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &damount_)));
          set_has_damount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_sOrdImbDirection;
        break;
      }

      // optional string sOrdImbDirection = 9;
      case 9: {
        if (tag == 74) {
         parse_sOrdImbDirection:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sordimbdirection()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sordimbdirection().data(), this->sordimbdirection().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sordimbdirection");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_sTimeStamp;
        break;
      }

      // optional string sTimeStamp = 10;
      case 10: {
        if (tag == 82) {
         parse_sTimeStamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stimestamp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stimestamp().data(), this->stimestamp().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stimestamp");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1002)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1002)
  return false;
#undef DO_
}

void HQ1002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1002)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smarketno(), output);
  }

  // required string sStockCode = 2;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sstockcode(), output);
  }

  // optional double dPopcPrice = 3;
  if (has_dpopcprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->dpopcprice(), output);
  }

  // optional double dSvol = 4;
  if (has_dsvol()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->dsvol(), output);
  }

  // optional double dReferencePrice = 5;
  if (has_dreferenceprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->dreferenceprice(), output);
  }

  // optional double dUpPrice = 6;
  if (has_dupprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->dupprice(), output);
  }

  // optional double dDownPrice = 7;
  if (has_ddownprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->ddownprice(), output);
  }

  // optional double dAmount = 8;
  if (has_damount()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->damount(), output);
  }

  // optional string sOrdImbDirection = 9;
  if (has_sordimbdirection()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sordimbdirection().data(), this->sordimbdirection().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sordimbdirection");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->sordimbdirection(), output);
  }

  // optional string sTimeStamp = 10;
  if (has_stimestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stimestamp().data(), this->stimestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stimestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->stimestamp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1002)
}

::google::protobuf::uint8* HQ1002::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1002)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->smarketno(), target);
  }

  // required string sStockCode = 2;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sstockcode(), target);
  }

  // optional double dPopcPrice = 3;
  if (has_dpopcprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->dpopcprice(), target);
  }

  // optional double dSvol = 4;
  if (has_dsvol()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->dsvol(), target);
  }

  // optional double dReferencePrice = 5;
  if (has_dreferenceprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->dreferenceprice(), target);
  }

  // optional double dUpPrice = 6;
  if (has_dupprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->dupprice(), target);
  }

  // optional double dDownPrice = 7;
  if (has_ddownprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->ddownprice(), target);
  }

  // optional double dAmount = 8;
  if (has_damount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->damount(), target);
  }

  // optional string sOrdImbDirection = 9;
  if (has_sordimbdirection()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sordimbdirection().data(), this->sordimbdirection().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sordimbdirection");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->sordimbdirection(), target);
  }

  // optional string sTimeStamp = 10;
  if (has_stimestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stimestamp().data(), this->stimestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stimestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->stimestamp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1002)
  return target;
}

int HQ1002::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sMarketNo = 1;
    if (has_smarketno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smarketno());
    }

    // required string sStockCode = 2;
    if (has_sstockcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstockcode());
    }

    // optional double dPopcPrice = 3;
    if (has_dpopcprice()) {
      total_size += 1 + 8;
    }

    // optional double dSvol = 4;
    if (has_dsvol()) {
      total_size += 1 + 8;
    }

    // optional double dReferencePrice = 5;
    if (has_dreferenceprice()) {
      total_size += 1 + 8;
    }

    // optional double dUpPrice = 6;
    if (has_dupprice()) {
      total_size += 1 + 8;
    }

    // optional double dDownPrice = 7;
    if (has_ddownprice()) {
      total_size += 1 + 8;
    }

    // optional double dAmount = 8;
    if (has_damount()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string sOrdImbDirection = 9;
    if (has_sordimbdirection()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sordimbdirection());
    }

    // optional string sTimeStamp = 10;
    if (has_stimestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stimestamp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1002::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1002* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1002*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1002::MergeFrom(const HQ1002& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_smarketno()) {
      set_smarketno(from.smarketno());
    }
    if (from.has_sstockcode()) {
      set_sstockcode(from.sstockcode());
    }
    if (from.has_dpopcprice()) {
      set_dpopcprice(from.dpopcprice());
    }
    if (from.has_dsvol()) {
      set_dsvol(from.dsvol());
    }
    if (from.has_dreferenceprice()) {
      set_dreferenceprice(from.dreferenceprice());
    }
    if (from.has_dupprice()) {
      set_dupprice(from.dupprice());
    }
    if (from.has_ddownprice()) {
      set_ddownprice(from.ddownprice());
    }
    if (from.has_damount()) {
      set_damount(from.damount());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_sordimbdirection()) {
      set_sordimbdirection(from.sordimbdirection());
    }
    if (from.has_stimestamp()) {
      set_stimestamp(from.stimestamp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1002::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1002::CopyFrom(const HQ1002& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1002::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void HQ1002::Swap(HQ1002* other) {
  if (other != this) {
    std::swap(smarketno_, other->smarketno_);
    std::swap(sstockcode_, other->sstockcode_);
    std::swap(dpopcprice_, other->dpopcprice_);
    std::swap(dsvol_, other->dsvol_);
    std::swap(dreferenceprice_, other->dreferenceprice_);
    std::swap(dupprice_, other->dupprice_);
    std::swap(ddownprice_, other->ddownprice_);
    std::swap(damount_, other->damount_);
    std::swap(sordimbdirection_, other->sordimbdirection_);
    std::swap(stimestamp_, other->stimestamp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1002_descriptor_;
  metadata.reflection = HQ1002_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1002s::kRHQ1002FieldNumber;
#endif  // !_MSC_VER

HQ1002s::HQ1002s()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1002s)
}

void HQ1002s::InitAsDefaultInstance() {
}

HQ1002s::HQ1002s(const HQ1002s& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1002s)
}

void HQ1002s::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1002s::~HQ1002s() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1002s)
  SharedDtor();
}

void HQ1002s::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HQ1002s::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1002s::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1002s_descriptor_;
}

const HQ1002s& HQ1002s::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1002s* HQ1002s::default_instance_ = NULL;

HQ1002s* HQ1002s::New() const {
  return new HQ1002s;
}

void HQ1002s::Clear() {
  rhq1002_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1002s::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1002s)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HQStockPackage.HQ1002 rHQ1002 = 1;
      case 1: {
        if (tag == 10) {
         parse_rHQ1002:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rhq1002()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_rHQ1002;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1002s)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1002s)
  return false;
#undef DO_
}

void HQ1002s::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1002s)
  // repeated .HQStockPackage.HQ1002 rHQ1002 = 1;
  for (int i = 0; i < this->rhq1002_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rhq1002(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1002s)
}

::google::protobuf::uint8* HQ1002s::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1002s)
  // repeated .HQStockPackage.HQ1002 rHQ1002 = 1;
  for (int i = 0; i < this->rhq1002_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rhq1002(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1002s)
  return target;
}

int HQ1002s::ByteSize() const {
  int total_size = 0;

  // repeated .HQStockPackage.HQ1002 rHQ1002 = 1;
  total_size += 1 * this->rhq1002_size();
  for (int i = 0; i < this->rhq1002_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rhq1002(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1002s::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1002s* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1002s*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1002s::MergeFrom(const HQ1002s& from) {
  GOOGLE_CHECK_NE(&from, this);
  rhq1002_.MergeFrom(from.rhq1002_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1002s::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1002s::CopyFrom(const HQ1002s& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1002s::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rhq1002())) return false;
  return true;
}

void HQ1002s::Swap(HQ1002s* other) {
  if (other != this) {
    rhq1002_.Swap(&other->rhq1002_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1002s::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1002s_descriptor_;
  metadata.reflection = HQ1002s_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1006::kSMarketNoFieldNumber;
const int HQ1006::kSStockCodeFieldNumber;
const int HQ1006::kSTradeStatusFieldNumber;
const int HQ1006::kDNominalPriceFieldNumber;
#endif  // !_MSC_VER

HQ1006::HQ1006()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1006)
}

void HQ1006::InitAsDefaultInstance() {
}

HQ1006::HQ1006(const HQ1006& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1006)
}

void HQ1006::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stradestatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dnominalprice_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1006::~HQ1006() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1006)
  SharedDtor();
}

void HQ1006::SharedDtor() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (stradestatus_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stradestatus_;
  }
  if (this != default_instance_) {
  }
}

void HQ1006::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1006::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1006_descriptor_;
}

const HQ1006& HQ1006::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1006* HQ1006::default_instance_ = NULL;

HQ1006* HQ1006::New() const {
  return new HQ1006;
}

void HQ1006::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_smarketno()) {
      if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        smarketno_->clear();
      }
    }
    if (has_sstockcode()) {
      if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstockcode_->clear();
      }
    }
    if (has_stradestatus()) {
      if (stradestatus_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stradestatus_->clear();
      }
    }
    dnominalprice_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1006::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1006)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sMarketNo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smarketno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smarketno().data(), this->smarketno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "smarketno");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sStockCode;
        break;
      }

      // required string sStockCode = 2;
      case 2: {
        if (tag == 18) {
         parse_sStockCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstockcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstockcode().data(), this->sstockcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstockcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sTradeStatus;
        break;
      }

      // optional string sTradeStatus = 3;
      case 3: {
        if (tag == 26) {
         parse_sTradeStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stradestatus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stradestatus().data(), this->stradestatus().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stradestatus");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_dNominalPrice;
        break;
      }

      // optional double dNominalPrice = 4;
      case 4: {
        if (tag == 33) {
         parse_dNominalPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dnominalprice_)));
          set_has_dnominalprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1006)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1006)
  return false;
#undef DO_
}

void HQ1006::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1006)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smarketno(), output);
  }

  // required string sStockCode = 2;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sstockcode(), output);
  }

  // optional string sTradeStatus = 3;
  if (has_stradestatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stradestatus().data(), this->stradestatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stradestatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->stradestatus(), output);
  }

  // optional double dNominalPrice = 4;
  if (has_dnominalprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->dnominalprice(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1006)
}

::google::protobuf::uint8* HQ1006::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1006)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->smarketno(), target);
  }

  // required string sStockCode = 2;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sstockcode(), target);
  }

  // optional string sTradeStatus = 3;
  if (has_stradestatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stradestatus().data(), this->stradestatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stradestatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->stradestatus(), target);
  }

  // optional double dNominalPrice = 4;
  if (has_dnominalprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->dnominalprice(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1006)
  return target;
}

int HQ1006::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sMarketNo = 1;
    if (has_smarketno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smarketno());
    }

    // required string sStockCode = 2;
    if (has_sstockcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstockcode());
    }

    // optional string sTradeStatus = 3;
    if (has_stradestatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stradestatus());
    }

    // optional double dNominalPrice = 4;
    if (has_dnominalprice()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1006::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1006* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1006*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1006::MergeFrom(const HQ1006& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_smarketno()) {
      set_smarketno(from.smarketno());
    }
    if (from.has_sstockcode()) {
      set_sstockcode(from.sstockcode());
    }
    if (from.has_stradestatus()) {
      set_stradestatus(from.stradestatus());
    }
    if (from.has_dnominalprice()) {
      set_dnominalprice(from.dnominalprice());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1006::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1006::CopyFrom(const HQ1006& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1006::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void HQ1006::Swap(HQ1006* other) {
  if (other != this) {
    std::swap(smarketno_, other->smarketno_);
    std::swap(sstockcode_, other->sstockcode_);
    std::swap(stradestatus_, other->stradestatus_);
    std::swap(dnominalprice_, other->dnominalprice_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1006::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1006_descriptor_;
  metadata.reflection = HQ1006_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1006s::kRHQ1006FieldNumber;
#endif  // !_MSC_VER

HQ1006s::HQ1006s()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1006s)
}

void HQ1006s::InitAsDefaultInstance() {
}

HQ1006s::HQ1006s(const HQ1006s& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1006s)
}

void HQ1006s::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1006s::~HQ1006s() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1006s)
  SharedDtor();
}

void HQ1006s::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HQ1006s::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1006s::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1006s_descriptor_;
}

const HQ1006s& HQ1006s::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1006s* HQ1006s::default_instance_ = NULL;

HQ1006s* HQ1006s::New() const {
  return new HQ1006s;
}

void HQ1006s::Clear() {
  rhq1006_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1006s::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1006s)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HQStockPackage.HQ1006 rHQ1006 = 1;
      case 1: {
        if (tag == 10) {
         parse_rHQ1006:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rhq1006()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_rHQ1006;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1006s)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1006s)
  return false;
#undef DO_
}

void HQ1006s::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1006s)
  // repeated .HQStockPackage.HQ1006 rHQ1006 = 1;
  for (int i = 0; i < this->rhq1006_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rhq1006(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1006s)
}

::google::protobuf::uint8* HQ1006s::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1006s)
  // repeated .HQStockPackage.HQ1006 rHQ1006 = 1;
  for (int i = 0; i < this->rhq1006_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rhq1006(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1006s)
  return target;
}

int HQ1006s::ByteSize() const {
  int total_size = 0;

  // repeated .HQStockPackage.HQ1006 rHQ1006 = 1;
  total_size += 1 * this->rhq1006_size();
  for (int i = 0; i < this->rhq1006_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rhq1006(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1006s::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1006s* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1006s*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1006s::MergeFrom(const HQ1006s& from) {
  GOOGLE_CHECK_NE(&from, this);
  rhq1006_.MergeFrom(from.rhq1006_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1006s::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1006s::CopyFrom(const HQ1006s& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1006s::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rhq1006())) return false;
  return true;
}

void HQ1006s::Swap(HQ1006s* other) {
  if (other != this) {
    rhq1006_.Swap(&other->rhq1006_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1006s::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1006s_descriptor_;
  metadata.reflection = HQ1006s_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1011::kSMarketNoFieldNumber;
const int HQ1011::kSStockCodeFieldNumber;
const int HQ1011::kSTimeStampFieldNumber;
const int HQ1011::kDSpecialMarkFieldNumber;
#endif  // !_MSC_VER

HQ1011::HQ1011()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1011)
}

void HQ1011::InitAsDefaultInstance() {
}

HQ1011::HQ1011(const HQ1011& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1011)
}

void HQ1011::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dspecialmark_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1011::~HQ1011() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1011)
  SharedDtor();
}

void HQ1011::SharedDtor() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (stimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stimestamp_;
  }
  if (this != default_instance_) {
  }
}

void HQ1011::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1011::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1011_descriptor_;
}

const HQ1011& HQ1011::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1011* HQ1011::default_instance_ = NULL;

HQ1011* HQ1011::New() const {
  return new HQ1011;
}

void HQ1011::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_smarketno()) {
      if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        smarketno_->clear();
      }
    }
    if (has_sstockcode()) {
      if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstockcode_->clear();
      }
    }
    if (has_stimestamp()) {
      if (stimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stimestamp_->clear();
      }
    }
    dspecialmark_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1011::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1011)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sMarketNo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smarketno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smarketno().data(), this->smarketno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "smarketno");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sStockCode;
        break;
      }

      // required string sStockCode = 2;
      case 2: {
        if (tag == 18) {
         parse_sStockCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstockcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstockcode().data(), this->sstockcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstockcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sTimeStamp;
        break;
      }

      // optional string sTimeStamp = 3;
      case 3: {
        if (tag == 26) {
         parse_sTimeStamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stimestamp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stimestamp().data(), this->stimestamp().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stimestamp");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_dSpecialMark;
        break;
      }

      // optional int64 dSpecialMark = 4;
      case 4: {
        if (tag == 32) {
         parse_dSpecialMark:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dspecialmark_)));
          set_has_dspecialmark();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1011)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1011)
  return false;
#undef DO_
}

void HQ1011::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1011)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smarketno(), output);
  }

  // required string sStockCode = 2;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sstockcode(), output);
  }

  // optional string sTimeStamp = 3;
  if (has_stimestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stimestamp().data(), this->stimestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stimestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->stimestamp(), output);
  }

  // optional int64 dSpecialMark = 4;
  if (has_dspecialmark()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->dspecialmark(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1011)
}

::google::protobuf::uint8* HQ1011::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1011)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->smarketno(), target);
  }

  // required string sStockCode = 2;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sstockcode(), target);
  }

  // optional string sTimeStamp = 3;
  if (has_stimestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stimestamp().data(), this->stimestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stimestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->stimestamp(), target);
  }

  // optional int64 dSpecialMark = 4;
  if (has_dspecialmark()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->dspecialmark(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1011)
  return target;
}

int HQ1011::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sMarketNo = 1;
    if (has_smarketno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smarketno());
    }

    // required string sStockCode = 2;
    if (has_sstockcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstockcode());
    }

    // optional string sTimeStamp = 3;
    if (has_stimestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stimestamp());
    }

    // optional int64 dSpecialMark = 4;
    if (has_dspecialmark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dspecialmark());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1011::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1011* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1011*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1011::MergeFrom(const HQ1011& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_smarketno()) {
      set_smarketno(from.smarketno());
    }
    if (from.has_sstockcode()) {
      set_sstockcode(from.sstockcode());
    }
    if (from.has_stimestamp()) {
      set_stimestamp(from.stimestamp());
    }
    if (from.has_dspecialmark()) {
      set_dspecialmark(from.dspecialmark());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1011::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1011::CopyFrom(const HQ1011& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1011::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void HQ1011::Swap(HQ1011* other) {
  if (other != this) {
    std::swap(smarketno_, other->smarketno_);
    std::swap(sstockcode_, other->sstockcode_);
    std::swap(stimestamp_, other->stimestamp_);
    std::swap(dspecialmark_, other->dspecialmark_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1011::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1011_descriptor_;
  metadata.reflection = HQ1011_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1011s::kRHQ1011FieldNumber;
#endif  // !_MSC_VER

HQ1011s::HQ1011s()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1011s)
}

void HQ1011s::InitAsDefaultInstance() {
}

HQ1011s::HQ1011s(const HQ1011s& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1011s)
}

void HQ1011s::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1011s::~HQ1011s() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1011s)
  SharedDtor();
}

void HQ1011s::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HQ1011s::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1011s::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1011s_descriptor_;
}

const HQ1011s& HQ1011s::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1011s* HQ1011s::default_instance_ = NULL;

HQ1011s* HQ1011s::New() const {
  return new HQ1011s;
}

void HQ1011s::Clear() {
  rhq1011_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1011s::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1011s)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HQStockPackage.HQ1011 rHQ1011 = 1;
      case 1: {
        if (tag == 10) {
         parse_rHQ1011:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rhq1011()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_rHQ1011;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1011s)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1011s)
  return false;
#undef DO_
}

void HQ1011s::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1011s)
  // repeated .HQStockPackage.HQ1011 rHQ1011 = 1;
  for (int i = 0; i < this->rhq1011_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rhq1011(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1011s)
}

::google::protobuf::uint8* HQ1011s::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1011s)
  // repeated .HQStockPackage.HQ1011 rHQ1011 = 1;
  for (int i = 0; i < this->rhq1011_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rhq1011(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1011s)
  return target;
}

int HQ1011s::ByteSize() const {
  int total_size = 0;

  // repeated .HQStockPackage.HQ1011 rHQ1011 = 1;
  total_size += 1 * this->rhq1011_size();
  for (int i = 0; i < this->rhq1011_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rhq1011(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1011s::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1011s* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1011s*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1011s::MergeFrom(const HQ1011s& from) {
  GOOGLE_CHECK_NE(&from, this);
  rhq1011_.MergeFrom(from.rhq1011_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1011s::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1011s::CopyFrom(const HQ1011s& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1011s::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rhq1011())) return false;
  return true;
}

void HQ1011s::Swap(HQ1011s* other) {
  if (other != this) {
    rhq1011_.Swap(&other->rhq1011_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1011s::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1011s_descriptor_;
  metadata.reflection = HQ1011s_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1013::kSMarketNoFieldNumber;
const int HQ1013::kSRecordNoFieldNumber;
const int HQ1013::kSReportSeatFieldNumber;
const int HQ1013::kSStockCodeFieldNumber;
const int HQ1013::kDEntrustPriceFieldNumber;
const int HQ1013::kDEntrustAmountFieldNumber;
const int HQ1013::kSSideFieldNumber;
const int HQ1013::kSContactInfoFieldNumber;
const int HQ1013::kSTransactDateFieldNumber;
const int HQ1013::kSTransactTimeFieldNumber;
const int HQ1013::kSTransTypeFieldNumber;
const int HQ1013::kSConfirmIDFieldNumber;
const int HQ1013::kSBulkunderweightFlagFieldNumber;
const int HQ1013::kSExecTypeFieldNumber;
#endif  // !_MSC_VER

HQ1013::HQ1013()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1013)
}

void HQ1013::InitAsDefaultInstance() {
}

HQ1013::HQ1013(const HQ1013& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1013)
}

void HQ1013::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srecordno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sreportseat_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dentrustprice_ = 0;
  dentrustamount_ = 0;
  sside_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scontactinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stransactdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stransacttime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stranstype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sconfirmid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sbulkunderweightflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sexectype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1013::~HQ1013() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1013)
  SharedDtor();
}

void HQ1013::SharedDtor() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (srecordno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srecordno_;
  }
  if (sreportseat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sreportseat_;
  }
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sside_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sside_;
  }
  if (scontactinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scontactinfo_;
  }
  if (stransactdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stransactdate_;
  }
  if (stransacttime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stransacttime_;
  }
  if (stranstype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stranstype_;
  }
  if (sconfirmid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sconfirmid_;
  }
  if (sbulkunderweightflag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sbulkunderweightflag_;
  }
  if (sexectype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sexectype_;
  }
  if (this != default_instance_) {
  }
}

void HQ1013::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1013::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1013_descriptor_;
}

const HQ1013& HQ1013::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1013* HQ1013::default_instance_ = NULL;

HQ1013* HQ1013::New() const {
  return new HQ1013;
}

void HQ1013::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HQ1013*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(dentrustprice_, dentrustamount_);
    if (has_smarketno()) {
      if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        smarketno_->clear();
      }
    }
    if (has_srecordno()) {
      if (srecordno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        srecordno_->clear();
      }
    }
    if (has_sreportseat()) {
      if (sreportseat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sreportseat_->clear();
      }
    }
    if (has_sstockcode()) {
      if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstockcode_->clear();
      }
    }
    if (has_sside()) {
      if (sside_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sside_->clear();
      }
    }
    if (has_scontactinfo()) {
      if (scontactinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        scontactinfo_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 16128) {
    if (has_stransactdate()) {
      if (stransactdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stransactdate_->clear();
      }
    }
    if (has_stransacttime()) {
      if (stransacttime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stransacttime_->clear();
      }
    }
    if (has_stranstype()) {
      if (stranstype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stranstype_->clear();
      }
    }
    if (has_sconfirmid()) {
      if (sconfirmid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sconfirmid_->clear();
      }
    }
    if (has_sbulkunderweightflag()) {
      if (sbulkunderweightflag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sbulkunderweightflag_->clear();
      }
    }
    if (has_sexectype()) {
      if (sexectype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sexectype_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1013::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1013)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sMarketNo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smarketno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smarketno().data(), this->smarketno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "smarketno");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sRecordNo;
        break;
      }

      // required string sRecordNo = 2;
      case 2: {
        if (tag == 18) {
         parse_sRecordNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srecordno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srecordno().data(), this->srecordno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srecordno");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sReportSeat;
        break;
      }

      // required string sReportSeat = 3;
      case 3: {
        if (tag == 26) {
         parse_sReportSeat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sreportseat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sreportseat().data(), this->sreportseat().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sreportseat");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sStockCode;
        break;
      }

      // optional string sStockCode = 4;
      case 4: {
        if (tag == 34) {
         parse_sStockCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstockcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstockcode().data(), this->sstockcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstockcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_dEntrustPrice;
        break;
      }

      // optional double dEntrustPrice = 5;
      case 5: {
        if (tag == 41) {
         parse_dEntrustPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dentrustprice_)));
          set_has_dentrustprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_dEntrustAmount;
        break;
      }

      // optional double dEntrustAmount = 6;
      case 6: {
        if (tag == 49) {
         parse_dEntrustAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dentrustamount_)));
          set_has_dentrustamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sSide;
        break;
      }

      // optional string sSide = 7;
      case 7: {
        if (tag == 58) {
         parse_sSide:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sside()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sside().data(), this->sside().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sside");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_sContactInfo;
        break;
      }

      // optional bytes sContactInfo = 8;
      case 8: {
        if (tag == 66) {
         parse_sContactInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_scontactinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_sTransactDate;
        break;
      }

      // required string sTransactDate = 9;
      case 9: {
        if (tag == 74) {
         parse_sTransactDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stransactdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stransactdate().data(), this->stransactdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stransactdate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_sTransactTime;
        break;
      }

      // optional string sTransactTime = 10;
      case 10: {
        if (tag == 82) {
         parse_sTransactTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stransacttime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stransacttime().data(), this->stransacttime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stransacttime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_sTransType;
        break;
      }

      // optional string sTransType = 11;
      case 11: {
        if (tag == 90) {
         parse_sTransType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stranstype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stranstype().data(), this->stranstype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stranstype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_sConfirmID;
        break;
      }

      // optional string sConfirmID = 12;
      case 12: {
        if (tag == 98) {
         parse_sConfirmID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sconfirmid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sconfirmid().data(), this->sconfirmid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sconfirmid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_sBulkunderweightFlag;
        break;
      }

      // optional string sBulkunderweightFlag = 13;
      case 13: {
        if (tag == 106) {
         parse_sBulkunderweightFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sbulkunderweightflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sbulkunderweightflag().data(), this->sbulkunderweightflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sbulkunderweightflag");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_sExecType;
        break;
      }

      // optional string sExecType = 14;
      case 14: {
        if (tag == 114) {
         parse_sExecType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sexectype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sexectype().data(), this->sexectype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sexectype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1013)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1013)
  return false;
#undef DO_
}

void HQ1013::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1013)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smarketno(), output);
  }

  // required string sRecordNo = 2;
  if (has_srecordno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srecordno().data(), this->srecordno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srecordno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->srecordno(), output);
  }

  // required string sReportSeat = 3;
  if (has_sreportseat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sreportseat().data(), this->sreportseat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sreportseat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sreportseat(), output);
  }

  // optional string sStockCode = 4;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sstockcode(), output);
  }

  // optional double dEntrustPrice = 5;
  if (has_dentrustprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->dentrustprice(), output);
  }

  // optional double dEntrustAmount = 6;
  if (has_dentrustamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->dentrustamount(), output);
  }

  // optional string sSide = 7;
  if (has_sside()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sside().data(), this->sside().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sside");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sside(), output);
  }

  // optional bytes sContactInfo = 8;
  if (has_scontactinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->scontactinfo(), output);
  }

  // required string sTransactDate = 9;
  if (has_stransactdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stransactdate().data(), this->stransactdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stransactdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->stransactdate(), output);
  }

  // optional string sTransactTime = 10;
  if (has_stransacttime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stransacttime().data(), this->stransacttime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stransacttime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->stransacttime(), output);
  }

  // optional string sTransType = 11;
  if (has_stranstype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stranstype().data(), this->stranstype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stranstype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->stranstype(), output);
  }

  // optional string sConfirmID = 12;
  if (has_sconfirmid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sconfirmid().data(), this->sconfirmid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sconfirmid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->sconfirmid(), output);
  }

  // optional string sBulkunderweightFlag = 13;
  if (has_sbulkunderweightflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sbulkunderweightflag().data(), this->sbulkunderweightflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sbulkunderweightflag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->sbulkunderweightflag(), output);
  }

  // optional string sExecType = 14;
  if (has_sexectype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sexectype().data(), this->sexectype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sexectype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->sexectype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1013)
}

::google::protobuf::uint8* HQ1013::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1013)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->smarketno(), target);
  }

  // required string sRecordNo = 2;
  if (has_srecordno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srecordno().data(), this->srecordno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srecordno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->srecordno(), target);
  }

  // required string sReportSeat = 3;
  if (has_sreportseat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sreportseat().data(), this->sreportseat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sreportseat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sreportseat(), target);
  }

  // optional string sStockCode = 4;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sstockcode(), target);
  }

  // optional double dEntrustPrice = 5;
  if (has_dentrustprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->dentrustprice(), target);
  }

  // optional double dEntrustAmount = 6;
  if (has_dentrustamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->dentrustamount(), target);
  }

  // optional string sSide = 7;
  if (has_sside()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sside().data(), this->sside().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sside");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sside(), target);
  }

  // optional bytes sContactInfo = 8;
  if (has_scontactinfo()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->scontactinfo(), target);
  }

  // required string sTransactDate = 9;
  if (has_stransactdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stransactdate().data(), this->stransactdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stransactdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->stransactdate(), target);
  }

  // optional string sTransactTime = 10;
  if (has_stransacttime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stransacttime().data(), this->stransacttime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stransacttime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->stransacttime(), target);
  }

  // optional string sTransType = 11;
  if (has_stranstype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stranstype().data(), this->stranstype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stranstype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->stranstype(), target);
  }

  // optional string sConfirmID = 12;
  if (has_sconfirmid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sconfirmid().data(), this->sconfirmid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sconfirmid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->sconfirmid(), target);
  }

  // optional string sBulkunderweightFlag = 13;
  if (has_sbulkunderweightflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sbulkunderweightflag().data(), this->sbulkunderweightflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sbulkunderweightflag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->sbulkunderweightflag(), target);
  }

  // optional string sExecType = 14;
  if (has_sexectype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sexectype().data(), this->sexectype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sexectype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->sexectype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1013)
  return target;
}

int HQ1013::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sMarketNo = 1;
    if (has_smarketno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smarketno());
    }

    // required string sRecordNo = 2;
    if (has_srecordno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->srecordno());
    }

    // required string sReportSeat = 3;
    if (has_sreportseat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sreportseat());
    }

    // optional string sStockCode = 4;
    if (has_sstockcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstockcode());
    }

    // optional double dEntrustPrice = 5;
    if (has_dentrustprice()) {
      total_size += 1 + 8;
    }

    // optional double dEntrustAmount = 6;
    if (has_dentrustamount()) {
      total_size += 1 + 8;
    }

    // optional string sSide = 7;
    if (has_sside()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sside());
    }

    // optional bytes sContactInfo = 8;
    if (has_scontactinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->scontactinfo());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string sTransactDate = 9;
    if (has_stransactdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stransactdate());
    }

    // optional string sTransactTime = 10;
    if (has_stransacttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stransacttime());
    }

    // optional string sTransType = 11;
    if (has_stranstype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stranstype());
    }

    // optional string sConfirmID = 12;
    if (has_sconfirmid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sconfirmid());
    }

    // optional string sBulkunderweightFlag = 13;
    if (has_sbulkunderweightflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sbulkunderweightflag());
    }

    // optional string sExecType = 14;
    if (has_sexectype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sexectype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1013::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1013* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1013*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1013::MergeFrom(const HQ1013& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_smarketno()) {
      set_smarketno(from.smarketno());
    }
    if (from.has_srecordno()) {
      set_srecordno(from.srecordno());
    }
    if (from.has_sreportseat()) {
      set_sreportseat(from.sreportseat());
    }
    if (from.has_sstockcode()) {
      set_sstockcode(from.sstockcode());
    }
    if (from.has_dentrustprice()) {
      set_dentrustprice(from.dentrustprice());
    }
    if (from.has_dentrustamount()) {
      set_dentrustamount(from.dentrustamount());
    }
    if (from.has_sside()) {
      set_sside(from.sside());
    }
    if (from.has_scontactinfo()) {
      set_scontactinfo(from.scontactinfo());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_stransactdate()) {
      set_stransactdate(from.stransactdate());
    }
    if (from.has_stransacttime()) {
      set_stransacttime(from.stransacttime());
    }
    if (from.has_stranstype()) {
      set_stranstype(from.stranstype());
    }
    if (from.has_sconfirmid()) {
      set_sconfirmid(from.sconfirmid());
    }
    if (from.has_sbulkunderweightflag()) {
      set_sbulkunderweightflag(from.sbulkunderweightflag());
    }
    if (from.has_sexectype()) {
      set_sexectype(from.sexectype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1013::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1013::CopyFrom(const HQ1013& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1013::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000107) != 0x00000107) return false;

  return true;
}

void HQ1013::Swap(HQ1013* other) {
  if (other != this) {
    std::swap(smarketno_, other->smarketno_);
    std::swap(srecordno_, other->srecordno_);
    std::swap(sreportseat_, other->sreportseat_);
    std::swap(sstockcode_, other->sstockcode_);
    std::swap(dentrustprice_, other->dentrustprice_);
    std::swap(dentrustamount_, other->dentrustamount_);
    std::swap(sside_, other->sside_);
    std::swap(scontactinfo_, other->scontactinfo_);
    std::swap(stransactdate_, other->stransactdate_);
    std::swap(stransacttime_, other->stransacttime_);
    std::swap(stranstype_, other->stranstype_);
    std::swap(sconfirmid_, other->sconfirmid_);
    std::swap(sbulkunderweightflag_, other->sbulkunderweightflag_);
    std::swap(sexectype_, other->sexectype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1013::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1013_descriptor_;
  metadata.reflection = HQ1013_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1013s::kRHQ1013FieldNumber;
#endif  // !_MSC_VER

HQ1013s::HQ1013s()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1013s)
}

void HQ1013s::InitAsDefaultInstance() {
}

HQ1013s::HQ1013s(const HQ1013s& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1013s)
}

void HQ1013s::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1013s::~HQ1013s() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1013s)
  SharedDtor();
}

void HQ1013s::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HQ1013s::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1013s::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1013s_descriptor_;
}

const HQ1013s& HQ1013s::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1013s* HQ1013s::default_instance_ = NULL;

HQ1013s* HQ1013s::New() const {
  return new HQ1013s;
}

void HQ1013s::Clear() {
  rhq1013_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1013s::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1013s)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HQStockPackage.HQ1013 rHQ1013 = 1;
      case 1: {
        if (tag == 10) {
         parse_rHQ1013:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rhq1013()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_rHQ1013;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1013s)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1013s)
  return false;
#undef DO_
}

void HQ1013s::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1013s)
  // repeated .HQStockPackage.HQ1013 rHQ1013 = 1;
  for (int i = 0; i < this->rhq1013_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rhq1013(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1013s)
}

::google::protobuf::uint8* HQ1013s::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1013s)
  // repeated .HQStockPackage.HQ1013 rHQ1013 = 1;
  for (int i = 0; i < this->rhq1013_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rhq1013(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1013s)
  return target;
}

int HQ1013s::ByteSize() const {
  int total_size = 0;

  // repeated .HQStockPackage.HQ1013 rHQ1013 = 1;
  total_size += 1 * this->rhq1013_size();
  for (int i = 0; i < this->rhq1013_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rhq1013(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1013s::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1013s* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1013s*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1013s::MergeFrom(const HQ1013s& from) {
  GOOGLE_CHECK_NE(&from, this);
  rhq1013_.MergeFrom(from.rhq1013_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1013s::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1013s::CopyFrom(const HQ1013s& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1013s::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rhq1013())) return false;
  return true;
}

void HQ1013s::Swap(HQ1013s* other) {
  if (other != this) {
    rhq1013_.Swap(&other->rhq1013_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1013s::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1013s_descriptor_;
  metadata.reflection = HQ1013s_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1055::kSMarketNoFieldNumber;
const int HQ1055::kSStockCodeFieldNumber;
const int HQ1055::kSStockNameFieldNumber;
const int HQ1055::kDBusinessAmountFieldNumber;
const int HQ1055::kDBusinessBalanceFieldNumber;
const int HQ1055::kDClosePriceFieldNumber;
const int HQ1055::kDBuyVolumeFieldNumber;
const int HQ1055::kDSellVolumeFieldNumber;
const int HQ1055::kSTradingPhaseCodeFieldNumber;
const int HQ1055::kSAbsoluteTimeStampFieldNumber;
const int HQ1055::kIInitDateFieldNumber;
#endif  // !_MSC_VER

HQ1055::HQ1055()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1055)
}

void HQ1055::InitAsDefaultInstance() {
}

HQ1055::HQ1055(const HQ1055& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1055)
}

void HQ1055::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sstockname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dbusinessamount_ = 0;
  dbusinessbalance_ = 0;
  dcloseprice_ = 0;
  dbuyvolume_ = 0;
  dsellvolume_ = 0;
  stradingphasecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sabsolutetimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iinitdate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1055::~HQ1055() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1055)
  SharedDtor();
}

void HQ1055::SharedDtor() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockname_;
  }
  if (stradingphasecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stradingphasecode_;
  }
  if (sabsolutetimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sabsolutetimestamp_;
  }
  if (this != default_instance_) {
  }
}

void HQ1055::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1055::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1055_descriptor_;
}

const HQ1055& HQ1055::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1055* HQ1055::default_instance_ = NULL;

HQ1055* HQ1055::New() const {
  return new HQ1055;
}

void HQ1055::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HQ1055*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(dbusinessamount_, dsellvolume_);
    if (has_smarketno()) {
      if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        smarketno_->clear();
      }
    }
    if (has_sstockcode()) {
      if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstockcode_->clear();
      }
    }
    if (has_sstockname()) {
      if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstockname_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 1792) {
    if (has_stradingphasecode()) {
      if (stradingphasecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stradingphasecode_->clear();
      }
    }
    if (has_sabsolutetimestamp()) {
      if (sabsolutetimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sabsolutetimestamp_->clear();
      }
    }
    iinitdate_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1055::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1055)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sMarketNo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smarketno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smarketno().data(), this->smarketno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "smarketno");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sStockCode;
        break;
      }

      // required string sStockCode = 2;
      case 2: {
        if (tag == 18) {
         parse_sStockCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstockcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstockcode().data(), this->sstockcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstockcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sStockName;
        break;
      }

      // optional bytes sStockName = 3;
      case 3: {
        if (tag == 26) {
         parse_sStockName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sstockname()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_dBusinessAmount;
        break;
      }

      // optional double dBusinessAmount = 4;
      case 4: {
        if (tag == 33) {
         parse_dBusinessAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbusinessamount_)));
          set_has_dbusinessamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_dBusinessBalance;
        break;
      }

      // optional double dBusinessBalance = 5;
      case 5: {
        if (tag == 41) {
         parse_dBusinessBalance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbusinessbalance_)));
          set_has_dbusinessbalance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_dClosePrice;
        break;
      }

      // optional double dClosePrice = 6;
      case 6: {
        if (tag == 49) {
         parse_dClosePrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dcloseprice_)));
          set_has_dcloseprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_dBuyVolume;
        break;
      }

      // optional double dBuyVolume = 7;
      case 7: {
        if (tag == 57) {
         parse_dBuyVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbuyvolume_)));
          set_has_dbuyvolume();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_dSellVolume;
        break;
      }

      // optional double dSellVolume = 8;
      case 8: {
        if (tag == 65) {
         parse_dSellVolume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dsellvolume_)));
          set_has_dsellvolume();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_sTradingPhaseCode;
        break;
      }

      // optional string sTradingPhaseCode = 9;
      case 9: {
        if (tag == 74) {
         parse_sTradingPhaseCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stradingphasecode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stradingphasecode().data(), this->stradingphasecode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stradingphasecode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_sAbsoluteTimeStamp;
        break;
      }

      // optional string sAbsoluteTimeStamp = 10;
      case 10: {
        if (tag == 82) {
         parse_sAbsoluteTimeStamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sabsolutetimestamp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sabsolutetimestamp().data(), this->sabsolutetimestamp().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sabsolutetimestamp");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_iInitDate;
        break;
      }

      // optional int32 iInitDate = 11;
      case 11: {
        if (tag == 88) {
         parse_iInitDate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iinitdate_)));
          set_has_iinitdate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1055)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1055)
  return false;
#undef DO_
}

void HQ1055::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1055)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smarketno(), output);
  }

  // required string sStockCode = 2;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sstockcode(), output);
  }

  // optional bytes sStockName = 3;
  if (has_sstockname()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->sstockname(), output);
  }

  // optional double dBusinessAmount = 4;
  if (has_dbusinessamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->dbusinessamount(), output);
  }

  // optional double dBusinessBalance = 5;
  if (has_dbusinessbalance()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->dbusinessbalance(), output);
  }

  // optional double dClosePrice = 6;
  if (has_dcloseprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->dcloseprice(), output);
  }

  // optional double dBuyVolume = 7;
  if (has_dbuyvolume()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->dbuyvolume(), output);
  }

  // optional double dSellVolume = 8;
  if (has_dsellvolume()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->dsellvolume(), output);
  }

  // optional string sTradingPhaseCode = 9;
  if (has_stradingphasecode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stradingphasecode().data(), this->stradingphasecode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stradingphasecode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->stradingphasecode(), output);
  }

  // optional string sAbsoluteTimeStamp = 10;
  if (has_sabsolutetimestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sabsolutetimestamp().data(), this->sabsolutetimestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sabsolutetimestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->sabsolutetimestamp(), output);
  }

  // optional int32 iInitDate = 11;
  if (has_iinitdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->iinitdate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1055)
}

::google::protobuf::uint8* HQ1055::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1055)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->smarketno(), target);
  }

  // required string sStockCode = 2;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sstockcode(), target);
  }

  // optional bytes sStockName = 3;
  if (has_sstockname()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->sstockname(), target);
  }

  // optional double dBusinessAmount = 4;
  if (has_dbusinessamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->dbusinessamount(), target);
  }

  // optional double dBusinessBalance = 5;
  if (has_dbusinessbalance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->dbusinessbalance(), target);
  }

  // optional double dClosePrice = 6;
  if (has_dcloseprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->dcloseprice(), target);
  }

  // optional double dBuyVolume = 7;
  if (has_dbuyvolume()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->dbuyvolume(), target);
  }

  // optional double dSellVolume = 8;
  if (has_dsellvolume()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->dsellvolume(), target);
  }

  // optional string sTradingPhaseCode = 9;
  if (has_stradingphasecode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stradingphasecode().data(), this->stradingphasecode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stradingphasecode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->stradingphasecode(), target);
  }

  // optional string sAbsoluteTimeStamp = 10;
  if (has_sabsolutetimestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sabsolutetimestamp().data(), this->sabsolutetimestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sabsolutetimestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->sabsolutetimestamp(), target);
  }

  // optional int32 iInitDate = 11;
  if (has_iinitdate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->iinitdate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1055)
  return target;
}

int HQ1055::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sMarketNo = 1;
    if (has_smarketno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smarketno());
    }

    // required string sStockCode = 2;
    if (has_sstockcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstockcode());
    }

    // optional bytes sStockName = 3;
    if (has_sstockname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sstockname());
    }

    // optional double dBusinessAmount = 4;
    if (has_dbusinessamount()) {
      total_size += 1 + 8;
    }

    // optional double dBusinessBalance = 5;
    if (has_dbusinessbalance()) {
      total_size += 1 + 8;
    }

    // optional double dClosePrice = 6;
    if (has_dcloseprice()) {
      total_size += 1 + 8;
    }

    // optional double dBuyVolume = 7;
    if (has_dbuyvolume()) {
      total_size += 1 + 8;
    }

    // optional double dSellVolume = 8;
    if (has_dsellvolume()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string sTradingPhaseCode = 9;
    if (has_stradingphasecode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stradingphasecode());
    }

    // optional string sAbsoluteTimeStamp = 10;
    if (has_sabsolutetimestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sabsolutetimestamp());
    }

    // optional int32 iInitDate = 11;
    if (has_iinitdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->iinitdate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1055::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1055* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1055*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1055::MergeFrom(const HQ1055& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_smarketno()) {
      set_smarketno(from.smarketno());
    }
    if (from.has_sstockcode()) {
      set_sstockcode(from.sstockcode());
    }
    if (from.has_sstockname()) {
      set_sstockname(from.sstockname());
    }
    if (from.has_dbusinessamount()) {
      set_dbusinessamount(from.dbusinessamount());
    }
    if (from.has_dbusinessbalance()) {
      set_dbusinessbalance(from.dbusinessbalance());
    }
    if (from.has_dcloseprice()) {
      set_dcloseprice(from.dcloseprice());
    }
    if (from.has_dbuyvolume()) {
      set_dbuyvolume(from.dbuyvolume());
    }
    if (from.has_dsellvolume()) {
      set_dsellvolume(from.dsellvolume());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_stradingphasecode()) {
      set_stradingphasecode(from.stradingphasecode());
    }
    if (from.has_sabsolutetimestamp()) {
      set_sabsolutetimestamp(from.sabsolutetimestamp());
    }
    if (from.has_iinitdate()) {
      set_iinitdate(from.iinitdate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1055::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1055::CopyFrom(const HQ1055& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1055::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void HQ1055::Swap(HQ1055* other) {
  if (other != this) {
    std::swap(smarketno_, other->smarketno_);
    std::swap(sstockcode_, other->sstockcode_);
    std::swap(sstockname_, other->sstockname_);
    std::swap(dbusinessamount_, other->dbusinessamount_);
    std::swap(dbusinessbalance_, other->dbusinessbalance_);
    std::swap(dcloseprice_, other->dcloseprice_);
    std::swap(dbuyvolume_, other->dbuyvolume_);
    std::swap(dsellvolume_, other->dsellvolume_);
    std::swap(stradingphasecode_, other->stradingphasecode_);
    std::swap(sabsolutetimestamp_, other->sabsolutetimestamp_);
    std::swap(iinitdate_, other->iinitdate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1055::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1055_descriptor_;
  metadata.reflection = HQ1055_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1055s::kRHQ1055FieldNumber;
#endif  // !_MSC_VER

HQ1055s::HQ1055s()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1055s)
}

void HQ1055s::InitAsDefaultInstance() {
}

HQ1055s::HQ1055s(const HQ1055s& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1055s)
}

void HQ1055s::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1055s::~HQ1055s() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1055s)
  SharedDtor();
}

void HQ1055s::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HQ1055s::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1055s::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1055s_descriptor_;
}

const HQ1055s& HQ1055s::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1055s* HQ1055s::default_instance_ = NULL;

HQ1055s* HQ1055s::New() const {
  return new HQ1055s;
}

void HQ1055s::Clear() {
  rhq1055_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1055s::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1055s)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HQStockPackage.HQ1055 rHQ1055 = 1;
      case 1: {
        if (tag == 10) {
         parse_rHQ1055:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rhq1055()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_rHQ1055;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1055s)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1055s)
  return false;
#undef DO_
}

void HQ1055s::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1055s)
  // repeated .HQStockPackage.HQ1055 rHQ1055 = 1;
  for (int i = 0; i < this->rhq1055_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rhq1055(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1055s)
}

::google::protobuf::uint8* HQ1055s::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1055s)
  // repeated .HQStockPackage.HQ1055 rHQ1055 = 1;
  for (int i = 0; i < this->rhq1055_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rhq1055(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1055s)
  return target;
}

int HQ1055s::ByteSize() const {
  int total_size = 0;

  // repeated .HQStockPackage.HQ1055 rHQ1055 = 1;
  total_size += 1 * this->rhq1055_size();
  for (int i = 0; i < this->rhq1055_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rhq1055(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1055s::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1055s* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1055s*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1055s::MergeFrom(const HQ1055s& from) {
  GOOGLE_CHECK_NE(&from, this);
  rhq1055_.MergeFrom(from.rhq1055_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1055s::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1055s::CopyFrom(const HQ1055s& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1055s::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rhq1055())) return false;
  return true;
}

void HQ1055s::Swap(HQ1055s* other) {
  if (other != this) {
    rhq1055_.Swap(&other->rhq1055_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1055s::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1055s_descriptor_;
  metadata.reflection = HQ1055s_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1057::kSMarketNoFieldNumber;
const int HQ1057::kSStockCodeFieldNumber;
const int HQ1057::kSTradingDayFieldNumber;
const int HQ1057::kSForquoteSysIdFieldNumber;
const int HQ1057::kSForquoteTimeFieldNumber;
const int HQ1057::kSActionDayFieldNumber;
const int HQ1057::kSAbsoluteTimeStampFieldNumber;
const int HQ1057::kIInitDateFieldNumber;
#endif  // !_MSC_VER

HQ1057::HQ1057()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1057)
}

void HQ1057::InitAsDefaultInstance() {
}

HQ1057::HQ1057(const HQ1057& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1057)
}

void HQ1057::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stradingday_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sforquotesysid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sforquotetime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sactionday_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sabsolutetimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iinitdate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1057::~HQ1057() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1057)
  SharedDtor();
}

void HQ1057::SharedDtor() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (stradingday_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stradingday_;
  }
  if (sforquotesysid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sforquotesysid_;
  }
  if (sforquotetime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sforquotetime_;
  }
  if (sactionday_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sactionday_;
  }
  if (sabsolutetimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sabsolutetimestamp_;
  }
  if (this != default_instance_) {
  }
}

void HQ1057::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1057::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1057_descriptor_;
}

const HQ1057& HQ1057::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1057* HQ1057::default_instance_ = NULL;

HQ1057* HQ1057::New() const {
  return new HQ1057;
}

void HQ1057::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    if (has_smarketno()) {
      if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        smarketno_->clear();
      }
    }
    if (has_sstockcode()) {
      if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstockcode_->clear();
      }
    }
    if (has_stradingday()) {
      if (stradingday_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stradingday_->clear();
      }
    }
    if (has_sforquotesysid()) {
      if (sforquotesysid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sforquotesysid_->clear();
      }
    }
    if (has_sforquotetime()) {
      if (sforquotetime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sforquotetime_->clear();
      }
    }
    if (has_sactionday()) {
      if (sactionday_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sactionday_->clear();
      }
    }
    if (has_sabsolutetimestamp()) {
      if (sabsolutetimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sabsolutetimestamp_->clear();
      }
    }
    iinitdate_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1057::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1057)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sMarketNo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smarketno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smarketno().data(), this->smarketno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "smarketno");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sStockCode;
        break;
      }

      // required string sStockCode = 2;
      case 2: {
        if (tag == 18) {
         parse_sStockCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstockcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstockcode().data(), this->sstockcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstockcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sTradingDay;
        break;
      }

      // optional string sTradingDay = 3;
      case 3: {
        if (tag == 26) {
         parse_sTradingDay:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stradingday()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stradingday().data(), this->stradingday().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stradingday");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sForquoteSysId;
        break;
      }

      // optional string sForquoteSysId = 4;
      case 4: {
        if (tag == 34) {
         parse_sForquoteSysId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sforquotesysid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sforquotesysid().data(), this->sforquotesysid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sforquotesysid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sForquoteTime;
        break;
      }

      // optional string sForquoteTime = 5;
      case 5: {
        if (tag == 42) {
         parse_sForquoteTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sforquotetime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sforquotetime().data(), this->sforquotetime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sforquotetime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_sActionDay;
        break;
      }

      // optional string sActionDay = 6;
      case 6: {
        if (tag == 50) {
         parse_sActionDay:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sactionday()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sactionday().data(), this->sactionday().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sactionday");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sAbsoluteTimeStamp;
        break;
      }

      // optional string sAbsoluteTimeStamp = 7;
      case 7: {
        if (tag == 58) {
         parse_sAbsoluteTimeStamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sabsolutetimestamp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sabsolutetimestamp().data(), this->sabsolutetimestamp().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sabsolutetimestamp");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_iInitDate;
        break;
      }

      // optional int32 iInitDate = 8;
      case 8: {
        if (tag == 64) {
         parse_iInitDate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iinitdate_)));
          set_has_iinitdate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1057)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1057)
  return false;
#undef DO_
}

void HQ1057::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1057)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smarketno(), output);
  }

  // required string sStockCode = 2;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sstockcode(), output);
  }

  // optional string sTradingDay = 3;
  if (has_stradingday()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stradingday().data(), this->stradingday().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stradingday");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->stradingday(), output);
  }

  // optional string sForquoteSysId = 4;
  if (has_sforquotesysid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sforquotesysid().data(), this->sforquotesysid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sforquotesysid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sforquotesysid(), output);
  }

  // optional string sForquoteTime = 5;
  if (has_sforquotetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sforquotetime().data(), this->sforquotetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sforquotetime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sforquotetime(), output);
  }

  // optional string sActionDay = 6;
  if (has_sactionday()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sactionday().data(), this->sactionday().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sactionday");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->sactionday(), output);
  }

  // optional string sAbsoluteTimeStamp = 7;
  if (has_sabsolutetimestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sabsolutetimestamp().data(), this->sabsolutetimestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sabsolutetimestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sabsolutetimestamp(), output);
  }

  // optional int32 iInitDate = 8;
  if (has_iinitdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->iinitdate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1057)
}

::google::protobuf::uint8* HQ1057::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1057)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->smarketno(), target);
  }

  // required string sStockCode = 2;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sstockcode(), target);
  }

  // optional string sTradingDay = 3;
  if (has_stradingday()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stradingday().data(), this->stradingday().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stradingday");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->stradingday(), target);
  }

  // optional string sForquoteSysId = 4;
  if (has_sforquotesysid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sforquotesysid().data(), this->sforquotesysid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sforquotesysid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sforquotesysid(), target);
  }

  // optional string sForquoteTime = 5;
  if (has_sforquotetime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sforquotetime().data(), this->sforquotetime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sforquotetime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sforquotetime(), target);
  }

  // optional string sActionDay = 6;
  if (has_sactionday()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sactionday().data(), this->sactionday().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sactionday");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->sactionday(), target);
  }

  // optional string sAbsoluteTimeStamp = 7;
  if (has_sabsolutetimestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sabsolutetimestamp().data(), this->sabsolutetimestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sabsolutetimestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sabsolutetimestamp(), target);
  }

  // optional int32 iInitDate = 8;
  if (has_iinitdate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->iinitdate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1057)
  return target;
}

int HQ1057::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sMarketNo = 1;
    if (has_smarketno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smarketno());
    }

    // required string sStockCode = 2;
    if (has_sstockcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstockcode());
    }

    // optional string sTradingDay = 3;
    if (has_stradingday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stradingday());
    }

    // optional string sForquoteSysId = 4;
    if (has_sforquotesysid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sforquotesysid());
    }

    // optional string sForquoteTime = 5;
    if (has_sforquotetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sforquotetime());
    }

    // optional string sActionDay = 6;
    if (has_sactionday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sactionday());
    }

    // optional string sAbsoluteTimeStamp = 7;
    if (has_sabsolutetimestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sabsolutetimestamp());
    }

    // optional int32 iInitDate = 8;
    if (has_iinitdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->iinitdate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1057::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1057* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1057*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1057::MergeFrom(const HQ1057& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_smarketno()) {
      set_smarketno(from.smarketno());
    }
    if (from.has_sstockcode()) {
      set_sstockcode(from.sstockcode());
    }
    if (from.has_stradingday()) {
      set_stradingday(from.stradingday());
    }
    if (from.has_sforquotesysid()) {
      set_sforquotesysid(from.sforquotesysid());
    }
    if (from.has_sforquotetime()) {
      set_sforquotetime(from.sforquotetime());
    }
    if (from.has_sactionday()) {
      set_sactionday(from.sactionday());
    }
    if (from.has_sabsolutetimestamp()) {
      set_sabsolutetimestamp(from.sabsolutetimestamp());
    }
    if (from.has_iinitdate()) {
      set_iinitdate(from.iinitdate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1057::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1057::CopyFrom(const HQ1057& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1057::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void HQ1057::Swap(HQ1057* other) {
  if (other != this) {
    std::swap(smarketno_, other->smarketno_);
    std::swap(sstockcode_, other->sstockcode_);
    std::swap(stradingday_, other->stradingday_);
    std::swap(sforquotesysid_, other->sforquotesysid_);
    std::swap(sforquotetime_, other->sforquotetime_);
    std::swap(sactionday_, other->sactionday_);
    std::swap(sabsolutetimestamp_, other->sabsolutetimestamp_);
    std::swap(iinitdate_, other->iinitdate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1057::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1057_descriptor_;
  metadata.reflection = HQ1057_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1057s::kRHQ1057FieldNumber;
#endif  // !_MSC_VER

HQ1057s::HQ1057s()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1057s)
}

void HQ1057s::InitAsDefaultInstance() {
}

HQ1057s::HQ1057s(const HQ1057s& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1057s)
}

void HQ1057s::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1057s::~HQ1057s() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1057s)
  SharedDtor();
}

void HQ1057s::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HQ1057s::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1057s::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1057s_descriptor_;
}

const HQ1057s& HQ1057s::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1057s* HQ1057s::default_instance_ = NULL;

HQ1057s* HQ1057s::New() const {
  return new HQ1057s;
}

void HQ1057s::Clear() {
  rhq1057_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1057s::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1057s)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HQStockPackage.HQ1057 rHQ1057 = 1;
      case 1: {
        if (tag == 10) {
         parse_rHQ1057:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rhq1057()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_rHQ1057;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1057s)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1057s)
  return false;
#undef DO_
}

void HQ1057s::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1057s)
  // repeated .HQStockPackage.HQ1057 rHQ1057 = 1;
  for (int i = 0; i < this->rhq1057_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rhq1057(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1057s)
}

::google::protobuf::uint8* HQ1057s::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1057s)
  // repeated .HQStockPackage.HQ1057 rHQ1057 = 1;
  for (int i = 0; i < this->rhq1057_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rhq1057(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1057s)
  return target;
}

int HQ1057s::ByteSize() const {
  int total_size = 0;

  // repeated .HQStockPackage.HQ1057 rHQ1057 = 1;
  total_size += 1 * this->rhq1057_size();
  for (int i = 0; i < this->rhq1057_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rhq1057(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1057s::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1057s* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1057s*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1057s::MergeFrom(const HQ1057s& from) {
  GOOGLE_CHECK_NE(&from, this);
  rhq1057_.MergeFrom(from.rhq1057_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1057s::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1057s::CopyFrom(const HQ1057s& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1057s::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rhq1057())) return false;
  return true;
}

void HQ1057s::Swap(HQ1057s* other) {
  if (other != this) {
    rhq1057_.Swap(&other->rhq1057_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1057s::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1057s_descriptor_;
  metadata.reflection = HQ1057s_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1058::kSMarketNoFieldNumber;
const int HQ1058::kDThresholdAmountFieldNumber;
const int HQ1058::kDPosAmtFieldNumber;
const int HQ1058::kIAmountStatusFieldNumber;
const int HQ1058::kSTradeStatusFieldNumber;
#endif  // !_MSC_VER

HQ1058::HQ1058()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1058)
}

void HQ1058::InitAsDefaultInstance() {
}

HQ1058::HQ1058(const HQ1058& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1058)
}

void HQ1058::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dthresholdamount_ = 0;
  dposamt_ = 0;
  iamountstatus_ = 0;
  stradestatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1058::~HQ1058() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1058)
  SharedDtor();
}

void HQ1058::SharedDtor() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (stradestatus_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stradestatus_;
  }
  if (this != default_instance_) {
  }
}

void HQ1058::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1058::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1058_descriptor_;
}

const HQ1058& HQ1058::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1058* HQ1058::default_instance_ = NULL;

HQ1058* HQ1058::New() const {
  return new HQ1058;
}

void HQ1058::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HQ1058*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(dthresholdamount_, dposamt_);
    if (has_smarketno()) {
      if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        smarketno_->clear();
      }
    }
    iamountstatus_ = 0;
    if (has_stradestatus()) {
      if (stradestatus_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stradestatus_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1058::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1058)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sMarketNo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smarketno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smarketno().data(), this->smarketno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "smarketno");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_dThresholdAmount;
        break;
      }

      // optional double dThresholdAmount = 2;
      case 2: {
        if (tag == 17) {
         parse_dThresholdAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dthresholdamount_)));
          set_has_dthresholdamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_dPosAmt;
        break;
      }

      // optional double dPosAmt = 3;
      case 3: {
        if (tag == 25) {
         parse_dPosAmt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dposamt_)));
          set_has_dposamt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_iAmountStatus;
        break;
      }

      // optional int32 iAmountStatus = 4;
      case 4: {
        if (tag == 32) {
         parse_iAmountStatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iamountstatus_)));
          set_has_iamountstatus();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sTradeStatus;
        break;
      }

      // optional string sTradeStatus = 5;
      case 5: {
        if (tag == 42) {
         parse_sTradeStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stradestatus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stradestatus().data(), this->stradestatus().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stradestatus");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1058)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1058)
  return false;
#undef DO_
}

void HQ1058::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1058)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smarketno(), output);
  }

  // optional double dThresholdAmount = 2;
  if (has_dthresholdamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->dthresholdamount(), output);
  }

  // optional double dPosAmt = 3;
  if (has_dposamt()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->dposamt(), output);
  }

  // optional int32 iAmountStatus = 4;
  if (has_iamountstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->iamountstatus(), output);
  }

  // optional string sTradeStatus = 5;
  if (has_stradestatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stradestatus().data(), this->stradestatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stradestatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->stradestatus(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1058)
}

::google::protobuf::uint8* HQ1058::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1058)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->smarketno(), target);
  }

  // optional double dThresholdAmount = 2;
  if (has_dthresholdamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->dthresholdamount(), target);
  }

  // optional double dPosAmt = 3;
  if (has_dposamt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->dposamt(), target);
  }

  // optional int32 iAmountStatus = 4;
  if (has_iamountstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->iamountstatus(), target);
  }

  // optional string sTradeStatus = 5;
  if (has_stradestatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stradestatus().data(), this->stradestatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stradestatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->stradestatus(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1058)
  return target;
}

int HQ1058::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sMarketNo = 1;
    if (has_smarketno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smarketno());
    }

    // optional double dThresholdAmount = 2;
    if (has_dthresholdamount()) {
      total_size += 1 + 8;
    }

    // optional double dPosAmt = 3;
    if (has_dposamt()) {
      total_size += 1 + 8;
    }

    // optional int32 iAmountStatus = 4;
    if (has_iamountstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->iamountstatus());
    }

    // optional string sTradeStatus = 5;
    if (has_stradestatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stradestatus());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1058::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1058* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1058*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1058::MergeFrom(const HQ1058& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_smarketno()) {
      set_smarketno(from.smarketno());
    }
    if (from.has_dthresholdamount()) {
      set_dthresholdamount(from.dthresholdamount());
    }
    if (from.has_dposamt()) {
      set_dposamt(from.dposamt());
    }
    if (from.has_iamountstatus()) {
      set_iamountstatus(from.iamountstatus());
    }
    if (from.has_stradestatus()) {
      set_stradestatus(from.stradestatus());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1058::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1058::CopyFrom(const HQ1058& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1058::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void HQ1058::Swap(HQ1058* other) {
  if (other != this) {
    std::swap(smarketno_, other->smarketno_);
    std::swap(dthresholdamount_, other->dthresholdamount_);
    std::swap(dposamt_, other->dposamt_);
    std::swap(iamountstatus_, other->iamountstatus_);
    std::swap(stradestatus_, other->stradestatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1058::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1058_descriptor_;
  metadata.reflection = HQ1058_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1058s::kRHQ1058FieldNumber;
#endif  // !_MSC_VER

HQ1058s::HQ1058s()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1058s)
}

void HQ1058s::InitAsDefaultInstance() {
}

HQ1058s::HQ1058s(const HQ1058s& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1058s)
}

void HQ1058s::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1058s::~HQ1058s() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1058s)
  SharedDtor();
}

void HQ1058s::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HQ1058s::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1058s::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1058s_descriptor_;
}

const HQ1058s& HQ1058s::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1058s* HQ1058s::default_instance_ = NULL;

HQ1058s* HQ1058s::New() const {
  return new HQ1058s;
}

void HQ1058s::Clear() {
  rhq1058_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1058s::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1058s)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HQStockPackage.HQ1058 rHQ1058 = 1;
      case 1: {
        if (tag == 10) {
         parse_rHQ1058:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rhq1058()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_rHQ1058;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1058s)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1058s)
  return false;
#undef DO_
}

void HQ1058s::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1058s)
  // repeated .HQStockPackage.HQ1058 rHQ1058 = 1;
  for (int i = 0; i < this->rhq1058_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rhq1058(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1058s)
}

::google::protobuf::uint8* HQ1058s::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1058s)
  // repeated .HQStockPackage.HQ1058 rHQ1058 = 1;
  for (int i = 0; i < this->rhq1058_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rhq1058(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1058s)
  return target;
}

int HQ1058s::ByteSize() const {
  int total_size = 0;

  // repeated .HQStockPackage.HQ1058 rHQ1058 = 1;
  total_size += 1 * this->rhq1058_size();
  for (int i = 0; i < this->rhq1058_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rhq1058(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1058s::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1058s* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1058s*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1058s::MergeFrom(const HQ1058s& from) {
  GOOGLE_CHECK_NE(&from, this);
  rhq1058_.MergeFrom(from.rhq1058_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1058s::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1058s::CopyFrom(const HQ1058s& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1058s::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rhq1058())) return false;
  return true;
}

void HQ1058s::Swap(HQ1058s* other) {
  if (other != this) {
    rhq1058_.Swap(&other->rhq1058_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1058s::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1058s_descriptor_;
  metadata.reflection = HQ1058s_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1059::kSMarketNoFieldNumber;
const int HQ1059::kSRecordNoFieldNumber;
const int HQ1059::kSReportSeatFieldNumber;
const int HQ1059::kSStockCodeFieldNumber;
const int HQ1059::kDEntrustPriceFieldNumber;
const int HQ1059::kDEntrustAmountFieldNumber;
const int HQ1059::kSSideFieldNumber;
const int HQ1059::kSTransactDateFieldNumber;
const int HQ1059::kSTransactTimeFieldNumber;
const int HQ1059::kIExpirationDaysFieldNumber;
const int HQ1059::kIExpirationTypeFieldNumber;
const int HQ1059::kSExecTypeFieldNumber;
#endif  // !_MSC_VER

HQ1059::HQ1059()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1059)
}

void HQ1059::InitAsDefaultInstance() {
}

HQ1059::HQ1059(const HQ1059& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1059)
}

void HQ1059::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srecordno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sreportseat_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dentrustprice_ = 0;
  dentrustamount_ = 0;
  sside_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stransactdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stransacttime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iexpirationdays_ = 0;
  iexpirationtype_ = 0;
  sexectype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1059::~HQ1059() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1059)
  SharedDtor();
}

void HQ1059::SharedDtor() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (srecordno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srecordno_;
  }
  if (sreportseat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sreportseat_;
  }
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sside_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sside_;
  }
  if (stransactdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stransactdate_;
  }
  if (stransacttime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stransacttime_;
  }
  if (sexectype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sexectype_;
  }
  if (this != default_instance_) {
  }
}

void HQ1059::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1059::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1059_descriptor_;
}

const HQ1059& HQ1059::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1059* HQ1059::default_instance_ = NULL;

HQ1059* HQ1059::New() const {
  return new HQ1059;
}

void HQ1059::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HQ1059*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(dentrustprice_, dentrustamount_);
    if (has_smarketno()) {
      if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        smarketno_->clear();
      }
    }
    if (has_srecordno()) {
      if (srecordno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        srecordno_->clear();
      }
    }
    if (has_sreportseat()) {
      if (sreportseat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sreportseat_->clear();
      }
    }
    if (has_sstockcode()) {
      if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstockcode_->clear();
      }
    }
    if (has_sside()) {
      if (sside_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sside_->clear();
      }
    }
    if (has_stransactdate()) {
      if (stransactdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stransactdate_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 3840) {
    ZR_(iexpirationdays_, iexpirationtype_);
    if (has_stransacttime()) {
      if (stransacttime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stransacttime_->clear();
      }
    }
    if (has_sexectype()) {
      if (sexectype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sexectype_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1059::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1059)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sMarketNo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smarketno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smarketno().data(), this->smarketno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "smarketno");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sRecordNo;
        break;
      }

      // required string sRecordNo = 2;
      case 2: {
        if (tag == 18) {
         parse_sRecordNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srecordno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srecordno().data(), this->srecordno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srecordno");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sReportSeat;
        break;
      }

      // required string sReportSeat = 3;
      case 3: {
        if (tag == 26) {
         parse_sReportSeat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sreportseat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sreportseat().data(), this->sreportseat().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sreportseat");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sStockCode;
        break;
      }

      // optional string sStockCode = 4;
      case 4: {
        if (tag == 34) {
         parse_sStockCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstockcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstockcode().data(), this->sstockcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstockcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_dEntrustPrice;
        break;
      }

      // optional double dEntrustPrice = 5;
      case 5: {
        if (tag == 41) {
         parse_dEntrustPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dentrustprice_)));
          set_has_dentrustprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_dEntrustAmount;
        break;
      }

      // optional double dEntrustAmount = 6;
      case 6: {
        if (tag == 49) {
         parse_dEntrustAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dentrustamount_)));
          set_has_dentrustamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sSide;
        break;
      }

      // optional string sSide = 7;
      case 7: {
        if (tag == 58) {
         parse_sSide:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sside()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sside().data(), this->sside().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sside");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_sTransactDate;
        break;
      }

      // required string sTransactDate = 8;
      case 8: {
        if (tag == 66) {
         parse_sTransactDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stransactdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stransactdate().data(), this->stransactdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stransactdate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_sTransactTime;
        break;
      }

      // optional string sTransactTime = 9;
      case 9: {
        if (tag == 74) {
         parse_sTransactTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stransacttime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stransacttime().data(), this->stransacttime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stransacttime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_iExpirationDays;
        break;
      }

      // optional int32 iExpirationDays = 10;
      case 10: {
        if (tag == 80) {
         parse_iExpirationDays:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iexpirationdays_)));
          set_has_iexpirationdays();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_iExpirationType;
        break;
      }

      // optional int32 iExpirationType = 11;
      case 11: {
        if (tag == 88) {
         parse_iExpirationType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iexpirationtype_)));
          set_has_iexpirationtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_sExecType;
        break;
      }

      // optional string sExecType = 12;
      case 12: {
        if (tag == 98) {
         parse_sExecType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sexectype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sexectype().data(), this->sexectype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sexectype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1059)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1059)
  return false;
#undef DO_
}

void HQ1059::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1059)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smarketno(), output);
  }

  // required string sRecordNo = 2;
  if (has_srecordno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srecordno().data(), this->srecordno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srecordno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->srecordno(), output);
  }

  // required string sReportSeat = 3;
  if (has_sreportseat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sreportseat().data(), this->sreportseat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sreportseat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sreportseat(), output);
  }

  // optional string sStockCode = 4;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sstockcode(), output);
  }

  // optional double dEntrustPrice = 5;
  if (has_dentrustprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->dentrustprice(), output);
  }

  // optional double dEntrustAmount = 6;
  if (has_dentrustamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->dentrustamount(), output);
  }

  // optional string sSide = 7;
  if (has_sside()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sside().data(), this->sside().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sside");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sside(), output);
  }

  // required string sTransactDate = 8;
  if (has_stransactdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stransactdate().data(), this->stransactdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stransactdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->stransactdate(), output);
  }

  // optional string sTransactTime = 9;
  if (has_stransacttime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stransacttime().data(), this->stransacttime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stransacttime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->stransacttime(), output);
  }

  // optional int32 iExpirationDays = 10;
  if (has_iexpirationdays()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->iexpirationdays(), output);
  }

  // optional int32 iExpirationType = 11;
  if (has_iexpirationtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->iexpirationtype(), output);
  }

  // optional string sExecType = 12;
  if (has_sexectype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sexectype().data(), this->sexectype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sexectype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->sexectype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1059)
}

::google::protobuf::uint8* HQ1059::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1059)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->smarketno(), target);
  }

  // required string sRecordNo = 2;
  if (has_srecordno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srecordno().data(), this->srecordno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srecordno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->srecordno(), target);
  }

  // required string sReportSeat = 3;
  if (has_sreportseat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sreportseat().data(), this->sreportseat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sreportseat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sreportseat(), target);
  }

  // optional string sStockCode = 4;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sstockcode(), target);
  }

  // optional double dEntrustPrice = 5;
  if (has_dentrustprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->dentrustprice(), target);
  }

  // optional double dEntrustAmount = 6;
  if (has_dentrustamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->dentrustamount(), target);
  }

  // optional string sSide = 7;
  if (has_sside()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sside().data(), this->sside().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sside");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sside(), target);
  }

  // required string sTransactDate = 8;
  if (has_stransactdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stransactdate().data(), this->stransactdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stransactdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->stransactdate(), target);
  }

  // optional string sTransactTime = 9;
  if (has_stransacttime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stransacttime().data(), this->stransacttime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stransacttime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->stransacttime(), target);
  }

  // optional int32 iExpirationDays = 10;
  if (has_iexpirationdays()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->iexpirationdays(), target);
  }

  // optional int32 iExpirationType = 11;
  if (has_iexpirationtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->iexpirationtype(), target);
  }

  // optional string sExecType = 12;
  if (has_sexectype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sexectype().data(), this->sexectype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sexectype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->sexectype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1059)
  return target;
}

int HQ1059::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sMarketNo = 1;
    if (has_smarketno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smarketno());
    }

    // required string sRecordNo = 2;
    if (has_srecordno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->srecordno());
    }

    // required string sReportSeat = 3;
    if (has_sreportseat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sreportseat());
    }

    // optional string sStockCode = 4;
    if (has_sstockcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstockcode());
    }

    // optional double dEntrustPrice = 5;
    if (has_dentrustprice()) {
      total_size += 1 + 8;
    }

    // optional double dEntrustAmount = 6;
    if (has_dentrustamount()) {
      total_size += 1 + 8;
    }

    // optional string sSide = 7;
    if (has_sside()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sside());
    }

    // required string sTransactDate = 8;
    if (has_stransactdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stransactdate());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string sTransactTime = 9;
    if (has_stransacttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stransacttime());
    }

    // optional int32 iExpirationDays = 10;
    if (has_iexpirationdays()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->iexpirationdays());
    }

    // optional int32 iExpirationType = 11;
    if (has_iexpirationtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->iexpirationtype());
    }

    // optional string sExecType = 12;
    if (has_sexectype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sexectype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1059::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1059* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1059*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1059::MergeFrom(const HQ1059& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_smarketno()) {
      set_smarketno(from.smarketno());
    }
    if (from.has_srecordno()) {
      set_srecordno(from.srecordno());
    }
    if (from.has_sreportseat()) {
      set_sreportseat(from.sreportseat());
    }
    if (from.has_sstockcode()) {
      set_sstockcode(from.sstockcode());
    }
    if (from.has_dentrustprice()) {
      set_dentrustprice(from.dentrustprice());
    }
    if (from.has_dentrustamount()) {
      set_dentrustamount(from.dentrustamount());
    }
    if (from.has_sside()) {
      set_sside(from.sside());
    }
    if (from.has_stransactdate()) {
      set_stransactdate(from.stransactdate());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_stransacttime()) {
      set_stransacttime(from.stransacttime());
    }
    if (from.has_iexpirationdays()) {
      set_iexpirationdays(from.iexpirationdays());
    }
    if (from.has_iexpirationtype()) {
      set_iexpirationtype(from.iexpirationtype());
    }
    if (from.has_sexectype()) {
      set_sexectype(from.sexectype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1059::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1059::CopyFrom(const HQ1059& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1059::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000087) != 0x00000087) return false;

  return true;
}

void HQ1059::Swap(HQ1059* other) {
  if (other != this) {
    std::swap(smarketno_, other->smarketno_);
    std::swap(srecordno_, other->srecordno_);
    std::swap(sreportseat_, other->sreportseat_);
    std::swap(sstockcode_, other->sstockcode_);
    std::swap(dentrustprice_, other->dentrustprice_);
    std::swap(dentrustamount_, other->dentrustamount_);
    std::swap(sside_, other->sside_);
    std::swap(stransactdate_, other->stransactdate_);
    std::swap(stransacttime_, other->stransacttime_);
    std::swap(iexpirationdays_, other->iexpirationdays_);
    std::swap(iexpirationtype_, other->iexpirationtype_);
    std::swap(sexectype_, other->sexectype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1059::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1059_descriptor_;
  metadata.reflection = HQ1059_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1059s::kRHQ1059FieldNumber;
#endif  // !_MSC_VER

HQ1059s::HQ1059s()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1059s)
}

void HQ1059s::InitAsDefaultInstance() {
}

HQ1059s::HQ1059s(const HQ1059s& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1059s)
}

void HQ1059s::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1059s::~HQ1059s() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1059s)
  SharedDtor();
}

void HQ1059s::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HQ1059s::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1059s::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1059s_descriptor_;
}

const HQ1059s& HQ1059s::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1059s* HQ1059s::default_instance_ = NULL;

HQ1059s* HQ1059s::New() const {
  return new HQ1059s;
}

void HQ1059s::Clear() {
  rhq1059_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1059s::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1059s)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HQStockPackage.HQ1059 rHQ1059 = 1;
      case 1: {
        if (tag == 10) {
         parse_rHQ1059:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rhq1059()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_rHQ1059;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1059s)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1059s)
  return false;
#undef DO_
}

void HQ1059s::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1059s)
  // repeated .HQStockPackage.HQ1059 rHQ1059 = 1;
  for (int i = 0; i < this->rhq1059_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rhq1059(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1059s)
}

::google::protobuf::uint8* HQ1059s::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1059s)
  // repeated .HQStockPackage.HQ1059 rHQ1059 = 1;
  for (int i = 0; i < this->rhq1059_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rhq1059(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1059s)
  return target;
}

int HQ1059s::ByteSize() const {
  int total_size = 0;

  // repeated .HQStockPackage.HQ1059 rHQ1059 = 1;
  total_size += 1 * this->rhq1059_size();
  for (int i = 0; i < this->rhq1059_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rhq1059(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1059s::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1059s* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1059s*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1059s::MergeFrom(const HQ1059s& from) {
  GOOGLE_CHECK_NE(&from, this);
  rhq1059_.MergeFrom(from.rhq1059_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1059s::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1059s::CopyFrom(const HQ1059s& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1059s::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rhq1059())) return false;
  return true;
}

void HQ1059s::Swap(HQ1059s* other) {
  if (other != this) {
    rhq1059_.Swap(&other->rhq1059_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1059s::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1059s_descriptor_;
  metadata.reflection = HQ1059s_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1060::kSMarketNoFieldNumber;
const int HQ1060::kSStockCodeFieldNumber;
const int HQ1060::kSStockNameFieldNumber;
const int HQ1060::kSTradingPhaseCodeFieldNumber;
const int HQ1060::kDPrevClosePxFieldNumber;
const int HQ1060::kDNumTradesFieldNumber;
const int HQ1060::kDTotalVolumeTradeFieldNumber;
const int HQ1060::kDTotalValueTradeFieldNumber;
const int HQ1060::kDReferPriceFieldNumber;
const int HQ1060::kDBuyAmountFieldNumber;
const int HQ1060::kDSaleAmountFieldNumber;
const int HQ1060::kSTimeStampFieldNumber;
const int HQ1060::kIInitDateFieldNumber;
#endif  // !_MSC_VER

HQ1060::HQ1060()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1060)
}

void HQ1060::InitAsDefaultInstance() {
}

HQ1060::HQ1060(const HQ1060& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1060)
}

void HQ1060::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sstockname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stradingphasecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dprevclosepx_ = 0;
  dnumtrades_ = 0;
  dtotalvolumetrade_ = 0;
  dtotalvaluetrade_ = 0;
  dreferprice_ = 0;
  dbuyamount_ = 0;
  dsaleamount_ = 0;
  stimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iinitdate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1060::~HQ1060() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1060)
  SharedDtor();
}

void HQ1060::SharedDtor() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockname_;
  }
  if (stradingphasecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stradingphasecode_;
  }
  if (stimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stimestamp_;
  }
  if (this != default_instance_) {
  }
}

void HQ1060::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1060::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1060_descriptor_;
}

const HQ1060& HQ1060::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1060* HQ1060::default_instance_ = NULL;

HQ1060* HQ1060::New() const {
  return new HQ1060;
}

void HQ1060::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HQ1060*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(dprevclosepx_, dtotalvaluetrade_);
    if (has_smarketno()) {
      if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        smarketno_->clear();
      }
    }
    if (has_sstockcode()) {
      if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstockcode_->clear();
      }
    }
    if (has_sstockname()) {
      if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstockname_->clear();
      }
    }
    if (has_stradingphasecode()) {
      if (stradingphasecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stradingphasecode_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 7936) {
    ZR_(dreferprice_, dsaleamount_);
    if (has_stimestamp()) {
      if (stimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stimestamp_->clear();
      }
    }
    iinitdate_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1060::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1060)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sMarketNo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smarketno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smarketno().data(), this->smarketno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "smarketno");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sStockCode;
        break;
      }

      // required string sStockCode = 2;
      case 2: {
        if (tag == 18) {
         parse_sStockCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstockcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstockcode().data(), this->sstockcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstockcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sStockName;
        break;
      }

      // optional bytes sStockName = 3;
      case 3: {
        if (tag == 26) {
         parse_sStockName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sstockname()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sTradingPhaseCode;
        break;
      }

      // optional string sTradingPhaseCode = 4;
      case 4: {
        if (tag == 34) {
         parse_sTradingPhaseCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stradingphasecode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stradingphasecode().data(), this->stradingphasecode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stradingphasecode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_dPrevClosePx;
        break;
      }

      // optional double dPrevClosePx = 5;
      case 5: {
        if (tag == 41) {
         parse_dPrevClosePx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dprevclosepx_)));
          set_has_dprevclosepx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_dNumTrades;
        break;
      }

      // optional double dNumTrades = 6;
      case 6: {
        if (tag == 49) {
         parse_dNumTrades:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dnumtrades_)));
          set_has_dnumtrades();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_dTotalVolumeTrade;
        break;
      }

      // optional double dTotalVolumeTrade = 7;
      case 7: {
        if (tag == 57) {
         parse_dTotalVolumeTrade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dtotalvolumetrade_)));
          set_has_dtotalvolumetrade();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_dTotalValueTrade;
        break;
      }

      // optional double dTotalValueTrade = 8;
      case 8: {
        if (tag == 65) {
         parse_dTotalValueTrade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dtotalvaluetrade_)));
          set_has_dtotalvaluetrade();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_dReferPrice;
        break;
      }

      // optional double dReferPrice = 9;
      case 9: {
        if (tag == 73) {
         parse_dReferPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dreferprice_)));
          set_has_dreferprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_dBuyAmount;
        break;
      }

      // optional double dBuyAmount = 10;
      case 10: {
        if (tag == 81) {
         parse_dBuyAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbuyamount_)));
          set_has_dbuyamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_dSaleAmount;
        break;
      }

      // optional double dSaleAmount = 11;
      case 11: {
        if (tag == 89) {
         parse_dSaleAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dsaleamount_)));
          set_has_dsaleamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_sTimeStamp;
        break;
      }

      // optional string sTimeStamp = 12;
      case 12: {
        if (tag == 98) {
         parse_sTimeStamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stimestamp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stimestamp().data(), this->stimestamp().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stimestamp");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_iInitDate;
        break;
      }

      // optional int32 iInitDate = 13;
      case 13: {
        if (tag == 104) {
         parse_iInitDate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iinitdate_)));
          set_has_iinitdate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1060)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1060)
  return false;
#undef DO_
}

void HQ1060::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1060)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smarketno(), output);
  }

  // required string sStockCode = 2;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sstockcode(), output);
  }

  // optional bytes sStockName = 3;
  if (has_sstockname()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->sstockname(), output);
  }

  // optional string sTradingPhaseCode = 4;
  if (has_stradingphasecode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stradingphasecode().data(), this->stradingphasecode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stradingphasecode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->stradingphasecode(), output);
  }

  // optional double dPrevClosePx = 5;
  if (has_dprevclosepx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->dprevclosepx(), output);
  }

  // optional double dNumTrades = 6;
  if (has_dnumtrades()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->dnumtrades(), output);
  }

  // optional double dTotalVolumeTrade = 7;
  if (has_dtotalvolumetrade()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->dtotalvolumetrade(), output);
  }

  // optional double dTotalValueTrade = 8;
  if (has_dtotalvaluetrade()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->dtotalvaluetrade(), output);
  }

  // optional double dReferPrice = 9;
  if (has_dreferprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->dreferprice(), output);
  }

  // optional double dBuyAmount = 10;
  if (has_dbuyamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->dbuyamount(), output);
  }

  // optional double dSaleAmount = 11;
  if (has_dsaleamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->dsaleamount(), output);
  }

  // optional string sTimeStamp = 12;
  if (has_stimestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stimestamp().data(), this->stimestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stimestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->stimestamp(), output);
  }

  // optional int32 iInitDate = 13;
  if (has_iinitdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->iinitdate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1060)
}

::google::protobuf::uint8* HQ1060::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1060)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->smarketno(), target);
  }

  // required string sStockCode = 2;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sstockcode(), target);
  }

  // optional bytes sStockName = 3;
  if (has_sstockname()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->sstockname(), target);
  }

  // optional string sTradingPhaseCode = 4;
  if (has_stradingphasecode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stradingphasecode().data(), this->stradingphasecode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stradingphasecode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->stradingphasecode(), target);
  }

  // optional double dPrevClosePx = 5;
  if (has_dprevclosepx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->dprevclosepx(), target);
  }

  // optional double dNumTrades = 6;
  if (has_dnumtrades()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->dnumtrades(), target);
  }

  // optional double dTotalVolumeTrade = 7;
  if (has_dtotalvolumetrade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->dtotalvolumetrade(), target);
  }

  // optional double dTotalValueTrade = 8;
  if (has_dtotalvaluetrade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->dtotalvaluetrade(), target);
  }

  // optional double dReferPrice = 9;
  if (has_dreferprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->dreferprice(), target);
  }

  // optional double dBuyAmount = 10;
  if (has_dbuyamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->dbuyamount(), target);
  }

  // optional double dSaleAmount = 11;
  if (has_dsaleamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->dsaleamount(), target);
  }

  // optional string sTimeStamp = 12;
  if (has_stimestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stimestamp().data(), this->stimestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stimestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->stimestamp(), target);
  }

  // optional int32 iInitDate = 13;
  if (has_iinitdate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->iinitdate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1060)
  return target;
}

int HQ1060::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sMarketNo = 1;
    if (has_smarketno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smarketno());
    }

    // required string sStockCode = 2;
    if (has_sstockcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstockcode());
    }

    // optional bytes sStockName = 3;
    if (has_sstockname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sstockname());
    }

    // optional string sTradingPhaseCode = 4;
    if (has_stradingphasecode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stradingphasecode());
    }

    // optional double dPrevClosePx = 5;
    if (has_dprevclosepx()) {
      total_size += 1 + 8;
    }

    // optional double dNumTrades = 6;
    if (has_dnumtrades()) {
      total_size += 1 + 8;
    }

    // optional double dTotalVolumeTrade = 7;
    if (has_dtotalvolumetrade()) {
      total_size += 1 + 8;
    }

    // optional double dTotalValueTrade = 8;
    if (has_dtotalvaluetrade()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional double dReferPrice = 9;
    if (has_dreferprice()) {
      total_size += 1 + 8;
    }

    // optional double dBuyAmount = 10;
    if (has_dbuyamount()) {
      total_size += 1 + 8;
    }

    // optional double dSaleAmount = 11;
    if (has_dsaleamount()) {
      total_size += 1 + 8;
    }

    // optional string sTimeStamp = 12;
    if (has_stimestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stimestamp());
    }

    // optional int32 iInitDate = 13;
    if (has_iinitdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->iinitdate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1060::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1060* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1060*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1060::MergeFrom(const HQ1060& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_smarketno()) {
      set_smarketno(from.smarketno());
    }
    if (from.has_sstockcode()) {
      set_sstockcode(from.sstockcode());
    }
    if (from.has_sstockname()) {
      set_sstockname(from.sstockname());
    }
    if (from.has_stradingphasecode()) {
      set_stradingphasecode(from.stradingphasecode());
    }
    if (from.has_dprevclosepx()) {
      set_dprevclosepx(from.dprevclosepx());
    }
    if (from.has_dnumtrades()) {
      set_dnumtrades(from.dnumtrades());
    }
    if (from.has_dtotalvolumetrade()) {
      set_dtotalvolumetrade(from.dtotalvolumetrade());
    }
    if (from.has_dtotalvaluetrade()) {
      set_dtotalvaluetrade(from.dtotalvaluetrade());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_dreferprice()) {
      set_dreferprice(from.dreferprice());
    }
    if (from.has_dbuyamount()) {
      set_dbuyamount(from.dbuyamount());
    }
    if (from.has_dsaleamount()) {
      set_dsaleamount(from.dsaleamount());
    }
    if (from.has_stimestamp()) {
      set_stimestamp(from.stimestamp());
    }
    if (from.has_iinitdate()) {
      set_iinitdate(from.iinitdate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1060::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1060::CopyFrom(const HQ1060& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1060::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void HQ1060::Swap(HQ1060* other) {
  if (other != this) {
    std::swap(smarketno_, other->smarketno_);
    std::swap(sstockcode_, other->sstockcode_);
    std::swap(sstockname_, other->sstockname_);
    std::swap(stradingphasecode_, other->stradingphasecode_);
    std::swap(dprevclosepx_, other->dprevclosepx_);
    std::swap(dnumtrades_, other->dnumtrades_);
    std::swap(dtotalvolumetrade_, other->dtotalvolumetrade_);
    std::swap(dtotalvaluetrade_, other->dtotalvaluetrade_);
    std::swap(dreferprice_, other->dreferprice_);
    std::swap(dbuyamount_, other->dbuyamount_);
    std::swap(dsaleamount_, other->dsaleamount_);
    std::swap(stimestamp_, other->stimestamp_);
    std::swap(iinitdate_, other->iinitdate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1060::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1060_descriptor_;
  metadata.reflection = HQ1060_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1060s::kRHQ1060FieldNumber;
#endif  // !_MSC_VER

HQ1060s::HQ1060s()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1060s)
}

void HQ1060s::InitAsDefaultInstance() {
}

HQ1060s::HQ1060s(const HQ1060s& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1060s)
}

void HQ1060s::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1060s::~HQ1060s() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1060s)
  SharedDtor();
}

void HQ1060s::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HQ1060s::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1060s::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1060s_descriptor_;
}

const HQ1060s& HQ1060s::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1060s* HQ1060s::default_instance_ = NULL;

HQ1060s* HQ1060s::New() const {
  return new HQ1060s;
}

void HQ1060s::Clear() {
  rhq1060_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1060s::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1060s)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HQStockPackage.HQ1060 rHQ1060 = 1;
      case 1: {
        if (tag == 10) {
         parse_rHQ1060:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rhq1060()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_rHQ1060;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1060s)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1060s)
  return false;
#undef DO_
}

void HQ1060s::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1060s)
  // repeated .HQStockPackage.HQ1060 rHQ1060 = 1;
  for (int i = 0; i < this->rhq1060_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rhq1060(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1060s)
}

::google::protobuf::uint8* HQ1060s::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1060s)
  // repeated .HQStockPackage.HQ1060 rHQ1060 = 1;
  for (int i = 0; i < this->rhq1060_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rhq1060(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1060s)
  return target;
}

int HQ1060s::ByteSize() const {
  int total_size = 0;

  // repeated .HQStockPackage.HQ1060 rHQ1060 = 1;
  total_size += 1 * this->rhq1060_size();
  for (int i = 0; i < this->rhq1060_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rhq1060(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1060s::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1060s* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1060s*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1060s::MergeFrom(const HQ1060s& from) {
  GOOGLE_CHECK_NE(&from, this);
  rhq1060_.MergeFrom(from.rhq1060_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1060s::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1060s::CopyFrom(const HQ1060s& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1060s::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rhq1060())) return false;
  return true;
}

void HQ1060s::Swap(HQ1060s* other) {
  if (other != this) {
    rhq1060_.Swap(&other->rhq1060_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1060s::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1060s_descriptor_;
  metadata.reflection = HQ1060s_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1061::kSMarketNoFieldNumber;
const int HQ1061::kSStockCodeFieldNumber;
const int HQ1061::kSStockNameFieldNumber;
const int HQ1061::kSTradingPhaseCodeFieldNumber;
const int HQ1061::kDPrevClosePxFieldNumber;
const int HQ1061::kDNumTradesFieldNumber;
const int HQ1061::kDTotalVolumeTradeFieldNumber;
const int HQ1061::kDTotalValueTradeFieldNumber;
const int HQ1061::kDReferPriceFieldNumber;
const int HQ1061::kDBuyAmountFieldNumber;
const int HQ1061::kDSaleAmountFieldNumber;
const int HQ1061::kSTimeStampFieldNumber;
const int HQ1061::kIInitDateFieldNumber;
#endif  // !_MSC_VER

HQ1061::HQ1061()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1061)
}

void HQ1061::InitAsDefaultInstance() {
}

HQ1061::HQ1061(const HQ1061& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1061)
}

void HQ1061::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sstockname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stradingphasecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dprevclosepx_ = 0;
  dnumtrades_ = 0;
  dtotalvolumetrade_ = 0;
  dtotalvaluetrade_ = 0;
  dreferprice_ = 0;
  dbuyamount_ = 0;
  dsaleamount_ = 0;
  stimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iinitdate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1061::~HQ1061() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1061)
  SharedDtor();
}

void HQ1061::SharedDtor() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockname_;
  }
  if (stradingphasecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stradingphasecode_;
  }
  if (stimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stimestamp_;
  }
  if (this != default_instance_) {
  }
}

void HQ1061::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1061::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1061_descriptor_;
}

const HQ1061& HQ1061::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1061* HQ1061::default_instance_ = NULL;

HQ1061* HQ1061::New() const {
  return new HQ1061;
}

void HQ1061::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HQ1061*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(dprevclosepx_, dtotalvaluetrade_);
    if (has_smarketno()) {
      if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        smarketno_->clear();
      }
    }
    if (has_sstockcode()) {
      if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstockcode_->clear();
      }
    }
    if (has_sstockname()) {
      if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstockname_->clear();
      }
    }
    if (has_stradingphasecode()) {
      if (stradingphasecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stradingphasecode_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 7936) {
    ZR_(dreferprice_, dsaleamount_);
    if (has_stimestamp()) {
      if (stimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stimestamp_->clear();
      }
    }
    iinitdate_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1061::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1061)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sMarketNo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smarketno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smarketno().data(), this->smarketno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "smarketno");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sStockCode;
        break;
      }

      // required string sStockCode = 2;
      case 2: {
        if (tag == 18) {
         parse_sStockCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstockcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstockcode().data(), this->sstockcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstockcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sStockName;
        break;
      }

      // optional bytes sStockName = 3;
      case 3: {
        if (tag == 26) {
         parse_sStockName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sstockname()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sTradingPhaseCode;
        break;
      }

      // optional string sTradingPhaseCode = 4;
      case 4: {
        if (tag == 34) {
         parse_sTradingPhaseCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stradingphasecode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stradingphasecode().data(), this->stradingphasecode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stradingphasecode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_dPrevClosePx;
        break;
      }

      // optional double dPrevClosePx = 5;
      case 5: {
        if (tag == 41) {
         parse_dPrevClosePx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dprevclosepx_)));
          set_has_dprevclosepx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_dNumTrades;
        break;
      }

      // optional double dNumTrades = 6;
      case 6: {
        if (tag == 49) {
         parse_dNumTrades:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dnumtrades_)));
          set_has_dnumtrades();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_dTotalVolumeTrade;
        break;
      }

      // optional double dTotalVolumeTrade = 7;
      case 7: {
        if (tag == 57) {
         parse_dTotalVolumeTrade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dtotalvolumetrade_)));
          set_has_dtotalvolumetrade();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_dTotalValueTrade;
        break;
      }

      // optional double dTotalValueTrade = 8;
      case 8: {
        if (tag == 65) {
         parse_dTotalValueTrade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dtotalvaluetrade_)));
          set_has_dtotalvaluetrade();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_dReferPrice;
        break;
      }

      // optional double dReferPrice = 9;
      case 9: {
        if (tag == 73) {
         parse_dReferPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dreferprice_)));
          set_has_dreferprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_dBuyAmount;
        break;
      }

      // optional double dBuyAmount = 10;
      case 10: {
        if (tag == 81) {
         parse_dBuyAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbuyamount_)));
          set_has_dbuyamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_dSaleAmount;
        break;
      }

      // optional double dSaleAmount = 11;
      case 11: {
        if (tag == 89) {
         parse_dSaleAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dsaleamount_)));
          set_has_dsaleamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_sTimeStamp;
        break;
      }

      // optional string sTimeStamp = 12;
      case 12: {
        if (tag == 98) {
         parse_sTimeStamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stimestamp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stimestamp().data(), this->stimestamp().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stimestamp");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_iInitDate;
        break;
      }

      // optional int32 iInitDate = 13;
      case 13: {
        if (tag == 104) {
         parse_iInitDate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iinitdate_)));
          set_has_iinitdate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1061)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1061)
  return false;
#undef DO_
}

void HQ1061::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1061)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->smarketno(), output);
  }

  // required string sStockCode = 2;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sstockcode(), output);
  }

  // optional bytes sStockName = 3;
  if (has_sstockname()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->sstockname(), output);
  }

  // optional string sTradingPhaseCode = 4;
  if (has_stradingphasecode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stradingphasecode().data(), this->stradingphasecode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stradingphasecode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->stradingphasecode(), output);
  }

  // optional double dPrevClosePx = 5;
  if (has_dprevclosepx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->dprevclosepx(), output);
  }

  // optional double dNumTrades = 6;
  if (has_dnumtrades()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->dnumtrades(), output);
  }

  // optional double dTotalVolumeTrade = 7;
  if (has_dtotalvolumetrade()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->dtotalvolumetrade(), output);
  }

  // optional double dTotalValueTrade = 8;
  if (has_dtotalvaluetrade()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->dtotalvaluetrade(), output);
  }

  // optional double dReferPrice = 9;
  if (has_dreferprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->dreferprice(), output);
  }

  // optional double dBuyAmount = 10;
  if (has_dbuyamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->dbuyamount(), output);
  }

  // optional double dSaleAmount = 11;
  if (has_dsaleamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->dsaleamount(), output);
  }

  // optional string sTimeStamp = 12;
  if (has_stimestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stimestamp().data(), this->stimestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stimestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->stimestamp(), output);
  }

  // optional int32 iInitDate = 13;
  if (has_iinitdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->iinitdate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1061)
}

::google::protobuf::uint8* HQ1061::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1061)
  // required string sMarketNo = 1;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->smarketno(), target);
  }

  // required string sStockCode = 2;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sstockcode(), target);
  }

  // optional bytes sStockName = 3;
  if (has_sstockname()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->sstockname(), target);
  }

  // optional string sTradingPhaseCode = 4;
  if (has_stradingphasecode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stradingphasecode().data(), this->stradingphasecode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stradingphasecode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->stradingphasecode(), target);
  }

  // optional double dPrevClosePx = 5;
  if (has_dprevclosepx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->dprevclosepx(), target);
  }

  // optional double dNumTrades = 6;
  if (has_dnumtrades()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->dnumtrades(), target);
  }

  // optional double dTotalVolumeTrade = 7;
  if (has_dtotalvolumetrade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->dtotalvolumetrade(), target);
  }

  // optional double dTotalValueTrade = 8;
  if (has_dtotalvaluetrade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->dtotalvaluetrade(), target);
  }

  // optional double dReferPrice = 9;
  if (has_dreferprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->dreferprice(), target);
  }

  // optional double dBuyAmount = 10;
  if (has_dbuyamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->dbuyamount(), target);
  }

  // optional double dSaleAmount = 11;
  if (has_dsaleamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->dsaleamount(), target);
  }

  // optional string sTimeStamp = 12;
  if (has_stimestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stimestamp().data(), this->stimestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stimestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->stimestamp(), target);
  }

  // optional int32 iInitDate = 13;
  if (has_iinitdate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->iinitdate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1061)
  return target;
}

int HQ1061::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sMarketNo = 1;
    if (has_smarketno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smarketno());
    }

    // required string sStockCode = 2;
    if (has_sstockcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstockcode());
    }

    // optional bytes sStockName = 3;
    if (has_sstockname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sstockname());
    }

    // optional string sTradingPhaseCode = 4;
    if (has_stradingphasecode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stradingphasecode());
    }

    // optional double dPrevClosePx = 5;
    if (has_dprevclosepx()) {
      total_size += 1 + 8;
    }

    // optional double dNumTrades = 6;
    if (has_dnumtrades()) {
      total_size += 1 + 8;
    }

    // optional double dTotalVolumeTrade = 7;
    if (has_dtotalvolumetrade()) {
      total_size += 1 + 8;
    }

    // optional double dTotalValueTrade = 8;
    if (has_dtotalvaluetrade()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional double dReferPrice = 9;
    if (has_dreferprice()) {
      total_size += 1 + 8;
    }

    // optional double dBuyAmount = 10;
    if (has_dbuyamount()) {
      total_size += 1 + 8;
    }

    // optional double dSaleAmount = 11;
    if (has_dsaleamount()) {
      total_size += 1 + 8;
    }

    // optional string sTimeStamp = 12;
    if (has_stimestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stimestamp());
    }

    // optional int32 iInitDate = 13;
    if (has_iinitdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->iinitdate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1061::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1061* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1061*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1061::MergeFrom(const HQ1061& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_smarketno()) {
      set_smarketno(from.smarketno());
    }
    if (from.has_sstockcode()) {
      set_sstockcode(from.sstockcode());
    }
    if (from.has_sstockname()) {
      set_sstockname(from.sstockname());
    }
    if (from.has_stradingphasecode()) {
      set_stradingphasecode(from.stradingphasecode());
    }
    if (from.has_dprevclosepx()) {
      set_dprevclosepx(from.dprevclosepx());
    }
    if (from.has_dnumtrades()) {
      set_dnumtrades(from.dnumtrades());
    }
    if (from.has_dtotalvolumetrade()) {
      set_dtotalvolumetrade(from.dtotalvolumetrade());
    }
    if (from.has_dtotalvaluetrade()) {
      set_dtotalvaluetrade(from.dtotalvaluetrade());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_dreferprice()) {
      set_dreferprice(from.dreferprice());
    }
    if (from.has_dbuyamount()) {
      set_dbuyamount(from.dbuyamount());
    }
    if (from.has_dsaleamount()) {
      set_dsaleamount(from.dsaleamount());
    }
    if (from.has_stimestamp()) {
      set_stimestamp(from.stimestamp());
    }
    if (from.has_iinitdate()) {
      set_iinitdate(from.iinitdate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1061::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1061::CopyFrom(const HQ1061& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1061::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void HQ1061::Swap(HQ1061* other) {
  if (other != this) {
    std::swap(smarketno_, other->smarketno_);
    std::swap(sstockcode_, other->sstockcode_);
    std::swap(sstockname_, other->sstockname_);
    std::swap(stradingphasecode_, other->stradingphasecode_);
    std::swap(dprevclosepx_, other->dprevclosepx_);
    std::swap(dnumtrades_, other->dnumtrades_);
    std::swap(dtotalvolumetrade_, other->dtotalvolumetrade_);
    std::swap(dtotalvaluetrade_, other->dtotalvaluetrade_);
    std::swap(dreferprice_, other->dreferprice_);
    std::swap(dbuyamount_, other->dbuyamount_);
    std::swap(dsaleamount_, other->dsaleamount_);
    std::swap(stimestamp_, other->stimestamp_);
    std::swap(iinitdate_, other->iinitdate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1061::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1061_descriptor_;
  metadata.reflection = HQ1061_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1061s::kRHQ1061FieldNumber;
#endif  // !_MSC_VER

HQ1061s::HQ1061s()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1061s)
}

void HQ1061s::InitAsDefaultInstance() {
}

HQ1061s::HQ1061s(const HQ1061s& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1061s)
}

void HQ1061s::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1061s::~HQ1061s() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1061s)
  SharedDtor();
}

void HQ1061s::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HQ1061s::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1061s::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1061s_descriptor_;
}

const HQ1061s& HQ1061s::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1061s* HQ1061s::default_instance_ = NULL;

HQ1061s* HQ1061s::New() const {
  return new HQ1061s;
}

void HQ1061s::Clear() {
  rhq1061_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1061s::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1061s)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HQStockPackage.HQ1061 rHQ1061 = 1;
      case 1: {
        if (tag == 10) {
         parse_rHQ1061:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rhq1061()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_rHQ1061;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1061s)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1061s)
  return false;
#undef DO_
}

void HQ1061s::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1061s)
  // repeated .HQStockPackage.HQ1061 rHQ1061 = 1;
  for (int i = 0; i < this->rhq1061_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rhq1061(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1061s)
}

::google::protobuf::uint8* HQ1061s::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1061s)
  // repeated .HQStockPackage.HQ1061 rHQ1061 = 1;
  for (int i = 0; i < this->rhq1061_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rhq1061(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1061s)
  return target;
}

int HQ1061s::ByteSize() const {
  int total_size = 0;

  // repeated .HQStockPackage.HQ1061 rHQ1061 = 1;
  total_size += 1 * this->rhq1061_size();
  for (int i = 0; i < this->rhq1061_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rhq1061(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1061s::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1061s* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1061s*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1061s::MergeFrom(const HQ1061s& from) {
  GOOGLE_CHECK_NE(&from, this);
  rhq1061_.MergeFrom(from.rhq1061_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1061s::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1061s::CopyFrom(const HQ1061s& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1061s::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rhq1061())) return false;
  return true;
}

void HQ1061s::Swap(HQ1061s* other) {
  if (other != this) {
    rhq1061_.Swap(&other->rhq1061_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1061s::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1061s_descriptor_;
  metadata.reflection = HQ1061s_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1069::kIInitDateFieldNumber;
const int HQ1069::kIMarginlegIDFieldNumber;
const int HQ1069::kSMarketNoFieldNumber;
const int HQ1069::kSEntrustBsFieldNumber;
const int HQ1069::kSKindTypeFieldNumber;
const int HQ1069::kSRuleTypeFieldNumber;
const int HQ1069::kSStockCodeFieldNumber;
const int HQ1069::kSFirstCodeFieldNumber;
const int HQ1069::kSFirstBsFieldNumber;
const int HQ1069::kIFirstRationFieldNumber;
const int HQ1069::kSSecondCodeFieldNumber;
const int HQ1069::kSSecondBsFieldNumber;
const int HQ1069::kISecondRationFieldNumber;
#endif  // !_MSC_VER

HQ1069::HQ1069()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1069)
}

void HQ1069::InitAsDefaultInstance() {
}

HQ1069::HQ1069(const HQ1069& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1069)
}

void HQ1069::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  iinitdate_ = 0;
  imarginlegid_ = 0;
  smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sentrustbs_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skindtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sruletype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sfirstcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sfirstbs_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ifirstration_ = 0;
  ssecondcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ssecondbs_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isecondration_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1069::~HQ1069() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1069)
  SharedDtor();
}

void HQ1069::SharedDtor() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (sentrustbs_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sentrustbs_;
  }
  if (skindtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete skindtype_;
  }
  if (sruletype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sruletype_;
  }
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sfirstcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sfirstcode_;
  }
  if (sfirstbs_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sfirstbs_;
  }
  if (ssecondcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ssecondcode_;
  }
  if (ssecondbs_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ssecondbs_;
  }
  if (this != default_instance_) {
  }
}

void HQ1069::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1069::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1069_descriptor_;
}

const HQ1069& HQ1069::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1069* HQ1069::default_instance_ = NULL;

HQ1069* HQ1069::New() const {
  return new HQ1069;
}

void HQ1069::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HQ1069*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(iinitdate_, imarginlegid_);
    if (has_smarketno()) {
      if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        smarketno_->clear();
      }
    }
    if (has_sentrustbs()) {
      if (sentrustbs_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sentrustbs_->clear();
      }
    }
    if (has_skindtype()) {
      if (skindtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        skindtype_->clear();
      }
    }
    if (has_sruletype()) {
      if (sruletype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sruletype_->clear();
      }
    }
    if (has_sstockcode()) {
      if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstockcode_->clear();
      }
    }
    if (has_sfirstcode()) {
      if (sfirstcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sfirstcode_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 7936) {
    ZR_(ifirstration_, isecondration_);
    if (has_sfirstbs()) {
      if (sfirstbs_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sfirstbs_->clear();
      }
    }
    if (has_ssecondcode()) {
      if (ssecondcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ssecondcode_->clear();
      }
    }
    if (has_ssecondbs()) {
      if (ssecondbs_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ssecondbs_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1069::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1069)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 iInitDate = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iinitdate_)));
          set_has_iinitdate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iMarginlegID;
        break;
      }

      // optional int32 iMarginlegID = 2;
      case 2: {
        if (tag == 16) {
         parse_iMarginlegID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &imarginlegid_)));
          set_has_imarginlegid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sMarketNo;
        break;
      }

      // required string sMarketNo = 3;
      case 3: {
        if (tag == 26) {
         parse_sMarketNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smarketno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smarketno().data(), this->smarketno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "smarketno");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sEntrustBs;
        break;
      }

      // optional string sEntrustBs = 4;
      case 4: {
        if (tag == 34) {
         parse_sEntrustBs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sentrustbs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sentrustbs().data(), this->sentrustbs().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sentrustbs");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sKindType;
        break;
      }

      // optional string sKindType = 5;
      case 5: {
        if (tag == 42) {
         parse_sKindType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skindtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->skindtype().data(), this->skindtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "skindtype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_sRuleType;
        break;
      }

      // optional string sRuleType = 6;
      case 6: {
        if (tag == 50) {
         parse_sRuleType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sruletype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sruletype().data(), this->sruletype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sruletype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sStockCode;
        break;
      }

      // required string sStockCode = 7;
      case 7: {
        if (tag == 58) {
         parse_sStockCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstockcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstockcode().data(), this->sstockcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstockcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_sFirstCode;
        break;
      }

      // optional string sFirstCode = 8;
      case 8: {
        if (tag == 66) {
         parse_sFirstCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfirstcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sfirstcode().data(), this->sfirstcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sfirstcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_sFirstBs;
        break;
      }

      // optional string sFirstBs = 9;
      case 9: {
        if (tag == 74) {
         parse_sFirstBs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sfirstbs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sfirstbs().data(), this->sfirstbs().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sfirstbs");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_iFirstRation;
        break;
      }

      // optional int32 iFirstRation = 10;
      case 10: {
        if (tag == 80) {
         parse_iFirstRation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ifirstration_)));
          set_has_ifirstration();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_sSecondCode;
        break;
      }

      // optional string sSecondCode = 11;
      case 11: {
        if (tag == 90) {
         parse_sSecondCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ssecondcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ssecondcode().data(), this->ssecondcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ssecondcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_sSecondBs;
        break;
      }

      // optional string sSecondBs = 12;
      case 12: {
        if (tag == 98) {
         parse_sSecondBs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ssecondbs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ssecondbs().data(), this->ssecondbs().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ssecondbs");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_iSecondRation;
        break;
      }

      // optional int32 iSecondRation = 13;
      case 13: {
        if (tag == 104) {
         parse_iSecondRation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isecondration_)));
          set_has_isecondration();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1069)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1069)
  return false;
#undef DO_
}

void HQ1069::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1069)
  // optional int32 iInitDate = 1;
  if (has_iinitdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->iinitdate(), output);
  }

  // optional int32 iMarginlegID = 2;
  if (has_imarginlegid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->imarginlegid(), output);
  }

  // required string sMarketNo = 3;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->smarketno(), output);
  }

  // optional string sEntrustBs = 4;
  if (has_sentrustbs()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sentrustbs().data(), this->sentrustbs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sentrustbs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sentrustbs(), output);
  }

  // optional string sKindType = 5;
  if (has_skindtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->skindtype().data(), this->skindtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "skindtype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->skindtype(), output);
  }

  // optional string sRuleType = 6;
  if (has_sruletype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sruletype().data(), this->sruletype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sruletype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->sruletype(), output);
  }

  // required string sStockCode = 7;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sstockcode(), output);
  }

  // optional string sFirstCode = 8;
  if (has_sfirstcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sfirstcode().data(), this->sfirstcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sfirstcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->sfirstcode(), output);
  }

  // optional string sFirstBs = 9;
  if (has_sfirstbs()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sfirstbs().data(), this->sfirstbs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sfirstbs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->sfirstbs(), output);
  }

  // optional int32 iFirstRation = 10;
  if (has_ifirstration()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->ifirstration(), output);
  }

  // optional string sSecondCode = 11;
  if (has_ssecondcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ssecondcode().data(), this->ssecondcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ssecondcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->ssecondcode(), output);
  }

  // optional string sSecondBs = 12;
  if (has_ssecondbs()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ssecondbs().data(), this->ssecondbs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ssecondbs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->ssecondbs(), output);
  }

  // optional int32 iSecondRation = 13;
  if (has_isecondration()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->isecondration(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1069)
}

::google::protobuf::uint8* HQ1069::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1069)
  // optional int32 iInitDate = 1;
  if (has_iinitdate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->iinitdate(), target);
  }

  // optional int32 iMarginlegID = 2;
  if (has_imarginlegid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->imarginlegid(), target);
  }

  // required string sMarketNo = 3;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->smarketno(), target);
  }

  // optional string sEntrustBs = 4;
  if (has_sentrustbs()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sentrustbs().data(), this->sentrustbs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sentrustbs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sentrustbs(), target);
  }

  // optional string sKindType = 5;
  if (has_skindtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->skindtype().data(), this->skindtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "skindtype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->skindtype(), target);
  }

  // optional string sRuleType = 6;
  if (has_sruletype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sruletype().data(), this->sruletype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sruletype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->sruletype(), target);
  }

  // required string sStockCode = 7;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sstockcode(), target);
  }

  // optional string sFirstCode = 8;
  if (has_sfirstcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sfirstcode().data(), this->sfirstcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sfirstcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->sfirstcode(), target);
  }

  // optional string sFirstBs = 9;
  if (has_sfirstbs()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sfirstbs().data(), this->sfirstbs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sfirstbs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->sfirstbs(), target);
  }

  // optional int32 iFirstRation = 10;
  if (has_ifirstration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->ifirstration(), target);
  }

  // optional string sSecondCode = 11;
  if (has_ssecondcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ssecondcode().data(), this->ssecondcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ssecondcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->ssecondcode(), target);
  }

  // optional string sSecondBs = 12;
  if (has_ssecondbs()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ssecondbs().data(), this->ssecondbs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ssecondbs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->ssecondbs(), target);
  }

  // optional int32 iSecondRation = 13;
  if (has_isecondration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->isecondration(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1069)
  return target;
}

int HQ1069::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 iInitDate = 1;
    if (has_iinitdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->iinitdate());
    }

    // optional int32 iMarginlegID = 2;
    if (has_imarginlegid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->imarginlegid());
    }

    // required string sMarketNo = 3;
    if (has_smarketno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smarketno());
    }

    // optional string sEntrustBs = 4;
    if (has_sentrustbs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sentrustbs());
    }

    // optional string sKindType = 5;
    if (has_skindtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->skindtype());
    }

    // optional string sRuleType = 6;
    if (has_sruletype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sruletype());
    }

    // required string sStockCode = 7;
    if (has_sstockcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstockcode());
    }

    // optional string sFirstCode = 8;
    if (has_sfirstcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sfirstcode());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string sFirstBs = 9;
    if (has_sfirstbs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sfirstbs());
    }

    // optional int32 iFirstRation = 10;
    if (has_ifirstration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ifirstration());
    }

    // optional string sSecondCode = 11;
    if (has_ssecondcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ssecondcode());
    }

    // optional string sSecondBs = 12;
    if (has_ssecondbs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ssecondbs());
    }

    // optional int32 iSecondRation = 13;
    if (has_isecondration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isecondration());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1069::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1069* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1069*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1069::MergeFrom(const HQ1069& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_iinitdate()) {
      set_iinitdate(from.iinitdate());
    }
    if (from.has_imarginlegid()) {
      set_imarginlegid(from.imarginlegid());
    }
    if (from.has_smarketno()) {
      set_smarketno(from.smarketno());
    }
    if (from.has_sentrustbs()) {
      set_sentrustbs(from.sentrustbs());
    }
    if (from.has_skindtype()) {
      set_skindtype(from.skindtype());
    }
    if (from.has_sruletype()) {
      set_sruletype(from.sruletype());
    }
    if (from.has_sstockcode()) {
      set_sstockcode(from.sstockcode());
    }
    if (from.has_sfirstcode()) {
      set_sfirstcode(from.sfirstcode());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_sfirstbs()) {
      set_sfirstbs(from.sfirstbs());
    }
    if (from.has_ifirstration()) {
      set_ifirstration(from.ifirstration());
    }
    if (from.has_ssecondcode()) {
      set_ssecondcode(from.ssecondcode());
    }
    if (from.has_ssecondbs()) {
      set_ssecondbs(from.ssecondbs());
    }
    if (from.has_isecondration()) {
      set_isecondration(from.isecondration());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1069::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1069::CopyFrom(const HQ1069& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1069::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000044) != 0x00000044) return false;

  return true;
}

void HQ1069::Swap(HQ1069* other) {
  if (other != this) {
    std::swap(iinitdate_, other->iinitdate_);
    std::swap(imarginlegid_, other->imarginlegid_);
    std::swap(smarketno_, other->smarketno_);
    std::swap(sentrustbs_, other->sentrustbs_);
    std::swap(skindtype_, other->skindtype_);
    std::swap(sruletype_, other->sruletype_);
    std::swap(sstockcode_, other->sstockcode_);
    std::swap(sfirstcode_, other->sfirstcode_);
    std::swap(sfirstbs_, other->sfirstbs_);
    std::swap(ifirstration_, other->ifirstration_);
    std::swap(ssecondcode_, other->ssecondcode_);
    std::swap(ssecondbs_, other->ssecondbs_);
    std::swap(isecondration_, other->isecondration_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1069::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1069_descriptor_;
  metadata.reflection = HQ1069_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1069s::kRHQ1069FieldNumber;
#endif  // !_MSC_VER

HQ1069s::HQ1069s()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1069s)
}

void HQ1069s::InitAsDefaultInstance() {
}

HQ1069s::HQ1069s(const HQ1069s& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1069s)
}

void HQ1069s::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1069s::~HQ1069s() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1069s)
  SharedDtor();
}

void HQ1069s::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HQ1069s::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1069s::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1069s_descriptor_;
}

const HQ1069s& HQ1069s::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1069s* HQ1069s::default_instance_ = NULL;

HQ1069s* HQ1069s::New() const {
  return new HQ1069s;
}

void HQ1069s::Clear() {
  rhq1069_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1069s::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1069s)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HQStockPackage.HQ1069 rHQ1069 = 1;
      case 1: {
        if (tag == 10) {
         parse_rHQ1069:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rhq1069()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_rHQ1069;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1069s)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1069s)
  return false;
#undef DO_
}

void HQ1069s::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1069s)
  // repeated .HQStockPackage.HQ1069 rHQ1069 = 1;
  for (int i = 0; i < this->rhq1069_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rhq1069(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1069s)
}

::google::protobuf::uint8* HQ1069s::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1069s)
  // repeated .HQStockPackage.HQ1069 rHQ1069 = 1;
  for (int i = 0; i < this->rhq1069_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rhq1069(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1069s)
  return target;
}

int HQ1069s::ByteSize() const {
  int total_size = 0;

  // repeated .HQStockPackage.HQ1069 rHQ1069 = 1;
  total_size += 1 * this->rhq1069_size();
  for (int i = 0; i < this->rhq1069_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rhq1069(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1069s::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1069s* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1069s*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1069s::MergeFrom(const HQ1069s& from) {
  GOOGLE_CHECK_NE(&from, this);
  rhq1069_.MergeFrom(from.rhq1069_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1069s::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1069s::CopyFrom(const HQ1069s& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1069s::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rhq1069())) return false;
  return true;
}

void HQ1069s::Swap(HQ1069s* other) {
  if (other != this) {
    rhq1069_.Swap(&other->rhq1069_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1069s::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1069s_descriptor_;
  metadata.reflection = HQ1069s_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1070::kIInitDateFieldNumber;
const int HQ1070::kSMarketNoFieldNumber;
const int HQ1070::kSStockCodeFieldNumber;
const int HQ1070::kSStockNameFieldNumber;
const int HQ1070::kSBuyOrderNoFieldNumber;
const int HQ1070::kIBuyQuoteTimeFieldNumber;
const int HQ1070::kSBuyQuoterFieldNumber;
const int HQ1070::kDBuyNetPriceFieldNumber;
const int HQ1070::kDBuyQtyFieldNumber;
const int HQ1070::kDBuyAllPriceFieldNumber;
const int HQ1070::kDBuyProfitRatioFieldNumber;
const int HQ1070::kSSaleOrderNoFieldNumber;
const int HQ1070::kISaleQuoteTimeFieldNumber;
const int HQ1070::kSSaleQuoterFieldNumber;
const int HQ1070::kDSaleNetPriceFieldNumber;
const int HQ1070::kDSaleQtyFieldNumber;
const int HQ1070::kDSaleAllPriceFieldNumber;
const int HQ1070::kDSaleProfitRatioFieldNumber;
const int HQ1070::kDAccruedInterestFieldNumber;
const int HQ1070::kSRecordStatusFieldNumber;
#endif  // !_MSC_VER

HQ1070::HQ1070()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1070)
}

void HQ1070::InitAsDefaultInstance() {
}

HQ1070::HQ1070(const HQ1070& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1070)
}

void HQ1070::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  iinitdate_ = 0;
  smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sstockname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sbuyorderno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ibuyquotetime_ = 0;
  sbuyquoter_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dbuynetprice_ = 0;
  dbuyqty_ = 0;
  dbuyallprice_ = 0;
  dbuyprofitratio_ = 0;
  ssaleorderno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isalequotetime_ = 0;
  ssalequoter_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dsalenetprice_ = 0;
  dsaleqty_ = 0;
  dsaleallprice_ = 0;
  dsaleprofitratio_ = 0;
  daccruedinterest_ = 0;
  srecordstatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1070::~HQ1070() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1070)
  SharedDtor();
}

void HQ1070::SharedDtor() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockname_;
  }
  if (sbuyorderno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sbuyorderno_;
  }
  if (sbuyquoter_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sbuyquoter_;
  }
  if (ssaleorderno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ssaleorderno_;
  }
  if (ssalequoter_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ssalequoter_;
  }
  if (srecordstatus_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srecordstatus_;
  }
  if (this != default_instance_) {
  }
}

void HQ1070::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1070::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1070_descriptor_;
}

const HQ1070& HQ1070::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1070* HQ1070::default_instance_ = NULL;

HQ1070* HQ1070::New() const {
  return new HQ1070;
}

void HQ1070::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HQ1070*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(iinitdate_, ibuyquotetime_);
    if (has_smarketno()) {
      if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        smarketno_->clear();
      }
    }
    if (has_sstockcode()) {
      if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstockcode_->clear();
      }
    }
    if (has_sstockname()) {
      if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstockname_->clear();
      }
    }
    if (has_sbuyorderno()) {
      if (sbuyorderno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sbuyorderno_->clear();
      }
    }
    if (has_sbuyquoter()) {
      if (sbuyquoter_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sbuyquoter_->clear();
      }
    }
    dbuynetprice_ = 0;
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(dbuyqty_, dbuyprofitratio_);
    ZR_(dsalenetprice_, dsaleqty_);
    if (has_ssaleorderno()) {
      if (ssaleorderno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ssaleorderno_->clear();
      }
    }
    isalequotetime_ = 0;
    if (has_ssalequoter()) {
      if (ssalequoter_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ssalequoter_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & 983040) {
    ZR_(dsaleallprice_, daccruedinterest_);
    if (has_srecordstatus()) {
      if (srecordstatus_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        srecordstatus_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1070::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1070)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 iInitDate = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iinitdate_)));
          set_has_iinitdate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMarketNo;
        break;
      }

      // required string sMarketNo = 2;
      case 2: {
        if (tag == 18) {
         parse_sMarketNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smarketno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smarketno().data(), this->smarketno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "smarketno");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sStockCode;
        break;
      }

      // required string sStockCode = 3;
      case 3: {
        if (tag == 26) {
         parse_sStockCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstockcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstockcode().data(), this->sstockcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstockcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sStockName;
        break;
      }

      // optional bytes sStockName = 4;
      case 4: {
        if (tag == 34) {
         parse_sStockName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sstockname()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sBuyOrderNo;
        break;
      }

      // optional string sBuyOrderNo = 5;
      case 5: {
        if (tag == 42) {
         parse_sBuyOrderNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sbuyorderno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sbuyorderno().data(), this->sbuyorderno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sbuyorderno");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_iBuyQuoteTime;
        break;
      }

      // optional int32 iBuyQuoteTime = 6;
      case 6: {
        if (tag == 48) {
         parse_iBuyQuoteTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ibuyquotetime_)));
          set_has_ibuyquotetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sBuyQuoter;
        break;
      }

      // optional bytes sBuyQuoter = 7;
      case 7: {
        if (tag == 58) {
         parse_sBuyQuoter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sbuyquoter()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_dBuyNetPrice;
        break;
      }

      // optional double dBuyNetPrice = 8;
      case 8: {
        if (tag == 65) {
         parse_dBuyNetPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbuynetprice_)));
          set_has_dbuynetprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_dBuyQty;
        break;
      }

      // optional double dBuyQty = 9;
      case 9: {
        if (tag == 73) {
         parse_dBuyQty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbuyqty_)));
          set_has_dbuyqty();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_dBuyAllPrice;
        break;
      }

      // optional double dBuyAllPrice = 10;
      case 10: {
        if (tag == 81) {
         parse_dBuyAllPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbuyallprice_)));
          set_has_dbuyallprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_dBuyProfitRatio;
        break;
      }

      // optional double dBuyProfitRatio = 11;
      case 11: {
        if (tag == 89) {
         parse_dBuyProfitRatio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dbuyprofitratio_)));
          set_has_dbuyprofitratio();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_sSaleOrderNo;
        break;
      }

      // optional string sSaleOrderNo = 12;
      case 12: {
        if (tag == 98) {
         parse_sSaleOrderNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ssaleorderno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ssaleorderno().data(), this->ssaleorderno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ssaleorderno");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_iSaleQuoteTime;
        break;
      }

      // optional int32 iSaleQuoteTime = 13;
      case 13: {
        if (tag == 104) {
         parse_iSaleQuoteTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isalequotetime_)));
          set_has_isalequotetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_sSaleQuoter;
        break;
      }

      // optional bytes sSaleQuoter = 14;
      case 14: {
        if (tag == 114) {
         parse_sSaleQuoter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ssalequoter()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_dSaleNetPrice;
        break;
      }

      // optional double dSaleNetPrice = 15;
      case 15: {
        if (tag == 121) {
         parse_dSaleNetPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dsalenetprice_)));
          set_has_dsalenetprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(129)) goto parse_dSaleQty;
        break;
      }

      // optional double dSaleQty = 16;
      case 16: {
        if (tag == 129) {
         parse_dSaleQty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dsaleqty_)));
          set_has_dsaleqty();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(137)) goto parse_dSaleAllPrice;
        break;
      }

      // optional double dSaleAllPrice = 17;
      case 17: {
        if (tag == 137) {
         parse_dSaleAllPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dsaleallprice_)));
          set_has_dsaleallprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(145)) goto parse_dSaleProfitRatio;
        break;
      }

      // optional double dSaleProfitRatio = 18;
      case 18: {
        if (tag == 145) {
         parse_dSaleProfitRatio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dsaleprofitratio_)));
          set_has_dsaleprofitratio();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(153)) goto parse_dAccruedInterest;
        break;
      }

      // optional double dAccruedInterest = 19;
      case 19: {
        if (tag == 153) {
         parse_dAccruedInterest:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &daccruedinterest_)));
          set_has_daccruedinterest();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_sRecordStatus;
        break;
      }

      // optional string sRecordStatus = 20;
      case 20: {
        if (tag == 162) {
         parse_sRecordStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srecordstatus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srecordstatus().data(), this->srecordstatus().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srecordstatus");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1070)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1070)
  return false;
#undef DO_
}

void HQ1070::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1070)
  // optional int32 iInitDate = 1;
  if (has_iinitdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->iinitdate(), output);
  }

  // required string sMarketNo = 2;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smarketno(), output);
  }

  // required string sStockCode = 3;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sstockcode(), output);
  }

  // optional bytes sStockName = 4;
  if (has_sstockname()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->sstockname(), output);
  }

  // optional string sBuyOrderNo = 5;
  if (has_sbuyorderno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sbuyorderno().data(), this->sbuyorderno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sbuyorderno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sbuyorderno(), output);
  }

  // optional int32 iBuyQuoteTime = 6;
  if (has_ibuyquotetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->ibuyquotetime(), output);
  }

  // optional bytes sBuyQuoter = 7;
  if (has_sbuyquoter()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->sbuyquoter(), output);
  }

  // optional double dBuyNetPrice = 8;
  if (has_dbuynetprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->dbuynetprice(), output);
  }

  // optional double dBuyQty = 9;
  if (has_dbuyqty()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->dbuyqty(), output);
  }

  // optional double dBuyAllPrice = 10;
  if (has_dbuyallprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->dbuyallprice(), output);
  }

  // optional double dBuyProfitRatio = 11;
  if (has_dbuyprofitratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->dbuyprofitratio(), output);
  }

  // optional string sSaleOrderNo = 12;
  if (has_ssaleorderno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ssaleorderno().data(), this->ssaleorderno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ssaleorderno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->ssaleorderno(), output);
  }

  // optional int32 iSaleQuoteTime = 13;
  if (has_isalequotetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->isalequotetime(), output);
  }

  // optional bytes sSaleQuoter = 14;
  if (has_ssalequoter()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->ssalequoter(), output);
  }

  // optional double dSaleNetPrice = 15;
  if (has_dsalenetprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->dsalenetprice(), output);
  }

  // optional double dSaleQty = 16;
  if (has_dsaleqty()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->dsaleqty(), output);
  }

  // optional double dSaleAllPrice = 17;
  if (has_dsaleallprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->dsaleallprice(), output);
  }

  // optional double dSaleProfitRatio = 18;
  if (has_dsaleprofitratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->dsaleprofitratio(), output);
  }

  // optional double dAccruedInterest = 19;
  if (has_daccruedinterest()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->daccruedinterest(), output);
  }

  // optional string sRecordStatus = 20;
  if (has_srecordstatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srecordstatus().data(), this->srecordstatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srecordstatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->srecordstatus(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1070)
}

::google::protobuf::uint8* HQ1070::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1070)
  // optional int32 iInitDate = 1;
  if (has_iinitdate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->iinitdate(), target);
  }

  // required string sMarketNo = 2;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->smarketno(), target);
  }

  // required string sStockCode = 3;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sstockcode(), target);
  }

  // optional bytes sStockName = 4;
  if (has_sstockname()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->sstockname(), target);
  }

  // optional string sBuyOrderNo = 5;
  if (has_sbuyorderno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sbuyorderno().data(), this->sbuyorderno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sbuyorderno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sbuyorderno(), target);
  }

  // optional int32 iBuyQuoteTime = 6;
  if (has_ibuyquotetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->ibuyquotetime(), target);
  }

  // optional bytes sBuyQuoter = 7;
  if (has_sbuyquoter()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->sbuyquoter(), target);
  }

  // optional double dBuyNetPrice = 8;
  if (has_dbuynetprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->dbuynetprice(), target);
  }

  // optional double dBuyQty = 9;
  if (has_dbuyqty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->dbuyqty(), target);
  }

  // optional double dBuyAllPrice = 10;
  if (has_dbuyallprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->dbuyallprice(), target);
  }

  // optional double dBuyProfitRatio = 11;
  if (has_dbuyprofitratio()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->dbuyprofitratio(), target);
  }

  // optional string sSaleOrderNo = 12;
  if (has_ssaleorderno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ssaleorderno().data(), this->ssaleorderno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ssaleorderno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->ssaleorderno(), target);
  }

  // optional int32 iSaleQuoteTime = 13;
  if (has_isalequotetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->isalequotetime(), target);
  }

  // optional bytes sSaleQuoter = 14;
  if (has_ssalequoter()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->ssalequoter(), target);
  }

  // optional double dSaleNetPrice = 15;
  if (has_dsalenetprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->dsalenetprice(), target);
  }

  // optional double dSaleQty = 16;
  if (has_dsaleqty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->dsaleqty(), target);
  }

  // optional double dSaleAllPrice = 17;
  if (has_dsaleallprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->dsaleallprice(), target);
  }

  // optional double dSaleProfitRatio = 18;
  if (has_dsaleprofitratio()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->dsaleprofitratio(), target);
  }

  // optional double dAccruedInterest = 19;
  if (has_daccruedinterest()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(19, this->daccruedinterest(), target);
  }

  // optional string sRecordStatus = 20;
  if (has_srecordstatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srecordstatus().data(), this->srecordstatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srecordstatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->srecordstatus(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1070)
  return target;
}

int HQ1070::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 iInitDate = 1;
    if (has_iinitdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->iinitdate());
    }

    // required string sMarketNo = 2;
    if (has_smarketno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smarketno());
    }

    // required string sStockCode = 3;
    if (has_sstockcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstockcode());
    }

    // optional bytes sStockName = 4;
    if (has_sstockname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sstockname());
    }

    // optional string sBuyOrderNo = 5;
    if (has_sbuyorderno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sbuyorderno());
    }

    // optional int32 iBuyQuoteTime = 6;
    if (has_ibuyquotetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ibuyquotetime());
    }

    // optional bytes sBuyQuoter = 7;
    if (has_sbuyquoter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sbuyquoter());
    }

    // optional double dBuyNetPrice = 8;
    if (has_dbuynetprice()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional double dBuyQty = 9;
    if (has_dbuyqty()) {
      total_size += 1 + 8;
    }

    // optional double dBuyAllPrice = 10;
    if (has_dbuyallprice()) {
      total_size += 1 + 8;
    }

    // optional double dBuyProfitRatio = 11;
    if (has_dbuyprofitratio()) {
      total_size += 1 + 8;
    }

    // optional string sSaleOrderNo = 12;
    if (has_ssaleorderno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ssaleorderno());
    }

    // optional int32 iSaleQuoteTime = 13;
    if (has_isalequotetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isalequotetime());
    }

    // optional bytes sSaleQuoter = 14;
    if (has_ssalequoter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ssalequoter());
    }

    // optional double dSaleNetPrice = 15;
    if (has_dsalenetprice()) {
      total_size += 1 + 8;
    }

    // optional double dSaleQty = 16;
    if (has_dsaleqty()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional double dSaleAllPrice = 17;
    if (has_dsaleallprice()) {
      total_size += 2 + 8;
    }

    // optional double dSaleProfitRatio = 18;
    if (has_dsaleprofitratio()) {
      total_size += 2 + 8;
    }

    // optional double dAccruedInterest = 19;
    if (has_daccruedinterest()) {
      total_size += 2 + 8;
    }

    // optional string sRecordStatus = 20;
    if (has_srecordstatus()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->srecordstatus());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1070::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1070* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1070*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1070::MergeFrom(const HQ1070& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_iinitdate()) {
      set_iinitdate(from.iinitdate());
    }
    if (from.has_smarketno()) {
      set_smarketno(from.smarketno());
    }
    if (from.has_sstockcode()) {
      set_sstockcode(from.sstockcode());
    }
    if (from.has_sstockname()) {
      set_sstockname(from.sstockname());
    }
    if (from.has_sbuyorderno()) {
      set_sbuyorderno(from.sbuyorderno());
    }
    if (from.has_ibuyquotetime()) {
      set_ibuyquotetime(from.ibuyquotetime());
    }
    if (from.has_sbuyquoter()) {
      set_sbuyquoter(from.sbuyquoter());
    }
    if (from.has_dbuynetprice()) {
      set_dbuynetprice(from.dbuynetprice());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_dbuyqty()) {
      set_dbuyqty(from.dbuyqty());
    }
    if (from.has_dbuyallprice()) {
      set_dbuyallprice(from.dbuyallprice());
    }
    if (from.has_dbuyprofitratio()) {
      set_dbuyprofitratio(from.dbuyprofitratio());
    }
    if (from.has_ssaleorderno()) {
      set_ssaleorderno(from.ssaleorderno());
    }
    if (from.has_isalequotetime()) {
      set_isalequotetime(from.isalequotetime());
    }
    if (from.has_ssalequoter()) {
      set_ssalequoter(from.ssalequoter());
    }
    if (from.has_dsalenetprice()) {
      set_dsalenetprice(from.dsalenetprice());
    }
    if (from.has_dsaleqty()) {
      set_dsaleqty(from.dsaleqty());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_dsaleallprice()) {
      set_dsaleallprice(from.dsaleallprice());
    }
    if (from.has_dsaleprofitratio()) {
      set_dsaleprofitratio(from.dsaleprofitratio());
    }
    if (from.has_daccruedinterest()) {
      set_daccruedinterest(from.daccruedinterest());
    }
    if (from.has_srecordstatus()) {
      set_srecordstatus(from.srecordstatus());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1070::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1070::CopyFrom(const HQ1070& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1070::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;

  return true;
}

void HQ1070::Swap(HQ1070* other) {
  if (other != this) {
    std::swap(iinitdate_, other->iinitdate_);
    std::swap(smarketno_, other->smarketno_);
    std::swap(sstockcode_, other->sstockcode_);
    std::swap(sstockname_, other->sstockname_);
    std::swap(sbuyorderno_, other->sbuyorderno_);
    std::swap(ibuyquotetime_, other->ibuyquotetime_);
    std::swap(sbuyquoter_, other->sbuyquoter_);
    std::swap(dbuynetprice_, other->dbuynetprice_);
    std::swap(dbuyqty_, other->dbuyqty_);
    std::swap(dbuyallprice_, other->dbuyallprice_);
    std::swap(dbuyprofitratio_, other->dbuyprofitratio_);
    std::swap(ssaleorderno_, other->ssaleorderno_);
    std::swap(isalequotetime_, other->isalequotetime_);
    std::swap(ssalequoter_, other->ssalequoter_);
    std::swap(dsalenetprice_, other->dsalenetprice_);
    std::swap(dsaleqty_, other->dsaleqty_);
    std::swap(dsaleallprice_, other->dsaleallprice_);
    std::swap(dsaleprofitratio_, other->dsaleprofitratio_);
    std::swap(daccruedinterest_, other->daccruedinterest_);
    std::swap(srecordstatus_, other->srecordstatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1070::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1070_descriptor_;
  metadata.reflection = HQ1070_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1070s::kRHQ1070FieldNumber;
#endif  // !_MSC_VER

HQ1070s::HQ1070s()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1070s)
}

void HQ1070s::InitAsDefaultInstance() {
}

HQ1070s::HQ1070s(const HQ1070s& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1070s)
}

void HQ1070s::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1070s::~HQ1070s() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1070s)
  SharedDtor();
}

void HQ1070s::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HQ1070s::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1070s::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1070s_descriptor_;
}

const HQ1070s& HQ1070s::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1070s* HQ1070s::default_instance_ = NULL;

HQ1070s* HQ1070s::New() const {
  return new HQ1070s;
}

void HQ1070s::Clear() {
  rhq1070_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1070s::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1070s)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HQStockPackage.HQ1070 rHQ1070 = 1;
      case 1: {
        if (tag == 10) {
         parse_rHQ1070:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rhq1070()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_rHQ1070;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1070s)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1070s)
  return false;
#undef DO_
}

void HQ1070s::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1070s)
  // repeated .HQStockPackage.HQ1070 rHQ1070 = 1;
  for (int i = 0; i < this->rhq1070_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rhq1070(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1070s)
}

::google::protobuf::uint8* HQ1070s::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1070s)
  // repeated .HQStockPackage.HQ1070 rHQ1070 = 1;
  for (int i = 0; i < this->rhq1070_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rhq1070(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1070s)
  return target;
}

int HQ1070s::ByteSize() const {
  int total_size = 0;

  // repeated .HQStockPackage.HQ1070 rHQ1070 = 1;
  total_size += 1 * this->rhq1070_size();
  for (int i = 0; i < this->rhq1070_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rhq1070(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1070s::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1070s* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1070s*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1070s::MergeFrom(const HQ1070s& from) {
  GOOGLE_CHECK_NE(&from, this);
  rhq1070_.MergeFrom(from.rhq1070_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1070s::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1070s::CopyFrom(const HQ1070s& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1070s::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rhq1070())) return false;
  return true;
}

void HQ1070s::Swap(HQ1070s* other) {
  if (other != this) {
    rhq1070_.Swap(&other->rhq1070_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1070s::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1070s_descriptor_;
  metadata.reflection = HQ1070s_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1071::kIInitDateFieldNumber;
const int HQ1071::kSMarketNoFieldNumber;
const int HQ1071::kSStockCodeFieldNumber;
const int HQ1071::kSStockNameFieldNumber;
const int HQ1071::kITimeStampFieldNumber;
const int HQ1071::kDYesterdayClosePriceFieldNumber;
const int HQ1071::kDYesterdayWeightedAvgPriceFieldNumber;
const int HQ1071::kDOpenPriceFieldNumber;
const int HQ1071::kDHighPriceFieldNumber;
const int HQ1071::kDLowPriceFieldNumber;
const int HQ1071::kDLastPriceFieldNumber;
const int HQ1071::kDWeightedAvgPriceFieldNumber;
const int HQ1071::kDTotalQtyFieldNumber;
const int HQ1071::kDTotalAmountFieldNumber;
const int HQ1071::kDTotalNumFieldNumber;
const int HQ1071::kDYesterdayCloseYieldFieldNumber;
const int HQ1071::kDYesterdayWeightedAvgYieldFieldNumber;
const int HQ1071::kDOpenYieldFieldNumber;
const int HQ1071::kDHighYieldFieldNumber;
const int HQ1071::kDLowYieldFieldNumber;
const int HQ1071::kDLastYieldFieldNumber;
const int HQ1071::kDWeightedAvgYieldFieldNumber;
const int HQ1071::kSCodeTypeFieldNumber;
#endif  // !_MSC_VER

HQ1071::HQ1071()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1071)
}

void HQ1071::InitAsDefaultInstance() {
}

HQ1071::HQ1071(const HQ1071& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1071)
}

void HQ1071::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  iinitdate_ = 0;
  smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sstockname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  itimestamp_ = 0;
  dyesterdaycloseprice_ = 0;
  dyesterdayweightedavgprice_ = 0;
  dopenprice_ = 0;
  dhighprice_ = 0;
  dlowprice_ = 0;
  dlastprice_ = 0;
  dweightedavgprice_ = 0;
  dtotalqty_ = 0;
  dtotalamount_ = 0;
  dtotalnum_ = 0;
  dyesterdaycloseyield_ = 0;
  dyesterdayweightedavgyield_ = 0;
  dopenyield_ = 0;
  dhighyield_ = 0;
  dlowyield_ = 0;
  dlastyield_ = 0;
  dweightedavgyield_ = 0;
  scodetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1071::~HQ1071() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1071)
  SharedDtor();
}

void HQ1071::SharedDtor() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockname_;
  }
  if (scodetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scodetype_;
  }
  if (this != default_instance_) {
  }
}

void HQ1071::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1071::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1071_descriptor_;
}

const HQ1071& HQ1071::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1071* HQ1071::default_instance_ = NULL;

HQ1071* HQ1071::New() const {
  return new HQ1071;
}

void HQ1071::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HQ1071*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(iinitdate_, itimestamp_);
    ZR_(dyesterdaycloseprice_, dopenprice_);
    if (has_smarketno()) {
      if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        smarketno_->clear();
      }
    }
    if (has_sstockcode()) {
      if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstockcode_->clear();
      }
    }
    if (has_sstockname()) {
      if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sstockname_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(dhighprice_, dyesterdaycloseyield_);
  }
  if (_has_bits_[16 / 32] & 8323072) {
    ZR_(dyesterdayweightedavgyield_, dweightedavgyield_);
    if (has_scodetype()) {
      if (scodetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        scodetype_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1071::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1071)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 iInitDate = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iinitdate_)));
          set_has_iinitdate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sMarketNo;
        break;
      }

      // required string sMarketNo = 2;
      case 2: {
        if (tag == 18) {
         parse_sMarketNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smarketno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smarketno().data(), this->smarketno().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "smarketno");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sStockCode;
        break;
      }

      // required string sStockCode = 3;
      case 3: {
        if (tag == 26) {
         parse_sStockCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sstockcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sstockcode().data(), this->sstockcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sstockcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sStockName;
        break;
      }

      // optional bytes sStockName = 4;
      case 4: {
        if (tag == 34) {
         parse_sStockName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sstockname()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_iTimeStamp;
        break;
      }

      // optional int32 iTimeStamp = 5;
      case 5: {
        if (tag == 40) {
         parse_iTimeStamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itimestamp_)));
          set_has_itimestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_dYesterdayClosePrice;
        break;
      }

      // optional double dYesterdayClosePrice = 6;
      case 6: {
        if (tag == 49) {
         parse_dYesterdayClosePrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dyesterdaycloseprice_)));
          set_has_dyesterdaycloseprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_dYesterdayWeightedAvgPrice;
        break;
      }

      // optional double dYesterdayWeightedAvgPrice = 7;
      case 7: {
        if (tag == 57) {
         parse_dYesterdayWeightedAvgPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dyesterdayweightedavgprice_)));
          set_has_dyesterdayweightedavgprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_dOpenPrice;
        break;
      }

      // optional double dOpenPrice = 8;
      case 8: {
        if (tag == 65) {
         parse_dOpenPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dopenprice_)));
          set_has_dopenprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_dHighPrice;
        break;
      }

      // optional double dHighPrice = 9;
      case 9: {
        if (tag == 73) {
         parse_dHighPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dhighprice_)));
          set_has_dhighprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_dLowPrice;
        break;
      }

      // optional double dLowPrice = 10;
      case 10: {
        if (tag == 81) {
         parse_dLowPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dlowprice_)));
          set_has_dlowprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_dLastPrice;
        break;
      }

      // optional double dLastPrice = 11;
      case 11: {
        if (tag == 89) {
         parse_dLastPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dlastprice_)));
          set_has_dlastprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_dWeightedAvgPrice;
        break;
      }

      // optional double dWeightedAvgPrice = 12;
      case 12: {
        if (tag == 97) {
         parse_dWeightedAvgPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dweightedavgprice_)));
          set_has_dweightedavgprice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_dTotalQty;
        break;
      }

      // optional double dTotalQty = 13;
      case 13: {
        if (tag == 105) {
         parse_dTotalQty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dtotalqty_)));
          set_has_dtotalqty();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_dTotalAmount;
        break;
      }

      // optional double dTotalAmount = 14;
      case 14: {
        if (tag == 113) {
         parse_dTotalAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dtotalamount_)));
          set_has_dtotalamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_dTotalNum;
        break;
      }

      // optional double dTotalNum = 15;
      case 15: {
        if (tag == 121) {
         parse_dTotalNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dtotalnum_)));
          set_has_dtotalnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(129)) goto parse_dYesterdayCloseYield;
        break;
      }

      // optional double dYesterdayCloseYield = 16;
      case 16: {
        if (tag == 129) {
         parse_dYesterdayCloseYield:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dyesterdaycloseyield_)));
          set_has_dyesterdaycloseyield();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(137)) goto parse_dYesterdayWeightedAvgYield;
        break;
      }

      // optional double dYesterdayWeightedAvgYield = 17;
      case 17: {
        if (tag == 137) {
         parse_dYesterdayWeightedAvgYield:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dyesterdayweightedavgyield_)));
          set_has_dyesterdayweightedavgyield();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(145)) goto parse_dOpenYield;
        break;
      }

      // optional double dOpenYield = 18;
      case 18: {
        if (tag == 145) {
         parse_dOpenYield:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dopenyield_)));
          set_has_dopenyield();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(153)) goto parse_dHighYield;
        break;
      }

      // optional double dHighYield = 19;
      case 19: {
        if (tag == 153) {
         parse_dHighYield:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dhighyield_)));
          set_has_dhighyield();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(161)) goto parse_dLowYield;
        break;
      }

      // optional double dLowYield = 20;
      case 20: {
        if (tag == 161) {
         parse_dLowYield:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dlowyield_)));
          set_has_dlowyield();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(169)) goto parse_dLastYield;
        break;
      }

      // optional double dLastYield = 21;
      case 21: {
        if (tag == 169) {
         parse_dLastYield:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dlastyield_)));
          set_has_dlastyield();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(177)) goto parse_dWeightedAvgYield;
        break;
      }

      // optional double dWeightedAvgYield = 22;
      case 22: {
        if (tag == 177) {
         parse_dWeightedAvgYield:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dweightedavgyield_)));
          set_has_dweightedavgyield();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_sCodeType;
        break;
      }

      // optional string sCodeType = 23;
      case 23: {
        if (tag == 186) {
         parse_sCodeType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scodetype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scodetype().data(), this->scodetype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "scodetype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1071)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1071)
  return false;
#undef DO_
}

void HQ1071::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1071)
  // optional int32 iInitDate = 1;
  if (has_iinitdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->iinitdate(), output);
  }

  // required string sMarketNo = 2;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->smarketno(), output);
  }

  // required string sStockCode = 3;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sstockcode(), output);
  }

  // optional bytes sStockName = 4;
  if (has_sstockname()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->sstockname(), output);
  }

  // optional int32 iTimeStamp = 5;
  if (has_itimestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->itimestamp(), output);
  }

  // optional double dYesterdayClosePrice = 6;
  if (has_dyesterdaycloseprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->dyesterdaycloseprice(), output);
  }

  // optional double dYesterdayWeightedAvgPrice = 7;
  if (has_dyesterdayweightedavgprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->dyesterdayweightedavgprice(), output);
  }

  // optional double dOpenPrice = 8;
  if (has_dopenprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->dopenprice(), output);
  }

  // optional double dHighPrice = 9;
  if (has_dhighprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->dhighprice(), output);
  }

  // optional double dLowPrice = 10;
  if (has_dlowprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->dlowprice(), output);
  }

  // optional double dLastPrice = 11;
  if (has_dlastprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->dlastprice(), output);
  }

  // optional double dWeightedAvgPrice = 12;
  if (has_dweightedavgprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->dweightedavgprice(), output);
  }

  // optional double dTotalQty = 13;
  if (has_dtotalqty()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->dtotalqty(), output);
  }

  // optional double dTotalAmount = 14;
  if (has_dtotalamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->dtotalamount(), output);
  }

  // optional double dTotalNum = 15;
  if (has_dtotalnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->dtotalnum(), output);
  }

  // optional double dYesterdayCloseYield = 16;
  if (has_dyesterdaycloseyield()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->dyesterdaycloseyield(), output);
  }

  // optional double dYesterdayWeightedAvgYield = 17;
  if (has_dyesterdayweightedavgyield()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->dyesterdayweightedavgyield(), output);
  }

  // optional double dOpenYield = 18;
  if (has_dopenyield()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->dopenyield(), output);
  }

  // optional double dHighYield = 19;
  if (has_dhighyield()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->dhighyield(), output);
  }

  // optional double dLowYield = 20;
  if (has_dlowyield()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->dlowyield(), output);
  }

  // optional double dLastYield = 21;
  if (has_dlastyield()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->dlastyield(), output);
  }

  // optional double dWeightedAvgYield = 22;
  if (has_dweightedavgyield()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->dweightedavgyield(), output);
  }

  // optional string sCodeType = 23;
  if (has_scodetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scodetype().data(), this->scodetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scodetype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->scodetype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1071)
}

::google::protobuf::uint8* HQ1071::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1071)
  // optional int32 iInitDate = 1;
  if (has_iinitdate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->iinitdate(), target);
  }

  // required string sMarketNo = 2;
  if (has_smarketno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smarketno().data(), this->smarketno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "smarketno");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->smarketno(), target);
  }

  // required string sStockCode = 3;
  if (has_sstockcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sstockcode().data(), this->sstockcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sstockcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sstockcode(), target);
  }

  // optional bytes sStockName = 4;
  if (has_sstockname()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->sstockname(), target);
  }

  // optional int32 iTimeStamp = 5;
  if (has_itimestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->itimestamp(), target);
  }

  // optional double dYesterdayClosePrice = 6;
  if (has_dyesterdaycloseprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->dyesterdaycloseprice(), target);
  }

  // optional double dYesterdayWeightedAvgPrice = 7;
  if (has_dyesterdayweightedavgprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->dyesterdayweightedavgprice(), target);
  }

  // optional double dOpenPrice = 8;
  if (has_dopenprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->dopenprice(), target);
  }

  // optional double dHighPrice = 9;
  if (has_dhighprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->dhighprice(), target);
  }

  // optional double dLowPrice = 10;
  if (has_dlowprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->dlowprice(), target);
  }

  // optional double dLastPrice = 11;
  if (has_dlastprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->dlastprice(), target);
  }

  // optional double dWeightedAvgPrice = 12;
  if (has_dweightedavgprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->dweightedavgprice(), target);
  }

  // optional double dTotalQty = 13;
  if (has_dtotalqty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->dtotalqty(), target);
  }

  // optional double dTotalAmount = 14;
  if (has_dtotalamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->dtotalamount(), target);
  }

  // optional double dTotalNum = 15;
  if (has_dtotalnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->dtotalnum(), target);
  }

  // optional double dYesterdayCloseYield = 16;
  if (has_dyesterdaycloseyield()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->dyesterdaycloseyield(), target);
  }

  // optional double dYesterdayWeightedAvgYield = 17;
  if (has_dyesterdayweightedavgyield()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->dyesterdayweightedavgyield(), target);
  }

  // optional double dOpenYield = 18;
  if (has_dopenyield()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->dopenyield(), target);
  }

  // optional double dHighYield = 19;
  if (has_dhighyield()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(19, this->dhighyield(), target);
  }

  // optional double dLowYield = 20;
  if (has_dlowyield()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->dlowyield(), target);
  }

  // optional double dLastYield = 21;
  if (has_dlastyield()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(21, this->dlastyield(), target);
  }

  // optional double dWeightedAvgYield = 22;
  if (has_dweightedavgyield()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(22, this->dweightedavgyield(), target);
  }

  // optional string sCodeType = 23;
  if (has_scodetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scodetype().data(), this->scodetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "scodetype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->scodetype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1071)
  return target;
}

int HQ1071::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 iInitDate = 1;
    if (has_iinitdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->iinitdate());
    }

    // required string sMarketNo = 2;
    if (has_smarketno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smarketno());
    }

    // required string sStockCode = 3;
    if (has_sstockcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sstockcode());
    }

    // optional bytes sStockName = 4;
    if (has_sstockname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sstockname());
    }

    // optional int32 iTimeStamp = 5;
    if (has_itimestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itimestamp());
    }

    // optional double dYesterdayClosePrice = 6;
    if (has_dyesterdaycloseprice()) {
      total_size += 1 + 8;
    }

    // optional double dYesterdayWeightedAvgPrice = 7;
    if (has_dyesterdayweightedavgprice()) {
      total_size += 1 + 8;
    }

    // optional double dOpenPrice = 8;
    if (has_dopenprice()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional double dHighPrice = 9;
    if (has_dhighprice()) {
      total_size += 1 + 8;
    }

    // optional double dLowPrice = 10;
    if (has_dlowprice()) {
      total_size += 1 + 8;
    }

    // optional double dLastPrice = 11;
    if (has_dlastprice()) {
      total_size += 1 + 8;
    }

    // optional double dWeightedAvgPrice = 12;
    if (has_dweightedavgprice()) {
      total_size += 1 + 8;
    }

    // optional double dTotalQty = 13;
    if (has_dtotalqty()) {
      total_size += 1 + 8;
    }

    // optional double dTotalAmount = 14;
    if (has_dtotalamount()) {
      total_size += 1 + 8;
    }

    // optional double dTotalNum = 15;
    if (has_dtotalnum()) {
      total_size += 1 + 8;
    }

    // optional double dYesterdayCloseYield = 16;
    if (has_dyesterdaycloseyield()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional double dYesterdayWeightedAvgYield = 17;
    if (has_dyesterdayweightedavgyield()) {
      total_size += 2 + 8;
    }

    // optional double dOpenYield = 18;
    if (has_dopenyield()) {
      total_size += 2 + 8;
    }

    // optional double dHighYield = 19;
    if (has_dhighyield()) {
      total_size += 2 + 8;
    }

    // optional double dLowYield = 20;
    if (has_dlowyield()) {
      total_size += 2 + 8;
    }

    // optional double dLastYield = 21;
    if (has_dlastyield()) {
      total_size += 2 + 8;
    }

    // optional double dWeightedAvgYield = 22;
    if (has_dweightedavgyield()) {
      total_size += 2 + 8;
    }

    // optional string sCodeType = 23;
    if (has_scodetype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scodetype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1071::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1071* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1071*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1071::MergeFrom(const HQ1071& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_iinitdate()) {
      set_iinitdate(from.iinitdate());
    }
    if (from.has_smarketno()) {
      set_smarketno(from.smarketno());
    }
    if (from.has_sstockcode()) {
      set_sstockcode(from.sstockcode());
    }
    if (from.has_sstockname()) {
      set_sstockname(from.sstockname());
    }
    if (from.has_itimestamp()) {
      set_itimestamp(from.itimestamp());
    }
    if (from.has_dyesterdaycloseprice()) {
      set_dyesterdaycloseprice(from.dyesterdaycloseprice());
    }
    if (from.has_dyesterdayweightedavgprice()) {
      set_dyesterdayweightedavgprice(from.dyesterdayweightedavgprice());
    }
    if (from.has_dopenprice()) {
      set_dopenprice(from.dopenprice());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_dhighprice()) {
      set_dhighprice(from.dhighprice());
    }
    if (from.has_dlowprice()) {
      set_dlowprice(from.dlowprice());
    }
    if (from.has_dlastprice()) {
      set_dlastprice(from.dlastprice());
    }
    if (from.has_dweightedavgprice()) {
      set_dweightedavgprice(from.dweightedavgprice());
    }
    if (from.has_dtotalqty()) {
      set_dtotalqty(from.dtotalqty());
    }
    if (from.has_dtotalamount()) {
      set_dtotalamount(from.dtotalamount());
    }
    if (from.has_dtotalnum()) {
      set_dtotalnum(from.dtotalnum());
    }
    if (from.has_dyesterdaycloseyield()) {
      set_dyesterdaycloseyield(from.dyesterdaycloseyield());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_dyesterdayweightedavgyield()) {
      set_dyesterdayweightedavgyield(from.dyesterdayweightedavgyield());
    }
    if (from.has_dopenyield()) {
      set_dopenyield(from.dopenyield());
    }
    if (from.has_dhighyield()) {
      set_dhighyield(from.dhighyield());
    }
    if (from.has_dlowyield()) {
      set_dlowyield(from.dlowyield());
    }
    if (from.has_dlastyield()) {
      set_dlastyield(from.dlastyield());
    }
    if (from.has_dweightedavgyield()) {
      set_dweightedavgyield(from.dweightedavgyield());
    }
    if (from.has_scodetype()) {
      set_scodetype(from.scodetype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1071::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1071::CopyFrom(const HQ1071& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1071::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;

  return true;
}

void HQ1071::Swap(HQ1071* other) {
  if (other != this) {
    std::swap(iinitdate_, other->iinitdate_);
    std::swap(smarketno_, other->smarketno_);
    std::swap(sstockcode_, other->sstockcode_);
    std::swap(sstockname_, other->sstockname_);
    std::swap(itimestamp_, other->itimestamp_);
    std::swap(dyesterdaycloseprice_, other->dyesterdaycloseprice_);
    std::swap(dyesterdayweightedavgprice_, other->dyesterdayweightedavgprice_);
    std::swap(dopenprice_, other->dopenprice_);
    std::swap(dhighprice_, other->dhighprice_);
    std::swap(dlowprice_, other->dlowprice_);
    std::swap(dlastprice_, other->dlastprice_);
    std::swap(dweightedavgprice_, other->dweightedavgprice_);
    std::swap(dtotalqty_, other->dtotalqty_);
    std::swap(dtotalamount_, other->dtotalamount_);
    std::swap(dtotalnum_, other->dtotalnum_);
    std::swap(dyesterdaycloseyield_, other->dyesterdaycloseyield_);
    std::swap(dyesterdayweightedavgyield_, other->dyesterdayweightedavgyield_);
    std::swap(dopenyield_, other->dopenyield_);
    std::swap(dhighyield_, other->dhighyield_);
    std::swap(dlowyield_, other->dlowyield_);
    std::swap(dlastyield_, other->dlastyield_);
    std::swap(dweightedavgyield_, other->dweightedavgyield_);
    std::swap(scodetype_, other->scodetype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1071::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1071_descriptor_;
  metadata.reflection = HQ1071_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HQ1071s::kRHQ1071FieldNumber;
#endif  // !_MSC_VER

HQ1071s::HQ1071s()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HQStockPackage.HQ1071s)
}

void HQ1071s::InitAsDefaultInstance() {
}

HQ1071s::HQ1071s(const HQ1071s& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HQStockPackage.HQ1071s)
}

void HQ1071s::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HQ1071s::~HQ1071s() {
  // @@protoc_insertion_point(destructor:HQStockPackage.HQ1071s)
  SharedDtor();
}

void HQ1071s::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HQ1071s::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HQ1071s::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HQ1071s_descriptor_;
}

const HQ1071s& HQ1071s::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_HQStock_2eproto();
  return *default_instance_;
}

HQ1071s* HQ1071s::default_instance_ = NULL;

HQ1071s* HQ1071s::New() const {
  return new HQ1071s;
}

void HQ1071s::Clear() {
  rhq1071_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HQ1071s::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HQStockPackage.HQ1071s)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HQStockPackage.HQ1071 rHQ1071 = 1;
      case 1: {
        if (tag == 10) {
         parse_rHQ1071:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rhq1071()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_rHQ1071;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HQStockPackage.HQ1071s)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HQStockPackage.HQ1071s)
  return false;
#undef DO_
}

void HQ1071s::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HQStockPackage.HQ1071s)
  // repeated .HQStockPackage.HQ1071 rHQ1071 = 1;
  for (int i = 0; i < this->rhq1071_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rhq1071(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HQStockPackage.HQ1071s)
}

::google::protobuf::uint8* HQ1071s::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQStockPackage.HQ1071s)
  // repeated .HQStockPackage.HQ1071 rHQ1071 = 1;
  for (int i = 0; i < this->rhq1071_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rhq1071(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQStockPackage.HQ1071s)
  return target;
}

int HQ1071s::ByteSize() const {
  int total_size = 0;

  // repeated .HQStockPackage.HQ1071 rHQ1071 = 1;
  total_size += 1 * this->rhq1071_size();
  for (int i = 0; i < this->rhq1071_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rhq1071(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HQ1071s::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HQ1071s* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HQ1071s*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HQ1071s::MergeFrom(const HQ1071s& from) {
  GOOGLE_CHECK_NE(&from, this);
  rhq1071_.MergeFrom(from.rhq1071_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HQ1071s::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HQ1071s::CopyFrom(const HQ1071s& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HQ1071s::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rhq1071())) return false;
  return true;
}

void HQ1071s::Swap(HQ1071s* other) {
  if (other != this) {
    rhq1071_.Swap(&other->rhq1071_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HQ1071s::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HQ1071s_descriptor_;
  metadata.reflection = HQ1071s_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace HQStockPackage

// @@protoc_insertion_point(global_scope)
