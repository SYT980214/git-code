// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: HQStock.proto

#ifndef PROTOBUF_HQStock_2eproto__INCLUDED
#define PROTOBUF_HQStock_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace HQStockPackage {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_HQStock_2eproto();
void protobuf_AssignDesc_HQStock_2eproto();
void protobuf_ShutdownFile_HQStock_2eproto();

class HQ1008;
class HQ1008s;
class HQ1001;
class HQ1001s;
class HQ1002;
class HQ1002s;
class HQ1006;
class HQ1006s;
class HQ1011;
class HQ1011s;
class HQ1013;
class HQ1013s;
class HQ1055;
class HQ1055s;
class HQ1057;
class HQ1057s;
class HQ1058;
class HQ1058s;
class HQ1059;
class HQ1059s;
class HQ1060;
class HQ1060s;
class HQ1061;
class HQ1061s;
class HQ1069;
class HQ1069s;
class HQ1070;
class HQ1070s;
class HQ1071;
class HQ1071s;

// ===================================================================

class HQ1008 : public ::google::protobuf::Message {
 public:
  HQ1008();
  virtual ~HQ1008();

  HQ1008(const HQ1008& from);

  inline HQ1008& operator=(const HQ1008& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1008& default_instance();

  void Swap(HQ1008* other);

  // implements Message ----------------------------------------------

  HQ1008* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1008& from);
  void MergeFrom(const HQ1008& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string sMarketNo = 1;
  inline bool has_smarketno() const;
  inline void clear_smarketno();
  static const int kSMarketNoFieldNumber = 1;
  inline const ::std::string& smarketno() const;
  inline void set_smarketno(const ::std::string& value);
  inline void set_smarketno(const char* value);
  inline void set_smarketno(const char* value, size_t size);
  inline ::std::string* mutable_smarketno();
  inline ::std::string* release_smarketno();
  inline void set_allocated_smarketno(::std::string* smarketno);

  // required string sStockCode = 2;
  inline bool has_sstockcode() const;
  inline void clear_sstockcode();
  static const int kSStockCodeFieldNumber = 2;
  inline const ::std::string& sstockcode() const;
  inline void set_sstockcode(const ::std::string& value);
  inline void set_sstockcode(const char* value);
  inline void set_sstockcode(const char* value, size_t size);
  inline ::std::string* mutable_sstockcode();
  inline ::std::string* release_sstockcode();
  inline void set_allocated_sstockcode(::std::string* sstockcode);

  // optional string sAbsoluteTimeStamp = 3;
  inline bool has_sabsolutetimestamp() const;
  inline void clear_sabsolutetimestamp();
  static const int kSAbsoluteTimeStampFieldNumber = 3;
  inline const ::std::string& sabsolutetimestamp() const;
  inline void set_sabsolutetimestamp(const ::std::string& value);
  inline void set_sabsolutetimestamp(const char* value);
  inline void set_sabsolutetimestamp(const char* value, size_t size);
  inline ::std::string* mutable_sabsolutetimestamp();
  inline ::std::string* release_sabsolutetimestamp();
  inline void set_allocated_sabsolutetimestamp(::std::string* sabsolutetimestamp);

  // optional double dPreclosePrice = 4;
  inline bool has_dprecloseprice() const;
  inline void clear_dprecloseprice();
  static const int kDPreclosePriceFieldNumber = 4;
  inline double dprecloseprice() const;
  inline void set_dprecloseprice(double value);

  // optional double dOpenPrice = 5;
  inline bool has_dopenprice() const;
  inline void clear_dopenprice();
  static const int kDOpenPriceFieldNumber = 5;
  inline double dopenprice() const;
  inline void set_dopenprice(double value);

  // optional double dLastPrice = 6;
  inline bool has_dlastprice() const;
  inline void clear_dlastprice();
  static const int kDLastPriceFieldNumber = 6;
  inline double dlastprice() const;
  inline void set_dlastprice(double value);

  // optional double dHighPrice = 7;
  inline bool has_dhighprice() const;
  inline void clear_dhighprice();
  static const int kDHighPriceFieldNumber = 7;
  inline double dhighprice() const;
  inline void set_dhighprice(double value);

  // optional double dLowPrice = 8;
  inline bool has_dlowprice() const;
  inline void clear_dlowprice();
  static const int kDLowPriceFieldNumber = 8;
  inline double dlowprice() const;
  inline void set_dlowprice(double value);

  // optional double dClosePrice = 9;
  inline bool has_dcloseprice() const;
  inline void clear_dcloseprice();
  static const int kDClosePriceFieldNumber = 9;
  inline double dcloseprice() const;
  inline void set_dcloseprice(double value);

  // optional double dAvgPrice = 10;
  inline bool has_davgprice() const;
  inline void clear_davgprice();
  static const int kDAvgPriceFieldNumber = 10;
  inline double davgprice() const;
  inline void set_davgprice(double value);

  // optional double dBusinessAmount = 11;
  inline bool has_dbusinessamount() const;
  inline void clear_dbusinessamount();
  static const int kDBusinessAmountFieldNumber = 11;
  inline double dbusinessamount() const;
  inline void set_dbusinessamount(double value);

  // optional double dBusinessBalance = 12;
  inline bool has_dbusinessbalance() const;
  inline void clear_dbusinessbalance();
  static const int kDBusinessBalanceFieldNumber = 12;
  inline double dbusinessbalance() const;
  inline void set_dbusinessbalance(double value);

  // optional double dUpPrice = 13;
  inline bool has_dupprice() const;
  inline void clear_dupprice();
  static const int kDUpPriceFieldNumber = 13;
  inline double dupprice() const;
  inline void set_dupprice(double value);

  // optional double dDownPrice = 14;
  inline bool has_ddownprice() const;
  inline void clear_ddownprice();
  static const int kDDownPriceFieldNumber = 14;
  inline double ddownprice() const;
  inline void set_ddownprice(double value);

  // optional double dCurrentAmount = 15;
  inline bool has_dcurrentamount() const;
  inline void clear_dcurrentamount();
  static const int kDCurrentAmountFieldNumber = 15;
  inline double dcurrentamount() const;
  inline void set_dcurrentamount(double value);

  // optional double dAmount = 16;
  inline bool has_damount() const;
  inline void clear_damount();
  static const int kDAmountFieldNumber = 16;
  inline double damount() const;
  inline void set_damount(double value);

  // optional double dPreAmount = 17;
  inline bool has_dpreamount() const;
  inline void clear_dpreamount();
  static const int kDPreAmountFieldNumber = 17;
  inline double dpreamount() const;
  inline void set_dpreamount(double value);

  // optional double dPreSettlement = 18;
  inline bool has_dpresettlement() const;
  inline void clear_dpresettlement();
  static const int kDPreSettlementFieldNumber = 18;
  inline double dpresettlement() const;
  inline void set_dpresettlement(double value);

  // optional double dSettleMent = 19;
  inline bool has_dsettlement() const;
  inline void clear_dsettlement();
  static const int kDSettleMentFieldNumber = 19;
  inline double dsettlement() const;
  inline void set_dsettlement(double value);

  // optional double dIopv = 20;
  inline bool has_diopv() const;
  inline void clear_diopv();
  static const int kDIopvFieldNumber = 20;
  inline double diopv() const;
  inline void set_diopv(double value);

  // optional string sTradingPhaseCode = 21;
  inline bool has_stradingphasecode() const;
  inline void clear_stradingphasecode();
  static const int kSTradingPhaseCodeFieldNumber = 21;
  inline const ::std::string& stradingphasecode() const;
  inline void set_stradingphasecode(const ::std::string& value);
  inline void set_stradingphasecode(const char* value);
  inline void set_stradingphasecode(const char* value, size_t size);
  inline ::std::string* mutable_stradingphasecode();
  inline ::std::string* release_stradingphasecode();
  inline void set_allocated_stradingphasecode(::std::string* stradingphasecode);

  // optional double dAuctionPrice = 22;
  inline bool has_dauctionprice() const;
  inline void clear_dauctionprice();
  static const int kDAuctionPriceFieldNumber = 22;
  inline double dauctionprice() const;
  inline void set_dauctionprice(double value);

  // optional double dMatchedQty = 23;
  inline bool has_dmatchedqty() const;
  inline void clear_dmatchedqty();
  static const int kDMatchedQtyFieldNumber = 23;
  inline double dmatchedqty() const;
  inline void set_dmatchedqty(double value);

  // optional double dFundT1Price = 24;
  inline bool has_dfundt1price() const;
  inline void clear_dfundt1price();
  static const int kDFundT1PriceFieldNumber = 24;
  inline double dfundt1price() const;
  inline void set_dfundt1price(double value);

  // optional string sFundType = 25;
  inline bool has_sfundtype() const;
  inline void clear_sfundtype();
  static const int kSFundTypeFieldNumber = 25;
  inline const ::std::string& sfundtype() const;
  inline void set_sfundtype(const ::std::string& value);
  inline void set_sfundtype(const char* value);
  inline void set_sfundtype(const char* value, size_t size);
  inline ::std::string* mutable_sfundtype();
  inline ::std::string* release_sfundtype();
  inline void set_allocated_sfundtype(::std::string* sfundtype);

  // optional double dMarketDealAmount = 26;
  inline bool has_dmarketdealamount() const;
  inline void clear_dmarketdealamount();
  static const int kDMarketDealAmountFieldNumber = 26;
  inline double dmarketdealamount() const;
  inline void set_dmarketdealamount(double value);

  // optional string sStopFlag = 27;
  inline bool has_sstopflag() const;
  inline void clear_sstopflag();
  static const int kSStopFlagFieldNumber = 27;
  inline const ::std::string& sstopflag() const;
  inline void set_sstopflag(const ::std::string& value);
  inline void set_sstopflag(const char* value);
  inline void set_sstopflag(const char* value, size_t size);
  inline ::std::string* mutable_sstopflag();
  inline ::std::string* release_sstopflag();
  inline void set_allocated_sstopflag(::std::string* sstopflag);

  // optional string sBsStatus = 28;
  inline bool has_sbsstatus() const;
  inline void clear_sbsstatus();
  static const int kSBsStatusFieldNumber = 28;
  inline const ::std::string& sbsstatus() const;
  inline void set_sbsstatus(const ::std::string& value);
  inline void set_sbsstatus(const char* value);
  inline void set_sbsstatus(const char* value, size_t size);
  inline ::std::string* mutable_sbsstatus();
  inline ::std::string* release_sbsstatus();
  inline void set_allocated_sbsstatus(::std::string* sbsstatus);

  // optional string sLatestEnquiryTime = 29;
  inline bool has_slatestenquirytime() const;
  inline void clear_slatestenquirytime();
  static const int kSLatestEnquiryTimeFieldNumber = 29;
  inline const ::std::string& slatestenquirytime() const;
  inline void set_slatestenquirytime(const ::std::string& value);
  inline void set_slatestenquirytime(const char* value);
  inline void set_slatestenquirytime(const char* value, size_t size);
  inline ::std::string* mutable_slatestenquirytime();
  inline ::std::string* release_slatestenquirytime();
  inline void set_allocated_slatestenquirytime(::std::string* slatestenquirytime);

  // optional double dBusinWeight = 30;
  inline bool has_dbusinweight() const;
  inline void clear_dbusinweight();
  static const int kDBusinWeightFieldNumber = 30;
  inline double dbusinweight() const;
  inline void set_dbusinweight(double value);

  // optional double dBuyPrice1 = 31;
  inline bool has_dbuyprice1() const;
  inline void clear_dbuyprice1();
  static const int kDBuyPrice1FieldNumber = 31;
  inline double dbuyprice1() const;
  inline void set_dbuyprice1(double value);

  // optional double dBuyPrice2 = 32;
  inline bool has_dbuyprice2() const;
  inline void clear_dbuyprice2();
  static const int kDBuyPrice2FieldNumber = 32;
  inline double dbuyprice2() const;
  inline void set_dbuyprice2(double value);

  // optional double dBuyPrice3 = 33;
  inline bool has_dbuyprice3() const;
  inline void clear_dbuyprice3();
  static const int kDBuyPrice3FieldNumber = 33;
  inline double dbuyprice3() const;
  inline void set_dbuyprice3(double value);

  // optional double dBuyPrice4 = 34;
  inline bool has_dbuyprice4() const;
  inline void clear_dbuyprice4();
  static const int kDBuyPrice4FieldNumber = 34;
  inline double dbuyprice4() const;
  inline void set_dbuyprice4(double value);

  // optional double dBuyPrice5 = 35;
  inline bool has_dbuyprice5() const;
  inline void clear_dbuyprice5();
  static const int kDBuyPrice5FieldNumber = 35;
  inline double dbuyprice5() const;
  inline void set_dbuyprice5(double value);

  // optional double dSalePrice1 = 36;
  inline bool has_dsaleprice1() const;
  inline void clear_dsaleprice1();
  static const int kDSalePrice1FieldNumber = 36;
  inline double dsaleprice1() const;
  inline void set_dsaleprice1(double value);

  // optional double dSalePrice2 = 37;
  inline bool has_dsaleprice2() const;
  inline void clear_dsaleprice2();
  static const int kDSalePrice2FieldNumber = 37;
  inline double dsaleprice2() const;
  inline void set_dsaleprice2(double value);

  // optional double dSalePrice3 = 38;
  inline bool has_dsaleprice3() const;
  inline void clear_dsaleprice3();
  static const int kDSalePrice3FieldNumber = 38;
  inline double dsaleprice3() const;
  inline void set_dsaleprice3(double value);

  // optional double dSalePrice4 = 39;
  inline bool has_dsaleprice4() const;
  inline void clear_dsaleprice4();
  static const int kDSalePrice4FieldNumber = 39;
  inline double dsaleprice4() const;
  inline void set_dsaleprice4(double value);

  // optional double dSalePrice5 = 40;
  inline bool has_dsaleprice5() const;
  inline void clear_dsaleprice5();
  static const int kDSalePrice5FieldNumber = 40;
  inline double dsaleprice5() const;
  inline void set_dsaleprice5(double value);

  // optional double dBuyQty1 = 41;
  inline bool has_dbuyqty1() const;
  inline void clear_dbuyqty1();
  static const int kDBuyQty1FieldNumber = 41;
  inline double dbuyqty1() const;
  inline void set_dbuyqty1(double value);

  // optional double dBuyQty2 = 42;
  inline bool has_dbuyqty2() const;
  inline void clear_dbuyqty2();
  static const int kDBuyQty2FieldNumber = 42;
  inline double dbuyqty2() const;
  inline void set_dbuyqty2(double value);

  // optional double dBuyQty3 = 43;
  inline bool has_dbuyqty3() const;
  inline void clear_dbuyqty3();
  static const int kDBuyQty3FieldNumber = 43;
  inline double dbuyqty3() const;
  inline void set_dbuyqty3(double value);

  // optional double dBuyQty4 = 44;
  inline bool has_dbuyqty4() const;
  inline void clear_dbuyqty4();
  static const int kDBuyQty4FieldNumber = 44;
  inline double dbuyqty4() const;
  inline void set_dbuyqty4(double value);

  // optional double dBuyQty5 = 45;
  inline bool has_dbuyqty5() const;
  inline void clear_dbuyqty5();
  static const int kDBuyQty5FieldNumber = 45;
  inline double dbuyqty5() const;
  inline void set_dbuyqty5(double value);

  // optional double dSaleQty1 = 46;
  inline bool has_dsaleqty1() const;
  inline void clear_dsaleqty1();
  static const int kDSaleQty1FieldNumber = 46;
  inline double dsaleqty1() const;
  inline void set_dsaleqty1(double value);

  // optional double dSaleQty2 = 47;
  inline bool has_dsaleqty2() const;
  inline void clear_dsaleqty2();
  static const int kDSaleQty2FieldNumber = 47;
  inline double dsaleqty2() const;
  inline void set_dsaleqty2(double value);

  // optional double dSaleQty3 = 48;
  inline bool has_dsaleqty3() const;
  inline void clear_dsaleqty3();
  static const int kDSaleQty3FieldNumber = 48;
  inline double dsaleqty3() const;
  inline void set_dsaleqty3(double value);

  // optional double dSaleQty4 = 49;
  inline bool has_dsaleqty4() const;
  inline void clear_dsaleqty4();
  static const int kDSaleQty4FieldNumber = 49;
  inline double dsaleqty4() const;
  inline void set_dsaleqty4(double value);

  // optional double dSaleQty5 = 50;
  inline bool has_dsaleqty5() const;
  inline void clear_dsaleqty5();
  static const int kDSaleQty5FieldNumber = 50;
  inline double dsaleqty5() const;
  inline void set_dsaleqty5(double value);

  // optional bytes sStockName = 51;
  inline bool has_sstockname() const;
  inline void clear_sstockname();
  static const int kSStockNameFieldNumber = 51;
  inline const ::std::string& sstockname() const;
  inline void set_sstockname(const ::std::string& value);
  inline void set_sstockname(const char* value);
  inline void set_sstockname(const void* value, size_t size);
  inline ::std::string* mutable_sstockname();
  inline ::std::string* release_sstockname();
  inline void set_allocated_sstockname(::std::string* sstockname);

  // optional double dAnountPerHand = 52;
  inline bool has_danountperhand() const;
  inline void clear_danountperhand();
  static const int kDAnountPerHandFieldNumber = 52;
  inline double danountperhand() const;
  inline void set_danountperhand(double value);

  // optional double dTotalbuyAmount = 53;
  inline bool has_dtotalbuyamount() const;
  inline void clear_dtotalbuyamount();
  static const int kDTotalbuyAmountFieldNumber = 53;
  inline double dtotalbuyamount() const;
  inline void set_dtotalbuyamount(double value);

  // optional double dTotalSaleAmount = 54;
  inline bool has_dtotalsaleamount() const;
  inline void clear_dtotalsaleamount();
  static const int kDTotalSaleAmountFieldNumber = 54;
  inline double dtotalsaleamount() const;
  inline void set_dtotalsaleamount(double value);

  // optional double dCJBiShu = 55;
  inline bool has_dcjbishu() const;
  inline void clear_dcjbishu();
  static const int kDCJBiShuFieldNumber = 55;
  inline double dcjbishu() const;
  inline void set_dcjbishu(double value);

  // optional double dRealavgRate = 56;
  inline bool has_drealavgrate() const;
  inline void clear_drealavgrate();
  static const int kDRealavgRateFieldNumber = 56;
  inline double drealavgrate() const;
  inline void set_drealavgrate(double value);

  // optional double dPreavgRate = 57;
  inline bool has_dpreavgrate() const;
  inline void clear_dpreavgrate();
  static const int kDPreavgRateFieldNumber = 57;
  inline double dpreavgrate() const;
  inline void set_dpreavgrate(double value);

  // optional int32 iInitDate = 58;
  inline bool has_iinitdate() const;
  inline void clear_iinitdate();
  static const int kIInitDateFieldNumber = 58;
  inline ::google::protobuf::int32 iinitdate() const;
  inline void set_iinitdate(::google::protobuf::int32 value);

  // optional double dPe = 59;
  inline bool has_dpe() const;
  inline void clear_dpe();
  static const int kDPeFieldNumber = 59;
  inline double dpe() const;
  inline void set_dpe(double value);

  // optional double dPe2 = 60;
  inline bool has_dpe2() const;
  inline void clear_dpe2();
  static const int kDPe2FieldNumber = 60;
  inline double dpe2() const;
  inline void set_dpe2(double value);

  // optional int32 iLayering = 61;
  inline bool has_ilayering() const;
  inline void clear_ilayering();
  static const int kILayeringFieldNumber = 61;
  inline ::google::protobuf::int32 ilayering() const;
  inline void set_ilayering(::google::protobuf::int32 value);

  // optional int32 iZSSSL = 62;
  inline bool has_izsssl() const;
  inline void clear_izsssl();
  static const int kIZSSSLFieldNumber = 62;
  inline ::google::protobuf::int32 izsssl() const;
  inline void set_izsssl(::google::protobuf::int32 value);

  // optional string sStockType = 63;
  inline bool has_sstocktype() const;
  inline void clear_sstocktype();
  static const int kSStockTypeFieldNumber = 63;
  inline const ::std::string& sstocktype() const;
  inline void set_sstocktype(const ::std::string& value);
  inline void set_sstocktype(const char* value);
  inline void set_sstocktype(const char* value, size_t size);
  inline ::std::string* mutable_sstocktype();
  inline ::std::string* release_sstocktype();
  inline void set_allocated_sstocktype(::std::string* sstocktype);

  // optional string sCodeType = 64;
  inline bool has_scodetype() const;
  inline void clear_scodetype();
  static const int kSCodeTypeFieldNumber = 64;
  inline const ::std::string& scodetype() const;
  inline void set_scodetype(const ::std::string& value);
  inline void set_scodetype(const char* value);
  inline void set_scodetype(const char* value, size_t size);
  inline ::std::string* mutable_scodetype();
  inline ::std::string* release_scodetype();
  inline void set_allocated_scodetype(::std::string* scodetype);

  // optional int32 iStrikeDate = 65;
  inline bool has_istrikedate() const;
  inline void clear_istrikedate();
  static const int kIStrikeDateFieldNumber = 65;
  inline ::google::protobuf::int32 istrikedate() const;
  inline void set_istrikedate(::google::protobuf::int32 value);

  // optional int32 iExpireDate = 66;
  inline bool has_iexpiredate() const;
  inline void clear_iexpiredate();
  static const int kIExpireDateFieldNumber = 66;
  inline ::google::protobuf::int32 iexpiredate() const;
  inline void set_iexpiredate(::google::protobuf::int32 value);

  // optional double dMaxLimitedAmount = 67;
  inline bool has_dmaxlimitedamount() const;
  inline void clear_dmaxlimitedamount();
  static const int kDMaxLimitedAmountFieldNumber = 67;
  inline double dmaxlimitedamount() const;
  inline void set_dmaxlimitedamount(double value);

  // optional double dMaxMarketAmount = 68;
  inline bool has_dmaxmarketamount() const;
  inline void clear_dmaxmarketamount();
  static const int kDMaxMarketAmountFieldNumber = 68;
  inline double dmaxmarketamount() const;
  inline void set_dmaxmarketamount(double value);

  // optional double dHoldBalance = 69;
  inline bool has_dholdbalance() const;
  inline void clear_dholdbalance();
  static const int kDHoldBalanceFieldNumber = 69;
  inline double dholdbalance() const;
  inline void set_dholdbalance(double value);

  // optional double dDelta = 70;
  inline bool has_ddelta() const;
  inline void clear_ddelta();
  static const int kDDeltaFieldNumber = 70;
  inline double ddelta() const;
  inline void set_ddelta(double value);

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1008)
 private:
  inline void set_has_smarketno();
  inline void clear_has_smarketno();
  inline void set_has_sstockcode();
  inline void clear_has_sstockcode();
  inline void set_has_sabsolutetimestamp();
  inline void clear_has_sabsolutetimestamp();
  inline void set_has_dprecloseprice();
  inline void clear_has_dprecloseprice();
  inline void set_has_dopenprice();
  inline void clear_has_dopenprice();
  inline void set_has_dlastprice();
  inline void clear_has_dlastprice();
  inline void set_has_dhighprice();
  inline void clear_has_dhighprice();
  inline void set_has_dlowprice();
  inline void clear_has_dlowprice();
  inline void set_has_dcloseprice();
  inline void clear_has_dcloseprice();
  inline void set_has_davgprice();
  inline void clear_has_davgprice();
  inline void set_has_dbusinessamount();
  inline void clear_has_dbusinessamount();
  inline void set_has_dbusinessbalance();
  inline void clear_has_dbusinessbalance();
  inline void set_has_dupprice();
  inline void clear_has_dupprice();
  inline void set_has_ddownprice();
  inline void clear_has_ddownprice();
  inline void set_has_dcurrentamount();
  inline void clear_has_dcurrentamount();
  inline void set_has_damount();
  inline void clear_has_damount();
  inline void set_has_dpreamount();
  inline void clear_has_dpreamount();
  inline void set_has_dpresettlement();
  inline void clear_has_dpresettlement();
  inline void set_has_dsettlement();
  inline void clear_has_dsettlement();
  inline void set_has_diopv();
  inline void clear_has_diopv();
  inline void set_has_stradingphasecode();
  inline void clear_has_stradingphasecode();
  inline void set_has_dauctionprice();
  inline void clear_has_dauctionprice();
  inline void set_has_dmatchedqty();
  inline void clear_has_dmatchedqty();
  inline void set_has_dfundt1price();
  inline void clear_has_dfundt1price();
  inline void set_has_sfundtype();
  inline void clear_has_sfundtype();
  inline void set_has_dmarketdealamount();
  inline void clear_has_dmarketdealamount();
  inline void set_has_sstopflag();
  inline void clear_has_sstopflag();
  inline void set_has_sbsstatus();
  inline void clear_has_sbsstatus();
  inline void set_has_slatestenquirytime();
  inline void clear_has_slatestenquirytime();
  inline void set_has_dbusinweight();
  inline void clear_has_dbusinweight();
  inline void set_has_dbuyprice1();
  inline void clear_has_dbuyprice1();
  inline void set_has_dbuyprice2();
  inline void clear_has_dbuyprice2();
  inline void set_has_dbuyprice3();
  inline void clear_has_dbuyprice3();
  inline void set_has_dbuyprice4();
  inline void clear_has_dbuyprice4();
  inline void set_has_dbuyprice5();
  inline void clear_has_dbuyprice5();
  inline void set_has_dsaleprice1();
  inline void clear_has_dsaleprice1();
  inline void set_has_dsaleprice2();
  inline void clear_has_dsaleprice2();
  inline void set_has_dsaleprice3();
  inline void clear_has_dsaleprice3();
  inline void set_has_dsaleprice4();
  inline void clear_has_dsaleprice4();
  inline void set_has_dsaleprice5();
  inline void clear_has_dsaleprice5();
  inline void set_has_dbuyqty1();
  inline void clear_has_dbuyqty1();
  inline void set_has_dbuyqty2();
  inline void clear_has_dbuyqty2();
  inline void set_has_dbuyqty3();
  inline void clear_has_dbuyqty3();
  inline void set_has_dbuyqty4();
  inline void clear_has_dbuyqty4();
  inline void set_has_dbuyqty5();
  inline void clear_has_dbuyqty5();
  inline void set_has_dsaleqty1();
  inline void clear_has_dsaleqty1();
  inline void set_has_dsaleqty2();
  inline void clear_has_dsaleqty2();
  inline void set_has_dsaleqty3();
  inline void clear_has_dsaleqty3();
  inline void set_has_dsaleqty4();
  inline void clear_has_dsaleqty4();
  inline void set_has_dsaleqty5();
  inline void clear_has_dsaleqty5();
  inline void set_has_sstockname();
  inline void clear_has_sstockname();
  inline void set_has_danountperhand();
  inline void clear_has_danountperhand();
  inline void set_has_dtotalbuyamount();
  inline void clear_has_dtotalbuyamount();
  inline void set_has_dtotalsaleamount();
  inline void clear_has_dtotalsaleamount();
  inline void set_has_dcjbishu();
  inline void clear_has_dcjbishu();
  inline void set_has_drealavgrate();
  inline void clear_has_drealavgrate();
  inline void set_has_dpreavgrate();
  inline void clear_has_dpreavgrate();
  inline void set_has_iinitdate();
  inline void clear_has_iinitdate();
  inline void set_has_dpe();
  inline void clear_has_dpe();
  inline void set_has_dpe2();
  inline void clear_has_dpe2();
  inline void set_has_ilayering();
  inline void clear_has_ilayering();
  inline void set_has_izsssl();
  inline void clear_has_izsssl();
  inline void set_has_sstocktype();
  inline void clear_has_sstocktype();
  inline void set_has_scodetype();
  inline void clear_has_scodetype();
  inline void set_has_istrikedate();
  inline void clear_has_istrikedate();
  inline void set_has_iexpiredate();
  inline void clear_has_iexpiredate();
  inline void set_has_dmaxlimitedamount();
  inline void clear_has_dmaxlimitedamount();
  inline void set_has_dmaxmarketamount();
  inline void clear_has_dmaxmarketamount();
  inline void set_has_dholdbalance();
  inline void clear_has_dholdbalance();
  inline void set_has_ddelta();
  inline void clear_has_ddelta();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[3];
  mutable int _cached_size_;
  ::std::string* smarketno_;
  ::std::string* sstockcode_;
  ::std::string* sabsolutetimestamp_;
  double dprecloseprice_;
  double dopenprice_;
  double dlastprice_;
  double dhighprice_;
  double dlowprice_;
  double dcloseprice_;
  double davgprice_;
  double dbusinessamount_;
  double dbusinessbalance_;
  double dupprice_;
  double ddownprice_;
  double dcurrentamount_;
  double damount_;
  double dpreamount_;
  double dpresettlement_;
  double dsettlement_;
  double diopv_;
  ::std::string* stradingphasecode_;
  double dauctionprice_;
  double dmatchedqty_;
  double dfundt1price_;
  ::std::string* sfundtype_;
  double dmarketdealamount_;
  ::std::string* sstopflag_;
  ::std::string* sbsstatus_;
  ::std::string* slatestenquirytime_;
  double dbusinweight_;
  double dbuyprice1_;
  double dbuyprice2_;
  double dbuyprice3_;
  double dbuyprice4_;
  double dbuyprice5_;
  double dsaleprice1_;
  double dsaleprice2_;
  double dsaleprice3_;
  double dsaleprice4_;
  double dsaleprice5_;
  double dbuyqty1_;
  double dbuyqty2_;
  double dbuyqty3_;
  double dbuyqty4_;
  double dbuyqty5_;
  double dsaleqty1_;
  double dsaleqty2_;
  double dsaleqty3_;
  double dsaleqty4_;
  double dsaleqty5_;
  ::std::string* sstockname_;
  double danountperhand_;
  double dtotalbuyamount_;
  double dtotalsaleamount_;
  double dcjbishu_;
  double drealavgrate_;
  double dpreavgrate_;
  double dpe_;
  ::google::protobuf::int32 iinitdate_;
  ::google::protobuf::int32 ilayering_;
  double dpe2_;
  ::std::string* sstocktype_;
  ::google::protobuf::int32 izsssl_;
  ::google::protobuf::int32 istrikedate_;
  ::std::string* scodetype_;
  double dmaxlimitedamount_;
  double dmaxmarketamount_;
  double dholdbalance_;
  double ddelta_;
  ::google::protobuf::int32 iexpiredate_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1008* default_instance_;
};
// -------------------------------------------------------------------

class HQ1008s : public ::google::protobuf::Message {
 public:
  HQ1008s();
  virtual ~HQ1008s();

  HQ1008s(const HQ1008s& from);

  inline HQ1008s& operator=(const HQ1008s& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1008s& default_instance();

  void Swap(HQ1008s* other);

  // implements Message ----------------------------------------------

  HQ1008s* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1008s& from);
  void MergeFrom(const HQ1008s& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HQStockPackage.HQ1008 rHQ1008 = 1;
  inline int rHQ1008_size() const;
  inline void clear_rHQ1008();
  static const int kRHQ1008FieldNumber = 1;
  inline const ::HQStockPackage::HQ1008& rHQ1008(int index) const;
  inline ::HQStockPackage::HQ1008* mutable_rHQ1008(int index);
  inline ::HQStockPackage::HQ1008* add_rHQ1008();
  inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1008 >&
      rHQ1008() const;
  inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1008 >*
      mutable_rHQ1008();

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1008s)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1008 > rHQ1008_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1008s* default_instance_;
};
// -------------------------------------------------------------------

class HQ1001 : public ::google::protobuf::Message {
 public:
  HQ1001();
  virtual ~HQ1001();

  HQ1001(const HQ1001& from);

  inline HQ1001& operator=(const HQ1001& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1001& default_instance();

  void Swap(HQ1001* other);

  // implements Message ----------------------------------------------

  HQ1001* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1001& from);
  void MergeFrom(const HQ1001& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string sMarketNo = 1;
  inline bool has_smarketno() const;
  inline void clear_smarketno();
  static const int kSMarketNoFieldNumber = 1;
  inline const ::std::string& smarketno() const;
  inline void set_smarketno(const ::std::string& value);
  inline void set_smarketno(const char* value);
  inline void set_smarketno(const char* value, size_t size);
  inline ::std::string* mutable_smarketno();
  inline ::std::string* release_smarketno();
  inline void set_allocated_smarketno(::std::string* smarketno);

  // required string sStockCode = 2;
  inline bool has_sstockcode() const;
  inline void clear_sstockcode();
  static const int kSStockCodeFieldNumber = 2;
  inline const ::std::string& sstockcode() const;
  inline void set_sstockcode(const ::std::string& value);
  inline void set_sstockcode(const char* value);
  inline void set_sstockcode(const char* value, size_t size);
  inline ::std::string* mutable_sstockcode();
  inline ::std::string* release_sstockcode();
  inline void set_allocated_sstockcode(::std::string* sstockcode);

  // optional string sTimeStamp = 3;
  inline bool has_stimestamp() const;
  inline void clear_stimestamp();
  static const int kSTimeStampFieldNumber = 3;
  inline const ::std::string& stimestamp() const;
  inline void set_stimestamp(const ::std::string& value);
  inline void set_stimestamp(const char* value);
  inline void set_stimestamp(const char* value, size_t size);
  inline ::std::string* mutable_stimestamp();
  inline ::std::string* release_stimestamp();
  inline void set_allocated_stimestamp(::std::string* stimestamp);

  // optional double dReferencePrice = 4;
  inline bool has_dreferenceprice() const;
  inline void clear_dreferenceprice();
  static const int kDReferencePriceFieldNumber = 4;
  inline double dreferenceprice() const;
  inline void set_dreferenceprice(double value);

  // optional double dUpPrice = 5;
  inline bool has_dupprice() const;
  inline void clear_dupprice();
  static const int kDUpPriceFieldNumber = 5;
  inline double dupprice() const;
  inline void set_dupprice(double value);

  // optional double dDownPrice = 6;
  inline bool has_ddownprice() const;
  inline void clear_ddownprice();
  static const int kDDownPriceFieldNumber = 6;
  inline double ddownprice() const;
  inline void set_ddownprice(double value);

  // optional string sBeginTime = 7;
  inline bool has_sbegintime() const;
  inline void clear_sbegintime();
  static const int kSBeginTimeFieldNumber = 7;
  inline const ::std::string& sbegintime() const;
  inline void set_sbegintime(const ::std::string& value);
  inline void set_sbegintime(const char* value);
  inline void set_sbegintime(const char* value, size_t size);
  inline ::std::string* mutable_sbegintime();
  inline ::std::string* release_sbegintime();
  inline void set_allocated_sbegintime(::std::string* sbegintime);

  // optional string sEndTime = 8;
  inline bool has_sendtime() const;
  inline void clear_sendtime();
  static const int kSEndTimeFieldNumber = 8;
  inline const ::std::string& sendtime() const;
  inline void set_sendtime(const ::std::string& value);
  inline void set_sendtime(const char* value);
  inline void set_sendtime(const char* value, size_t size);
  inline ::std::string* mutable_sendtime();
  inline ::std::string* release_sendtime();
  inline void set_allocated_sendtime(::std::string* sendtime);

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1001)
 private:
  inline void set_has_smarketno();
  inline void clear_has_smarketno();
  inline void set_has_sstockcode();
  inline void clear_has_sstockcode();
  inline void set_has_stimestamp();
  inline void clear_has_stimestamp();
  inline void set_has_dreferenceprice();
  inline void clear_has_dreferenceprice();
  inline void set_has_dupprice();
  inline void clear_has_dupprice();
  inline void set_has_ddownprice();
  inline void clear_has_ddownprice();
  inline void set_has_sbegintime();
  inline void clear_has_sbegintime();
  inline void set_has_sendtime();
  inline void clear_has_sendtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* smarketno_;
  ::std::string* sstockcode_;
  ::std::string* stimestamp_;
  double dreferenceprice_;
  double dupprice_;
  double ddownprice_;
  ::std::string* sbegintime_;
  ::std::string* sendtime_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1001* default_instance_;
};
// -------------------------------------------------------------------

class HQ1001s : public ::google::protobuf::Message {
 public:
  HQ1001s();
  virtual ~HQ1001s();

  HQ1001s(const HQ1001s& from);

  inline HQ1001s& operator=(const HQ1001s& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1001s& default_instance();

  void Swap(HQ1001s* other);

  // implements Message ----------------------------------------------

  HQ1001s* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1001s& from);
  void MergeFrom(const HQ1001s& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HQStockPackage.HQ1001 rHQ1001 = 1;
  inline int rhq1001_size() const;
  inline void clear_rhq1001();
  static const int kRHQ1001FieldNumber = 1;
  inline const ::HQStockPackage::HQ1001& rhq1001(int index) const;
  inline ::HQStockPackage::HQ1001* mutable_rhq1001(int index);
  inline ::HQStockPackage::HQ1001* add_rhq1001();
  inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1001 >&
      rhq1001() const;
  inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1001 >*
      mutable_rhq1001();

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1001s)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1001 > rhq1001_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1001s* default_instance_;
};
// -------------------------------------------------------------------

class HQ1002 : public ::google::protobuf::Message {
 public:
  HQ1002();
  virtual ~HQ1002();

  HQ1002(const HQ1002& from);

  inline HQ1002& operator=(const HQ1002& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1002& default_instance();

  void Swap(HQ1002* other);

  // implements Message ----------------------------------------------

  HQ1002* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1002& from);
  void MergeFrom(const HQ1002& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string sMarketNo = 1;
  inline bool has_smarketno() const;
  inline void clear_smarketno();
  static const int kSMarketNoFieldNumber = 1;
  inline const ::std::string& smarketno() const;
  inline void set_smarketno(const ::std::string& value);
  inline void set_smarketno(const char* value);
  inline void set_smarketno(const char* value, size_t size);
  inline ::std::string* mutable_smarketno();
  inline ::std::string* release_smarketno();
  inline void set_allocated_smarketno(::std::string* smarketno);

  // required string sStockCode = 2;
  inline bool has_sstockcode() const;
  inline void clear_sstockcode();
  static const int kSStockCodeFieldNumber = 2;
  inline const ::std::string& sstockcode() const;
  inline void set_sstockcode(const ::std::string& value);
  inline void set_sstockcode(const char* value);
  inline void set_sstockcode(const char* value, size_t size);
  inline ::std::string* mutable_sstockcode();
  inline ::std::string* release_sstockcode();
  inline void set_allocated_sstockcode(::std::string* sstockcode);

  // optional double dPopcPrice = 3;
  inline bool has_dpopcprice() const;
  inline void clear_dpopcprice();
  static const int kDPopcPriceFieldNumber = 3;
  inline double dpopcprice() const;
  inline void set_dpopcprice(double value);

  // optional double dSvol = 4;
  inline bool has_dsvol() const;
  inline void clear_dsvol();
  static const int kDSvolFieldNumber = 4;
  inline double dsvol() const;
  inline void set_dsvol(double value);

  // optional double dReferencePrice = 5;
  inline bool has_dreferenceprice() const;
  inline void clear_dreferenceprice();
  static const int kDReferencePriceFieldNumber = 5;
  inline double dreferenceprice() const;
  inline void set_dreferenceprice(double value);

  // optional double dUpPrice = 6;
  inline bool has_dupprice() const;
  inline void clear_dupprice();
  static const int kDUpPriceFieldNumber = 6;
  inline double dupprice() const;
  inline void set_dupprice(double value);

  // optional double dDownPrice = 7;
  inline bool has_ddownprice() const;
  inline void clear_ddownprice();
  static const int kDDownPriceFieldNumber = 7;
  inline double ddownprice() const;
  inline void set_ddownprice(double value);

  // optional double dAmount = 8;
  inline bool has_damount() const;
  inline void clear_damount();
  static const int kDAmountFieldNumber = 8;
  inline double damount() const;
  inline void set_damount(double value);

  // optional string sOrdImbDirection = 9;
  inline bool has_sordimbdirection() const;
  inline void clear_sordimbdirection();
  static const int kSOrdImbDirectionFieldNumber = 9;
  inline const ::std::string& sordimbdirection() const;
  inline void set_sordimbdirection(const ::std::string& value);
  inline void set_sordimbdirection(const char* value);
  inline void set_sordimbdirection(const char* value, size_t size);
  inline ::std::string* mutable_sordimbdirection();
  inline ::std::string* release_sordimbdirection();
  inline void set_allocated_sordimbdirection(::std::string* sordimbdirection);

  // optional string sTimeStamp = 10;
  inline bool has_stimestamp() const;
  inline void clear_stimestamp();
  static const int kSTimeStampFieldNumber = 10;
  inline const ::std::string& stimestamp() const;
  inline void set_stimestamp(const ::std::string& value);
  inline void set_stimestamp(const char* value);
  inline void set_stimestamp(const char* value, size_t size);
  inline ::std::string* mutable_stimestamp();
  inline ::std::string* release_stimestamp();
  inline void set_allocated_stimestamp(::std::string* stimestamp);

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1002)
 private:
  inline void set_has_smarketno();
  inline void clear_has_smarketno();
  inline void set_has_sstockcode();
  inline void clear_has_sstockcode();
  inline void set_has_dpopcprice();
  inline void clear_has_dpopcprice();
  inline void set_has_dsvol();
  inline void clear_has_dsvol();
  inline void set_has_dreferenceprice();
  inline void clear_has_dreferenceprice();
  inline void set_has_dupprice();
  inline void clear_has_dupprice();
  inline void set_has_ddownprice();
  inline void clear_has_ddownprice();
  inline void set_has_damount();
  inline void clear_has_damount();
  inline void set_has_sordimbdirection();
  inline void clear_has_sordimbdirection();
  inline void set_has_stimestamp();
  inline void clear_has_stimestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* smarketno_;
  ::std::string* sstockcode_;
  double dpopcprice_;
  double dsvol_;
  double dreferenceprice_;
  double dupprice_;
  double ddownprice_;
  double damount_;
  ::std::string* sordimbdirection_;
  ::std::string* stimestamp_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1002* default_instance_;
};
// -------------------------------------------------------------------

class HQ1002s : public ::google::protobuf::Message {
 public:
  HQ1002s();
  virtual ~HQ1002s();

  HQ1002s(const HQ1002s& from);

  inline HQ1002s& operator=(const HQ1002s& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1002s& default_instance();

  void Swap(HQ1002s* other);

  // implements Message ----------------------------------------------

  HQ1002s* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1002s& from);
  void MergeFrom(const HQ1002s& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HQStockPackage.HQ1002 rHQ1002 = 1;
  inline int rhq1002_size() const;
  inline void clear_rhq1002();
  static const int kRHQ1002FieldNumber = 1;
  inline const ::HQStockPackage::HQ1002& rhq1002(int index) const;
  inline ::HQStockPackage::HQ1002* mutable_rhq1002(int index);
  inline ::HQStockPackage::HQ1002* add_rhq1002();
  inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1002 >&
      rhq1002() const;
  inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1002 >*
      mutable_rhq1002();

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1002s)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1002 > rhq1002_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1002s* default_instance_;
};
// -------------------------------------------------------------------

class HQ1006 : public ::google::protobuf::Message {
 public:
  HQ1006();
  virtual ~HQ1006();

  HQ1006(const HQ1006& from);

  inline HQ1006& operator=(const HQ1006& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1006& default_instance();

  void Swap(HQ1006* other);

  // implements Message ----------------------------------------------

  HQ1006* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1006& from);
  void MergeFrom(const HQ1006& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string sMarketNo = 1;
  inline bool has_smarketno() const;
  inline void clear_smarketno();
  static const int kSMarketNoFieldNumber = 1;
  inline const ::std::string& smarketno() const;
  inline void set_smarketno(const ::std::string& value);
  inline void set_smarketno(const char* value);
  inline void set_smarketno(const char* value, size_t size);
  inline ::std::string* mutable_smarketno();
  inline ::std::string* release_smarketno();
  inline void set_allocated_smarketno(::std::string* smarketno);

  // required string sStockCode = 2;
  inline bool has_sstockcode() const;
  inline void clear_sstockcode();
  static const int kSStockCodeFieldNumber = 2;
  inline const ::std::string& sstockcode() const;
  inline void set_sstockcode(const ::std::string& value);
  inline void set_sstockcode(const char* value);
  inline void set_sstockcode(const char* value, size_t size);
  inline ::std::string* mutable_sstockcode();
  inline ::std::string* release_sstockcode();
  inline void set_allocated_sstockcode(::std::string* sstockcode);

  // optional string sTradeStatus = 3;
  inline bool has_stradestatus() const;
  inline void clear_stradestatus();
  static const int kSTradeStatusFieldNumber = 3;
  inline const ::std::string& stradestatus() const;
  inline void set_stradestatus(const ::std::string& value);
  inline void set_stradestatus(const char* value);
  inline void set_stradestatus(const char* value, size_t size);
  inline ::std::string* mutable_stradestatus();
  inline ::std::string* release_stradestatus();
  inline void set_allocated_stradestatus(::std::string* stradestatus);

  // optional double dNominalPrice = 4;
  inline bool has_dnominalprice() const;
  inline void clear_dnominalprice();
  static const int kDNominalPriceFieldNumber = 4;
  inline double dnominalprice() const;
  inline void set_dnominalprice(double value);

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1006)
 private:
  inline void set_has_smarketno();
  inline void clear_has_smarketno();
  inline void set_has_sstockcode();
  inline void clear_has_sstockcode();
  inline void set_has_stradestatus();
  inline void clear_has_stradestatus();
  inline void set_has_dnominalprice();
  inline void clear_has_dnominalprice();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* smarketno_;
  ::std::string* sstockcode_;
  ::std::string* stradestatus_;
  double dnominalprice_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1006* default_instance_;
};
// -------------------------------------------------------------------

class HQ1006s : public ::google::protobuf::Message {
 public:
  HQ1006s();
  virtual ~HQ1006s();

  HQ1006s(const HQ1006s& from);

  inline HQ1006s& operator=(const HQ1006s& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1006s& default_instance();

  void Swap(HQ1006s* other);

  // implements Message ----------------------------------------------

  HQ1006s* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1006s& from);
  void MergeFrom(const HQ1006s& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HQStockPackage.HQ1006 rHQ1006 = 1;
  inline int rhq1006_size() const;
  inline void clear_rhq1006();
  static const int kRHQ1006FieldNumber = 1;
  inline const ::HQStockPackage::HQ1006& rhq1006(int index) const;
  inline ::HQStockPackage::HQ1006* mutable_rhq1006(int index);
  inline ::HQStockPackage::HQ1006* add_rhq1006();
  inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1006 >&
      rhq1006() const;
  inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1006 >*
      mutable_rhq1006();

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1006s)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1006 > rhq1006_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1006s* default_instance_;
};
// -------------------------------------------------------------------

class HQ1011 : public ::google::protobuf::Message {
 public:
  HQ1011();
  virtual ~HQ1011();

  HQ1011(const HQ1011& from);

  inline HQ1011& operator=(const HQ1011& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1011& default_instance();

  void Swap(HQ1011* other);

  // implements Message ----------------------------------------------

  HQ1011* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1011& from);
  void MergeFrom(const HQ1011& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string sMarketNo = 1;
  inline bool has_smarketno() const;
  inline void clear_smarketno();
  static const int kSMarketNoFieldNumber = 1;
  inline const ::std::string& smarketno() const;
  inline void set_smarketno(const ::std::string& value);
  inline void set_smarketno(const char* value);
  inline void set_smarketno(const char* value, size_t size);
  inline ::std::string* mutable_smarketno();
  inline ::std::string* release_smarketno();
  inline void set_allocated_smarketno(::std::string* smarketno);

  // required string sStockCode = 2;
  inline bool has_sstockcode() const;
  inline void clear_sstockcode();
  static const int kSStockCodeFieldNumber = 2;
  inline const ::std::string& sstockcode() const;
  inline void set_sstockcode(const ::std::string& value);
  inline void set_sstockcode(const char* value);
  inline void set_sstockcode(const char* value, size_t size);
  inline ::std::string* mutable_sstockcode();
  inline ::std::string* release_sstockcode();
  inline void set_allocated_sstockcode(::std::string* sstockcode);

  // optional string sTimeStamp = 3;
  inline bool has_stimestamp() const;
  inline void clear_stimestamp();
  static const int kSTimeStampFieldNumber = 3;
  inline const ::std::string& stimestamp() const;
  inline void set_stimestamp(const ::std::string& value);
  inline void set_stimestamp(const char* value);
  inline void set_stimestamp(const char* value, size_t size);
  inline ::std::string* mutable_stimestamp();
  inline ::std::string* release_stimestamp();
  inline void set_allocated_stimestamp(::std::string* stimestamp);

  // optional int64 dSpecialMark = 4;
  inline bool has_dspecialmark() const;
  inline void clear_dspecialmark();
  static const int kDSpecialMarkFieldNumber = 4;
  inline ::google::protobuf::int64 dspecialmark() const;
  inline void set_dspecialmark(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1011)
 private:
  inline void set_has_smarketno();
  inline void clear_has_smarketno();
  inline void set_has_sstockcode();
  inline void clear_has_sstockcode();
  inline void set_has_stimestamp();
  inline void clear_has_stimestamp();
  inline void set_has_dspecialmark();
  inline void clear_has_dspecialmark();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* smarketno_;
  ::std::string* sstockcode_;
  ::std::string* stimestamp_;
  ::google::protobuf::int64 dspecialmark_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1011* default_instance_;
};
// -------------------------------------------------------------------

class HQ1011s : public ::google::protobuf::Message {
 public:
  HQ1011s();
  virtual ~HQ1011s();

  HQ1011s(const HQ1011s& from);

  inline HQ1011s& operator=(const HQ1011s& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1011s& default_instance();

  void Swap(HQ1011s* other);

  // implements Message ----------------------------------------------

  HQ1011s* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1011s& from);
  void MergeFrom(const HQ1011s& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HQStockPackage.HQ1011 rHQ1011 = 1;
  inline int rhq1011_size() const;
  inline void clear_rhq1011();
  static const int kRHQ1011FieldNumber = 1;
  inline const ::HQStockPackage::HQ1011& rhq1011(int index) const;
  inline ::HQStockPackage::HQ1011* mutable_rhq1011(int index);
  inline ::HQStockPackage::HQ1011* add_rhq1011();
  inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1011 >&
      rhq1011() const;
  inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1011 >*
      mutable_rhq1011();

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1011s)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1011 > rhq1011_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1011s* default_instance_;
};
// -------------------------------------------------------------------

class HQ1013 : public ::google::protobuf::Message {
 public:
  HQ1013();
  virtual ~HQ1013();

  HQ1013(const HQ1013& from);

  inline HQ1013& operator=(const HQ1013& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1013& default_instance();

  void Swap(HQ1013* other);

  // implements Message ----------------------------------------------

  HQ1013* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1013& from);
  void MergeFrom(const HQ1013& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string sMarketNo = 1;
  inline bool has_smarketno() const;
  inline void clear_smarketno();
  static const int kSMarketNoFieldNumber = 1;
  inline const ::std::string& smarketno() const;
  inline void set_smarketno(const ::std::string& value);
  inline void set_smarketno(const char* value);
  inline void set_smarketno(const char* value, size_t size);
  inline ::std::string* mutable_smarketno();
  inline ::std::string* release_smarketno();
  inline void set_allocated_smarketno(::std::string* smarketno);

  // required string sRecordNo = 2;
  inline bool has_srecordno() const;
  inline void clear_srecordno();
  static const int kSRecordNoFieldNumber = 2;
  inline const ::std::string& srecordno() const;
  inline void set_srecordno(const ::std::string& value);
  inline void set_srecordno(const char* value);
  inline void set_srecordno(const char* value, size_t size);
  inline ::std::string* mutable_srecordno();
  inline ::std::string* release_srecordno();
  inline void set_allocated_srecordno(::std::string* srecordno);

  // required string sReportSeat = 3;
  inline bool has_sreportseat() const;
  inline void clear_sreportseat();
  static const int kSReportSeatFieldNumber = 3;
  inline const ::std::string& sreportseat() const;
  inline void set_sreportseat(const ::std::string& value);
  inline void set_sreportseat(const char* value);
  inline void set_sreportseat(const char* value, size_t size);
  inline ::std::string* mutable_sreportseat();
  inline ::std::string* release_sreportseat();
  inline void set_allocated_sreportseat(::std::string* sreportseat);

  // optional string sStockCode = 4;
  inline bool has_sstockcode() const;
  inline void clear_sstockcode();
  static const int kSStockCodeFieldNumber = 4;
  inline const ::std::string& sstockcode() const;
  inline void set_sstockcode(const ::std::string& value);
  inline void set_sstockcode(const char* value);
  inline void set_sstockcode(const char* value, size_t size);
  inline ::std::string* mutable_sstockcode();
  inline ::std::string* release_sstockcode();
  inline void set_allocated_sstockcode(::std::string* sstockcode);

  // optional double dEntrustPrice = 5;
  inline bool has_dentrustprice() const;
  inline void clear_dentrustprice();
  static const int kDEntrustPriceFieldNumber = 5;
  inline double dentrustprice() const;
  inline void set_dentrustprice(double value);

  // optional double dEntrustAmount = 6;
  inline bool has_dentrustamount() const;
  inline void clear_dentrustamount();
  static const int kDEntrustAmountFieldNumber = 6;
  inline double dentrustamount() const;
  inline void set_dentrustamount(double value);

  // optional string sSide = 7;
  inline bool has_sside() const;
  inline void clear_sside();
  static const int kSSideFieldNumber = 7;
  inline const ::std::string& sside() const;
  inline void set_sside(const ::std::string& value);
  inline void set_sside(const char* value);
  inline void set_sside(const char* value, size_t size);
  inline ::std::string* mutable_sside();
  inline ::std::string* release_sside();
  inline void set_allocated_sside(::std::string* sside);

  // optional bytes sContactInfo = 8;
  inline bool has_scontactinfo() const;
  inline void clear_scontactinfo();
  static const int kSContactInfoFieldNumber = 8;
  inline const ::std::string& scontactinfo() const;
  inline void set_scontactinfo(const ::std::string& value);
  inline void set_scontactinfo(const char* value);
  inline void set_scontactinfo(const void* value, size_t size);
  inline ::std::string* mutable_scontactinfo();
  inline ::std::string* release_scontactinfo();
  inline void set_allocated_scontactinfo(::std::string* scontactinfo);

  // required string sTransactDate = 9;
  inline bool has_stransactdate() const;
  inline void clear_stransactdate();
  static const int kSTransactDateFieldNumber = 9;
  inline const ::std::string& stransactdate() const;
  inline void set_stransactdate(const ::std::string& value);
  inline void set_stransactdate(const char* value);
  inline void set_stransactdate(const char* value, size_t size);
  inline ::std::string* mutable_stransactdate();
  inline ::std::string* release_stransactdate();
  inline void set_allocated_stransactdate(::std::string* stransactdate);

  // optional string sTransactTime = 10;
  inline bool has_stransacttime() const;
  inline void clear_stransacttime();
  static const int kSTransactTimeFieldNumber = 10;
  inline const ::std::string& stransacttime() const;
  inline void set_stransacttime(const ::std::string& value);
  inline void set_stransacttime(const char* value);
  inline void set_stransacttime(const char* value, size_t size);
  inline ::std::string* mutable_stransacttime();
  inline ::std::string* release_stransacttime();
  inline void set_allocated_stransacttime(::std::string* stransacttime);

  // optional string sTransType = 11;
  inline bool has_stranstype() const;
  inline void clear_stranstype();
  static const int kSTransTypeFieldNumber = 11;
  inline const ::std::string& stranstype() const;
  inline void set_stranstype(const ::std::string& value);
  inline void set_stranstype(const char* value);
  inline void set_stranstype(const char* value, size_t size);
  inline ::std::string* mutable_stranstype();
  inline ::std::string* release_stranstype();
  inline void set_allocated_stranstype(::std::string* stranstype);

  // optional string sConfirmID = 12;
  inline bool has_sconfirmid() const;
  inline void clear_sconfirmid();
  static const int kSConfirmIDFieldNumber = 12;
  inline const ::std::string& sconfirmid() const;
  inline void set_sconfirmid(const ::std::string& value);
  inline void set_sconfirmid(const char* value);
  inline void set_sconfirmid(const char* value, size_t size);
  inline ::std::string* mutable_sconfirmid();
  inline ::std::string* release_sconfirmid();
  inline void set_allocated_sconfirmid(::std::string* sconfirmid);

  // optional string sBulkunderweightFlag = 13;
  inline bool has_sbulkunderweightflag() const;
  inline void clear_sbulkunderweightflag();
  static const int kSBulkunderweightFlagFieldNumber = 13;
  inline const ::std::string& sbulkunderweightflag() const;
  inline void set_sbulkunderweightflag(const ::std::string& value);
  inline void set_sbulkunderweightflag(const char* value);
  inline void set_sbulkunderweightflag(const char* value, size_t size);
  inline ::std::string* mutable_sbulkunderweightflag();
  inline ::std::string* release_sbulkunderweightflag();
  inline void set_allocated_sbulkunderweightflag(::std::string* sbulkunderweightflag);

  // optional string sExecType = 14;
  inline bool has_sexectype() const;
  inline void clear_sexectype();
  static const int kSExecTypeFieldNumber = 14;
  inline const ::std::string& sexectype() const;
  inline void set_sexectype(const ::std::string& value);
  inline void set_sexectype(const char* value);
  inline void set_sexectype(const char* value, size_t size);
  inline ::std::string* mutable_sexectype();
  inline ::std::string* release_sexectype();
  inline void set_allocated_sexectype(::std::string* sexectype);

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1013)
 private:
  inline void set_has_smarketno();
  inline void clear_has_smarketno();
  inline void set_has_srecordno();
  inline void clear_has_srecordno();
  inline void set_has_sreportseat();
  inline void clear_has_sreportseat();
  inline void set_has_sstockcode();
  inline void clear_has_sstockcode();
  inline void set_has_dentrustprice();
  inline void clear_has_dentrustprice();
  inline void set_has_dentrustamount();
  inline void clear_has_dentrustamount();
  inline void set_has_sside();
  inline void clear_has_sside();
  inline void set_has_scontactinfo();
  inline void clear_has_scontactinfo();
  inline void set_has_stransactdate();
  inline void clear_has_stransactdate();
  inline void set_has_stransacttime();
  inline void clear_has_stransacttime();
  inline void set_has_stranstype();
  inline void clear_has_stranstype();
  inline void set_has_sconfirmid();
  inline void clear_has_sconfirmid();
  inline void set_has_sbulkunderweightflag();
  inline void clear_has_sbulkunderweightflag();
  inline void set_has_sexectype();
  inline void clear_has_sexectype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* smarketno_;
  ::std::string* srecordno_;
  ::std::string* sreportseat_;
  ::std::string* sstockcode_;
  double dentrustprice_;
  double dentrustamount_;
  ::std::string* sside_;
  ::std::string* scontactinfo_;
  ::std::string* stransactdate_;
  ::std::string* stransacttime_;
  ::std::string* stranstype_;
  ::std::string* sconfirmid_;
  ::std::string* sbulkunderweightflag_;
  ::std::string* sexectype_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1013* default_instance_;
};
// -------------------------------------------------------------------

class HQ1013s : public ::google::protobuf::Message {
 public:
  HQ1013s();
  virtual ~HQ1013s();

  HQ1013s(const HQ1013s& from);

  inline HQ1013s& operator=(const HQ1013s& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1013s& default_instance();

  void Swap(HQ1013s* other);

  // implements Message ----------------------------------------------

  HQ1013s* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1013s& from);
  void MergeFrom(const HQ1013s& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HQStockPackage.HQ1013 rHQ1013 = 1;
  inline int rhq1013_size() const;
  inline void clear_rhq1013();
  static const int kRHQ1013FieldNumber = 1;
  inline const ::HQStockPackage::HQ1013& rhq1013(int index) const;
  inline ::HQStockPackage::HQ1013* mutable_rhq1013(int index);
  inline ::HQStockPackage::HQ1013* add_rhq1013();
  inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1013 >&
      rhq1013() const;
  inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1013 >*
      mutable_rhq1013();

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1013s)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1013 > rhq1013_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1013s* default_instance_;
};
// -------------------------------------------------------------------

class HQ1055 : public ::google::protobuf::Message {
 public:
  HQ1055();
  virtual ~HQ1055();

  HQ1055(const HQ1055& from);

  inline HQ1055& operator=(const HQ1055& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1055& default_instance();

  void Swap(HQ1055* other);

  // implements Message ----------------------------------------------

  HQ1055* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1055& from);
  void MergeFrom(const HQ1055& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string sMarketNo = 1;
  inline bool has_smarketno() const;
  inline void clear_smarketno();
  static const int kSMarketNoFieldNumber = 1;
  inline const ::std::string& smarketno() const;
  inline void set_smarketno(const ::std::string& value);
  inline void set_smarketno(const char* value);
  inline void set_smarketno(const char* value, size_t size);
  inline ::std::string* mutable_smarketno();
  inline ::std::string* release_smarketno();
  inline void set_allocated_smarketno(::std::string* smarketno);

  // required string sStockCode = 2;
  inline bool has_sstockcode() const;
  inline void clear_sstockcode();
  static const int kSStockCodeFieldNumber = 2;
  inline const ::std::string& sstockcode() const;
  inline void set_sstockcode(const ::std::string& value);
  inline void set_sstockcode(const char* value);
  inline void set_sstockcode(const char* value, size_t size);
  inline ::std::string* mutable_sstockcode();
  inline ::std::string* release_sstockcode();
  inline void set_allocated_sstockcode(::std::string* sstockcode);

  // optional bytes sStockName = 3;
  inline bool has_sstockname() const;
  inline void clear_sstockname();
  static const int kSStockNameFieldNumber = 3;
  inline const ::std::string& sstockname() const;
  inline void set_sstockname(const ::std::string& value);
  inline void set_sstockname(const char* value);
  inline void set_sstockname(const void* value, size_t size);
  inline ::std::string* mutable_sstockname();
  inline ::std::string* release_sstockname();
  inline void set_allocated_sstockname(::std::string* sstockname);

  // optional double dBusinessAmount = 4;
  inline bool has_dbusinessamount() const;
  inline void clear_dbusinessamount();
  static const int kDBusinessAmountFieldNumber = 4;
  inline double dbusinessamount() const;
  inline void set_dbusinessamount(double value);

  // optional double dBusinessBalance = 5;
  inline bool has_dbusinessbalance() const;
  inline void clear_dbusinessbalance();
  static const int kDBusinessBalanceFieldNumber = 5;
  inline double dbusinessbalance() const;
  inline void set_dbusinessbalance(double value);

  // optional double dClosePrice = 6;
  inline bool has_dcloseprice() const;
  inline void clear_dcloseprice();
  static const int kDClosePriceFieldNumber = 6;
  inline double dcloseprice() const;
  inline void set_dcloseprice(double value);

  // optional double dBuyVolume = 7;
  inline bool has_dbuyvolume() const;
  inline void clear_dbuyvolume();
  static const int kDBuyVolumeFieldNumber = 7;
  inline double dbuyvolume() const;
  inline void set_dbuyvolume(double value);

  // optional double dSellVolume = 8;
  inline bool has_dsellvolume() const;
  inline void clear_dsellvolume();
  static const int kDSellVolumeFieldNumber = 8;
  inline double dsellvolume() const;
  inline void set_dsellvolume(double value);

  // optional string sTradingPhaseCode = 9;
  inline bool has_stradingphasecode() const;
  inline void clear_stradingphasecode();
  static const int kSTradingPhaseCodeFieldNumber = 9;
  inline const ::std::string& stradingphasecode() const;
  inline void set_stradingphasecode(const ::std::string& value);
  inline void set_stradingphasecode(const char* value);
  inline void set_stradingphasecode(const char* value, size_t size);
  inline ::std::string* mutable_stradingphasecode();
  inline ::std::string* release_stradingphasecode();
  inline void set_allocated_stradingphasecode(::std::string* stradingphasecode);

  // optional string sAbsoluteTimeStamp = 10;
  inline bool has_sabsolutetimestamp() const;
  inline void clear_sabsolutetimestamp();
  static const int kSAbsoluteTimeStampFieldNumber = 10;
  inline const ::std::string& sabsolutetimestamp() const;
  inline void set_sabsolutetimestamp(const ::std::string& value);
  inline void set_sabsolutetimestamp(const char* value);
  inline void set_sabsolutetimestamp(const char* value, size_t size);
  inline ::std::string* mutable_sabsolutetimestamp();
  inline ::std::string* release_sabsolutetimestamp();
  inline void set_allocated_sabsolutetimestamp(::std::string* sabsolutetimestamp);

  // optional int32 iInitDate = 11;
  inline bool has_iinitdate() const;
  inline void clear_iinitdate();
  static const int kIInitDateFieldNumber = 11;
  inline ::google::protobuf::int32 iinitdate() const;
  inline void set_iinitdate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1055)
 private:
  inline void set_has_smarketno();
  inline void clear_has_smarketno();
  inline void set_has_sstockcode();
  inline void clear_has_sstockcode();
  inline void set_has_sstockname();
  inline void clear_has_sstockname();
  inline void set_has_dbusinessamount();
  inline void clear_has_dbusinessamount();
  inline void set_has_dbusinessbalance();
  inline void clear_has_dbusinessbalance();
  inline void set_has_dcloseprice();
  inline void clear_has_dcloseprice();
  inline void set_has_dbuyvolume();
  inline void clear_has_dbuyvolume();
  inline void set_has_dsellvolume();
  inline void clear_has_dsellvolume();
  inline void set_has_stradingphasecode();
  inline void clear_has_stradingphasecode();
  inline void set_has_sabsolutetimestamp();
  inline void clear_has_sabsolutetimestamp();
  inline void set_has_iinitdate();
  inline void clear_has_iinitdate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* smarketno_;
  ::std::string* sstockcode_;
  ::std::string* sstockname_;
  double dbusinessamount_;
  double dbusinessbalance_;
  double dcloseprice_;
  double dbuyvolume_;
  double dsellvolume_;
  ::std::string* stradingphasecode_;
  ::std::string* sabsolutetimestamp_;
  ::google::protobuf::int32 iinitdate_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1055* default_instance_;
};
// -------------------------------------------------------------------

class HQ1055s : public ::google::protobuf::Message {
 public:
  HQ1055s();
  virtual ~HQ1055s();

  HQ1055s(const HQ1055s& from);

  inline HQ1055s& operator=(const HQ1055s& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1055s& default_instance();

  void Swap(HQ1055s* other);

  // implements Message ----------------------------------------------

  HQ1055s* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1055s& from);
  void MergeFrom(const HQ1055s& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HQStockPackage.HQ1055 rHQ1055 = 1;
  inline int rhq1055_size() const;
  inline void clear_rhq1055();
  static const int kRHQ1055FieldNumber = 1;
  inline const ::HQStockPackage::HQ1055& rhq1055(int index) const;
  inline ::HQStockPackage::HQ1055* mutable_rhq1055(int index);
  inline ::HQStockPackage::HQ1055* add_rhq1055();
  inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1055 >&
      rhq1055() const;
  inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1055 >*
      mutable_rhq1055();

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1055s)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1055 > rhq1055_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1055s* default_instance_;
};
// -------------------------------------------------------------------

class HQ1057 : public ::google::protobuf::Message {
 public:
  HQ1057();
  virtual ~HQ1057();

  HQ1057(const HQ1057& from);

  inline HQ1057& operator=(const HQ1057& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1057& default_instance();

  void Swap(HQ1057* other);

  // implements Message ----------------------------------------------

  HQ1057* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1057& from);
  void MergeFrom(const HQ1057& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string sMarketNo = 1;
  inline bool has_smarketno() const;
  inline void clear_smarketno();
  static const int kSMarketNoFieldNumber = 1;
  inline const ::std::string& smarketno() const;
  inline void set_smarketno(const ::std::string& value);
  inline void set_smarketno(const char* value);
  inline void set_smarketno(const char* value, size_t size);
  inline ::std::string* mutable_smarketno();
  inline ::std::string* release_smarketno();
  inline void set_allocated_smarketno(::std::string* smarketno);

  // required string sStockCode = 2;
  inline bool has_sstockcode() const;
  inline void clear_sstockcode();
  static const int kSStockCodeFieldNumber = 2;
  inline const ::std::string& sstockcode() const;
  inline void set_sstockcode(const ::std::string& value);
  inline void set_sstockcode(const char* value);
  inline void set_sstockcode(const char* value, size_t size);
  inline ::std::string* mutable_sstockcode();
  inline ::std::string* release_sstockcode();
  inline void set_allocated_sstockcode(::std::string* sstockcode);

  // optional string sTradingDay = 3;
  inline bool has_stradingday() const;
  inline void clear_stradingday();
  static const int kSTradingDayFieldNumber = 3;
  inline const ::std::string& stradingday() const;
  inline void set_stradingday(const ::std::string& value);
  inline void set_stradingday(const char* value);
  inline void set_stradingday(const char* value, size_t size);
  inline ::std::string* mutable_stradingday();
  inline ::std::string* release_stradingday();
  inline void set_allocated_stradingday(::std::string* stradingday);

  // optional string sForquoteSysId = 4;
  inline bool has_sforquotesysid() const;
  inline void clear_sforquotesysid();
  static const int kSForquoteSysIdFieldNumber = 4;
  inline const ::std::string& sforquotesysid() const;
  inline void set_sforquotesysid(const ::std::string& value);
  inline void set_sforquotesysid(const char* value);
  inline void set_sforquotesysid(const char* value, size_t size);
  inline ::std::string* mutable_sforquotesysid();
  inline ::std::string* release_sforquotesysid();
  inline void set_allocated_sforquotesysid(::std::string* sforquotesysid);

  // optional string sForquoteTime = 5;
  inline bool has_sforquotetime() const;
  inline void clear_sforquotetime();
  static const int kSForquoteTimeFieldNumber = 5;
  inline const ::std::string& sforquotetime() const;
  inline void set_sforquotetime(const ::std::string& value);
  inline void set_sforquotetime(const char* value);
  inline void set_sforquotetime(const char* value, size_t size);
  inline ::std::string* mutable_sforquotetime();
  inline ::std::string* release_sforquotetime();
  inline void set_allocated_sforquotetime(::std::string* sforquotetime);

  // optional string sActionDay = 6;
  inline bool has_sactionday() const;
  inline void clear_sactionday();
  static const int kSActionDayFieldNumber = 6;
  inline const ::std::string& sactionday() const;
  inline void set_sactionday(const ::std::string& value);
  inline void set_sactionday(const char* value);
  inline void set_sactionday(const char* value, size_t size);
  inline ::std::string* mutable_sactionday();
  inline ::std::string* release_sactionday();
  inline void set_allocated_sactionday(::std::string* sactionday);

  // optional string sAbsoluteTimeStamp = 7;
  inline bool has_sabsolutetimestamp() const;
  inline void clear_sabsolutetimestamp();
  static const int kSAbsoluteTimeStampFieldNumber = 7;
  inline const ::std::string& sabsolutetimestamp() const;
  inline void set_sabsolutetimestamp(const ::std::string& value);
  inline void set_sabsolutetimestamp(const char* value);
  inline void set_sabsolutetimestamp(const char* value, size_t size);
  inline ::std::string* mutable_sabsolutetimestamp();
  inline ::std::string* release_sabsolutetimestamp();
  inline void set_allocated_sabsolutetimestamp(::std::string* sabsolutetimestamp);

  // optional int32 iInitDate = 8;
  inline bool has_iinitdate() const;
  inline void clear_iinitdate();
  static const int kIInitDateFieldNumber = 8;
  inline ::google::protobuf::int32 iinitdate() const;
  inline void set_iinitdate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1057)
 private:
  inline void set_has_smarketno();
  inline void clear_has_smarketno();
  inline void set_has_sstockcode();
  inline void clear_has_sstockcode();
  inline void set_has_stradingday();
  inline void clear_has_stradingday();
  inline void set_has_sforquotesysid();
  inline void clear_has_sforquotesysid();
  inline void set_has_sforquotetime();
  inline void clear_has_sforquotetime();
  inline void set_has_sactionday();
  inline void clear_has_sactionday();
  inline void set_has_sabsolutetimestamp();
  inline void clear_has_sabsolutetimestamp();
  inline void set_has_iinitdate();
  inline void clear_has_iinitdate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* smarketno_;
  ::std::string* sstockcode_;
  ::std::string* stradingday_;
  ::std::string* sforquotesysid_;
  ::std::string* sforquotetime_;
  ::std::string* sactionday_;
  ::std::string* sabsolutetimestamp_;
  ::google::protobuf::int32 iinitdate_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1057* default_instance_;
};
// -------------------------------------------------------------------

class HQ1057s : public ::google::protobuf::Message {
 public:
  HQ1057s();
  virtual ~HQ1057s();

  HQ1057s(const HQ1057s& from);

  inline HQ1057s& operator=(const HQ1057s& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1057s& default_instance();

  void Swap(HQ1057s* other);

  // implements Message ----------------------------------------------

  HQ1057s* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1057s& from);
  void MergeFrom(const HQ1057s& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HQStockPackage.HQ1057 rHQ1057 = 1;
  inline int rhq1057_size() const;
  inline void clear_rhq1057();
  static const int kRHQ1057FieldNumber = 1;
  inline const ::HQStockPackage::HQ1057& rhq1057(int index) const;
  inline ::HQStockPackage::HQ1057* mutable_rhq1057(int index);
  inline ::HQStockPackage::HQ1057* add_rhq1057();
  inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1057 >&
      rhq1057() const;
  inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1057 >*
      mutable_rhq1057();

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1057s)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1057 > rhq1057_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1057s* default_instance_;
};
// -------------------------------------------------------------------

class HQ1058 : public ::google::protobuf::Message {
 public:
  HQ1058();
  virtual ~HQ1058();

  HQ1058(const HQ1058& from);

  inline HQ1058& operator=(const HQ1058& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1058& default_instance();

  void Swap(HQ1058* other);

  // implements Message ----------------------------------------------

  HQ1058* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1058& from);
  void MergeFrom(const HQ1058& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string sMarketNo = 1;
  inline bool has_smarketno() const;
  inline void clear_smarketno();
  static const int kSMarketNoFieldNumber = 1;
  inline const ::std::string& smarketno() const;
  inline void set_smarketno(const ::std::string& value);
  inline void set_smarketno(const char* value);
  inline void set_smarketno(const char* value, size_t size);
  inline ::std::string* mutable_smarketno();
  inline ::std::string* release_smarketno();
  inline void set_allocated_smarketno(::std::string* smarketno);

  // optional double dThresholdAmount = 2;
  inline bool has_dthresholdamount() const;
  inline void clear_dthresholdamount();
  static const int kDThresholdAmountFieldNumber = 2;
  inline double dthresholdamount() const;
  inline void set_dthresholdamount(double value);

  // optional double dPosAmt = 3;
  inline bool has_dposamt() const;
  inline void clear_dposamt();
  static const int kDPosAmtFieldNumber = 3;
  inline double dposamt() const;
  inline void set_dposamt(double value);

  // optional int32 iAmountStatus = 4;
  inline bool has_iamountstatus() const;
  inline void clear_iamountstatus();
  static const int kIAmountStatusFieldNumber = 4;
  inline ::google::protobuf::int32 iamountstatus() const;
  inline void set_iamountstatus(::google::protobuf::int32 value);

  // optional string sTradeStatus = 5;
  inline bool has_stradestatus() const;
  inline void clear_stradestatus();
  static const int kSTradeStatusFieldNumber = 5;
  inline const ::std::string& stradestatus() const;
  inline void set_stradestatus(const ::std::string& value);
  inline void set_stradestatus(const char* value);
  inline void set_stradestatus(const char* value, size_t size);
  inline ::std::string* mutable_stradestatus();
  inline ::std::string* release_stradestatus();
  inline void set_allocated_stradestatus(::std::string* stradestatus);

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1058)
 private:
  inline void set_has_smarketno();
  inline void clear_has_smarketno();
  inline void set_has_dthresholdamount();
  inline void clear_has_dthresholdamount();
  inline void set_has_dposamt();
  inline void clear_has_dposamt();
  inline void set_has_iamountstatus();
  inline void clear_has_iamountstatus();
  inline void set_has_stradestatus();
  inline void clear_has_stradestatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* smarketno_;
  double dthresholdamount_;
  double dposamt_;
  ::std::string* stradestatus_;
  ::google::protobuf::int32 iamountstatus_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1058* default_instance_;
};
// -------------------------------------------------------------------

class HQ1058s : public ::google::protobuf::Message {
 public:
  HQ1058s();
  virtual ~HQ1058s();

  HQ1058s(const HQ1058s& from);

  inline HQ1058s& operator=(const HQ1058s& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1058s& default_instance();

  void Swap(HQ1058s* other);

  // implements Message ----------------------------------------------

  HQ1058s* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1058s& from);
  void MergeFrom(const HQ1058s& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HQStockPackage.HQ1058 rHQ1058 = 1;
  inline int rhq1058_size() const;
  inline void clear_rhq1058();
  static const int kRHQ1058FieldNumber = 1;
  inline const ::HQStockPackage::HQ1058& rhq1058(int index) const;
  inline ::HQStockPackage::HQ1058* mutable_rhq1058(int index);
  inline ::HQStockPackage::HQ1058* add_rhq1058();
  inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1058 >&
      rhq1058() const;
  inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1058 >*
      mutable_rhq1058();

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1058s)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1058 > rhq1058_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1058s* default_instance_;
};
// -------------------------------------------------------------------

class HQ1059 : public ::google::protobuf::Message {
 public:
  HQ1059();
  virtual ~HQ1059();

  HQ1059(const HQ1059& from);

  inline HQ1059& operator=(const HQ1059& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1059& default_instance();

  void Swap(HQ1059* other);

  // implements Message ----------------------------------------------

  HQ1059* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1059& from);
  void MergeFrom(const HQ1059& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string sMarketNo = 1;
  inline bool has_smarketno() const;
  inline void clear_smarketno();
  static const int kSMarketNoFieldNumber = 1;
  inline const ::std::string& smarketno() const;
  inline void set_smarketno(const ::std::string& value);
  inline void set_smarketno(const char* value);
  inline void set_smarketno(const char* value, size_t size);
  inline ::std::string* mutable_smarketno();
  inline ::std::string* release_smarketno();
  inline void set_allocated_smarketno(::std::string* smarketno);

  // required string sRecordNo = 2;
  inline bool has_srecordno() const;
  inline void clear_srecordno();
  static const int kSRecordNoFieldNumber = 2;
  inline const ::std::string& srecordno() const;
  inline void set_srecordno(const ::std::string& value);
  inline void set_srecordno(const char* value);
  inline void set_srecordno(const char* value, size_t size);
  inline ::std::string* mutable_srecordno();
  inline ::std::string* release_srecordno();
  inline void set_allocated_srecordno(::std::string* srecordno);

  // required string sReportSeat = 3;
  inline bool has_sreportseat() const;
  inline void clear_sreportseat();
  static const int kSReportSeatFieldNumber = 3;
  inline const ::std::string& sreportseat() const;
  inline void set_sreportseat(const ::std::string& value);
  inline void set_sreportseat(const char* value);
  inline void set_sreportseat(const char* value, size_t size);
  inline ::std::string* mutable_sreportseat();
  inline ::std::string* release_sreportseat();
  inline void set_allocated_sreportseat(::std::string* sreportseat);

  // optional string sStockCode = 4;
  inline bool has_sstockcode() const;
  inline void clear_sstockcode();
  static const int kSStockCodeFieldNumber = 4;
  inline const ::std::string& sstockcode() const;
  inline void set_sstockcode(const ::std::string& value);
  inline void set_sstockcode(const char* value);
  inline void set_sstockcode(const char* value, size_t size);
  inline ::std::string* mutable_sstockcode();
  inline ::std::string* release_sstockcode();
  inline void set_allocated_sstockcode(::std::string* sstockcode);

  // optional double dEntrustPrice = 5;
  inline bool has_dentrustprice() const;
  inline void clear_dentrustprice();
  static const int kDEntrustPriceFieldNumber = 5;
  inline double dentrustprice() const;
  inline void set_dentrustprice(double value);

  // optional double dEntrustAmount = 6;
  inline bool has_dentrustamount() const;
  inline void clear_dentrustamount();
  static const int kDEntrustAmountFieldNumber = 6;
  inline double dentrustamount() const;
  inline void set_dentrustamount(double value);

  // optional string sSide = 7;
  inline bool has_sside() const;
  inline void clear_sside();
  static const int kSSideFieldNumber = 7;
  inline const ::std::string& sside() const;
  inline void set_sside(const ::std::string& value);
  inline void set_sside(const char* value);
  inline void set_sside(const char* value, size_t size);
  inline ::std::string* mutable_sside();
  inline ::std::string* release_sside();
  inline void set_allocated_sside(::std::string* sside);

  // required string sTransactDate = 8;
  inline bool has_stransactdate() const;
  inline void clear_stransactdate();
  static const int kSTransactDateFieldNumber = 8;
  inline const ::std::string& stransactdate() const;
  inline void set_stransactdate(const ::std::string& value);
  inline void set_stransactdate(const char* value);
  inline void set_stransactdate(const char* value, size_t size);
  inline ::std::string* mutable_stransactdate();
  inline ::std::string* release_stransactdate();
  inline void set_allocated_stransactdate(::std::string* stransactdate);

  // optional string sTransactTime = 9;
  inline bool has_stransacttime() const;
  inline void clear_stransacttime();
  static const int kSTransactTimeFieldNumber = 9;
  inline const ::std::string& stransacttime() const;
  inline void set_stransacttime(const ::std::string& value);
  inline void set_stransacttime(const char* value);
  inline void set_stransacttime(const char* value, size_t size);
  inline ::std::string* mutable_stransacttime();
  inline ::std::string* release_stransacttime();
  inline void set_allocated_stransacttime(::std::string* stransacttime);

  // optional int32 iExpirationDays = 10;
  inline bool has_iexpirationdays() const;
  inline void clear_iexpirationdays();
  static const int kIExpirationDaysFieldNumber = 10;
  inline ::google::protobuf::int32 iexpirationdays() const;
  inline void set_iexpirationdays(::google::protobuf::int32 value);

  // optional int32 iExpirationType = 11;
  inline bool has_iexpirationtype() const;
  inline void clear_iexpirationtype();
  static const int kIExpirationTypeFieldNumber = 11;
  inline ::google::protobuf::int32 iexpirationtype() const;
  inline void set_iexpirationtype(::google::protobuf::int32 value);

  // optional string sExecType = 12;
  inline bool has_sexectype() const;
  inline void clear_sexectype();
  static const int kSExecTypeFieldNumber = 12;
  inline const ::std::string& sexectype() const;
  inline void set_sexectype(const ::std::string& value);
  inline void set_sexectype(const char* value);
  inline void set_sexectype(const char* value, size_t size);
  inline ::std::string* mutable_sexectype();
  inline ::std::string* release_sexectype();
  inline void set_allocated_sexectype(::std::string* sexectype);

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1059)
 private:
  inline void set_has_smarketno();
  inline void clear_has_smarketno();
  inline void set_has_srecordno();
  inline void clear_has_srecordno();
  inline void set_has_sreportseat();
  inline void clear_has_sreportseat();
  inline void set_has_sstockcode();
  inline void clear_has_sstockcode();
  inline void set_has_dentrustprice();
  inline void clear_has_dentrustprice();
  inline void set_has_dentrustamount();
  inline void clear_has_dentrustamount();
  inline void set_has_sside();
  inline void clear_has_sside();
  inline void set_has_stransactdate();
  inline void clear_has_stransactdate();
  inline void set_has_stransacttime();
  inline void clear_has_stransacttime();
  inline void set_has_iexpirationdays();
  inline void clear_has_iexpirationdays();
  inline void set_has_iexpirationtype();
  inline void clear_has_iexpirationtype();
  inline void set_has_sexectype();
  inline void clear_has_sexectype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* smarketno_;
  ::std::string* srecordno_;
  ::std::string* sreportseat_;
  ::std::string* sstockcode_;
  double dentrustprice_;
  double dentrustamount_;
  ::std::string* sside_;
  ::std::string* stransactdate_;
  ::std::string* stransacttime_;
  ::google::protobuf::int32 iexpirationdays_;
  ::google::protobuf::int32 iexpirationtype_;
  ::std::string* sexectype_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1059* default_instance_;
};
// -------------------------------------------------------------------

class HQ1059s : public ::google::protobuf::Message {
 public:
  HQ1059s();
  virtual ~HQ1059s();

  HQ1059s(const HQ1059s& from);

  inline HQ1059s& operator=(const HQ1059s& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1059s& default_instance();

  void Swap(HQ1059s* other);

  // implements Message ----------------------------------------------

  HQ1059s* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1059s& from);
  void MergeFrom(const HQ1059s& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HQStockPackage.HQ1059 rHQ1059 = 1;
  inline int rhq1059_size() const;
  inline void clear_rhq1059();
  static const int kRHQ1059FieldNumber = 1;
  inline const ::HQStockPackage::HQ1059& rhq1059(int index) const;
  inline ::HQStockPackage::HQ1059* mutable_rhq1059(int index);
  inline ::HQStockPackage::HQ1059* add_rhq1059();
  inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1059 >&
      rhq1059() const;
  inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1059 >*
      mutable_rhq1059();

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1059s)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1059 > rhq1059_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1059s* default_instance_;
};
// -------------------------------------------------------------------

class HQ1060 : public ::google::protobuf::Message {
 public:
  HQ1060();
  virtual ~HQ1060();

  HQ1060(const HQ1060& from);

  inline HQ1060& operator=(const HQ1060& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1060& default_instance();

  void Swap(HQ1060* other);

  // implements Message ----------------------------------------------

  HQ1060* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1060& from);
  void MergeFrom(const HQ1060& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string sMarketNo = 1;
  inline bool has_smarketno() const;
  inline void clear_smarketno();
  static const int kSMarketNoFieldNumber = 1;
  inline const ::std::string& smarketno() const;
  inline void set_smarketno(const ::std::string& value);
  inline void set_smarketno(const char* value);
  inline void set_smarketno(const char* value, size_t size);
  inline ::std::string* mutable_smarketno();
  inline ::std::string* release_smarketno();
  inline void set_allocated_smarketno(::std::string* smarketno);

  // required string sStockCode = 2;
  inline bool has_sstockcode() const;
  inline void clear_sstockcode();
  static const int kSStockCodeFieldNumber = 2;
  inline const ::std::string& sstockcode() const;
  inline void set_sstockcode(const ::std::string& value);
  inline void set_sstockcode(const char* value);
  inline void set_sstockcode(const char* value, size_t size);
  inline ::std::string* mutable_sstockcode();
  inline ::std::string* release_sstockcode();
  inline void set_allocated_sstockcode(::std::string* sstockcode);

  // optional bytes sStockName = 3;
  inline bool has_sstockname() const;
  inline void clear_sstockname();
  static const int kSStockNameFieldNumber = 3;
  inline const ::std::string& sstockname() const;
  inline void set_sstockname(const ::std::string& value);
  inline void set_sstockname(const char* value);
  inline void set_sstockname(const void* value, size_t size);
  inline ::std::string* mutable_sstockname();
  inline ::std::string* release_sstockname();
  inline void set_allocated_sstockname(::std::string* sstockname);

  // optional string sTradingPhaseCode = 4;
  inline bool has_stradingphasecode() const;
  inline void clear_stradingphasecode();
  static const int kSTradingPhaseCodeFieldNumber = 4;
  inline const ::std::string& stradingphasecode() const;
  inline void set_stradingphasecode(const ::std::string& value);
  inline void set_stradingphasecode(const char* value);
  inline void set_stradingphasecode(const char* value, size_t size);
  inline ::std::string* mutable_stradingphasecode();
  inline ::std::string* release_stradingphasecode();
  inline void set_allocated_stradingphasecode(::std::string* stradingphasecode);

  // optional double dPrevClosePx = 5;
  inline bool has_dprevclosepx() const;
  inline void clear_dprevclosepx();
  static const int kDPrevClosePxFieldNumber = 5;
  inline double dprevclosepx() const;
  inline void set_dprevclosepx(double value);

  // optional double dNumTrades = 6;
  inline bool has_dnumtrades() const;
  inline void clear_dnumtrades();
  static const int kDNumTradesFieldNumber = 6;
  inline double dnumtrades() const;
  inline void set_dnumtrades(double value);

  // optional double dTotalVolumeTrade = 7;
  inline bool has_dtotalvolumetrade() const;
  inline void clear_dtotalvolumetrade();
  static const int kDTotalVolumeTradeFieldNumber = 7;
  inline double dtotalvolumetrade() const;
  inline void set_dtotalvolumetrade(double value);

  // optional double dTotalValueTrade = 8;
  inline bool has_dtotalvaluetrade() const;
  inline void clear_dtotalvaluetrade();
  static const int kDTotalValueTradeFieldNumber = 8;
  inline double dtotalvaluetrade() const;
  inline void set_dtotalvaluetrade(double value);

  // optional double dReferPrice = 9;
  inline bool has_dreferprice() const;
  inline void clear_dreferprice();
  static const int kDReferPriceFieldNumber = 9;
  inline double dreferprice() const;
  inline void set_dreferprice(double value);

  // optional double dBuyAmount = 10;
  inline bool has_dbuyamount() const;
  inline void clear_dbuyamount();
  static const int kDBuyAmountFieldNumber = 10;
  inline double dbuyamount() const;
  inline void set_dbuyamount(double value);

  // optional double dSaleAmount = 11;
  inline bool has_dsaleamount() const;
  inline void clear_dsaleamount();
  static const int kDSaleAmountFieldNumber = 11;
  inline double dsaleamount() const;
  inline void set_dsaleamount(double value);

  // optional string sTimeStamp = 12;
  inline bool has_stimestamp() const;
  inline void clear_stimestamp();
  static const int kSTimeStampFieldNumber = 12;
  inline const ::std::string& stimestamp() const;
  inline void set_stimestamp(const ::std::string& value);
  inline void set_stimestamp(const char* value);
  inline void set_stimestamp(const char* value, size_t size);
  inline ::std::string* mutable_stimestamp();
  inline ::std::string* release_stimestamp();
  inline void set_allocated_stimestamp(::std::string* stimestamp);

  // optional int32 iInitDate = 13;
  inline bool has_iinitdate() const;
  inline void clear_iinitdate();
  static const int kIInitDateFieldNumber = 13;
  inline ::google::protobuf::int32 iinitdate() const;
  inline void set_iinitdate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1060)
 private:
  inline void set_has_smarketno();
  inline void clear_has_smarketno();
  inline void set_has_sstockcode();
  inline void clear_has_sstockcode();
  inline void set_has_sstockname();
  inline void clear_has_sstockname();
  inline void set_has_stradingphasecode();
  inline void clear_has_stradingphasecode();
  inline void set_has_dprevclosepx();
  inline void clear_has_dprevclosepx();
  inline void set_has_dnumtrades();
  inline void clear_has_dnumtrades();
  inline void set_has_dtotalvolumetrade();
  inline void clear_has_dtotalvolumetrade();
  inline void set_has_dtotalvaluetrade();
  inline void clear_has_dtotalvaluetrade();
  inline void set_has_dreferprice();
  inline void clear_has_dreferprice();
  inline void set_has_dbuyamount();
  inline void clear_has_dbuyamount();
  inline void set_has_dsaleamount();
  inline void clear_has_dsaleamount();
  inline void set_has_stimestamp();
  inline void clear_has_stimestamp();
  inline void set_has_iinitdate();
  inline void clear_has_iinitdate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* smarketno_;
  ::std::string* sstockcode_;
  ::std::string* sstockname_;
  ::std::string* stradingphasecode_;
  double dprevclosepx_;
  double dnumtrades_;
  double dtotalvolumetrade_;
  double dtotalvaluetrade_;
  double dreferprice_;
  double dbuyamount_;
  double dsaleamount_;
  ::std::string* stimestamp_;
  ::google::protobuf::int32 iinitdate_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1060* default_instance_;
};
// -------------------------------------------------------------------

class HQ1060s : public ::google::protobuf::Message {
 public:
  HQ1060s();
  virtual ~HQ1060s();

  HQ1060s(const HQ1060s& from);

  inline HQ1060s& operator=(const HQ1060s& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1060s& default_instance();

  void Swap(HQ1060s* other);

  // implements Message ----------------------------------------------

  HQ1060s* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1060s& from);
  void MergeFrom(const HQ1060s& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HQStockPackage.HQ1060 rHQ1060 = 1;
  inline int rhq1060_size() const;
  inline void clear_rhq1060();
  static const int kRHQ1060FieldNumber = 1;
  inline const ::HQStockPackage::HQ1060& rhq1060(int index) const;
  inline ::HQStockPackage::HQ1060* mutable_rhq1060(int index);
  inline ::HQStockPackage::HQ1060* add_rhq1060();
  inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1060 >&
      rhq1060() const;
  inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1060 >*
      mutable_rhq1060();

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1060s)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1060 > rhq1060_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1060s* default_instance_;
};
// -------------------------------------------------------------------

class HQ1061 : public ::google::protobuf::Message {
 public:
  HQ1061();
  virtual ~HQ1061();

  HQ1061(const HQ1061& from);

  inline HQ1061& operator=(const HQ1061& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1061& default_instance();

  void Swap(HQ1061* other);

  // implements Message ----------------------------------------------

  HQ1061* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1061& from);
  void MergeFrom(const HQ1061& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string sMarketNo = 1;
  inline bool has_smarketno() const;
  inline void clear_smarketno();
  static const int kSMarketNoFieldNumber = 1;
  inline const ::std::string& smarketno() const;
  inline void set_smarketno(const ::std::string& value);
  inline void set_smarketno(const char* value);
  inline void set_smarketno(const char* value, size_t size);
  inline ::std::string* mutable_smarketno();
  inline ::std::string* release_smarketno();
  inline void set_allocated_smarketno(::std::string* smarketno);

  // required string sStockCode = 2;
  inline bool has_sstockcode() const;
  inline void clear_sstockcode();
  static const int kSStockCodeFieldNumber = 2;
  inline const ::std::string& sstockcode() const;
  inline void set_sstockcode(const ::std::string& value);
  inline void set_sstockcode(const char* value);
  inline void set_sstockcode(const char* value, size_t size);
  inline ::std::string* mutable_sstockcode();
  inline ::std::string* release_sstockcode();
  inline void set_allocated_sstockcode(::std::string* sstockcode);

  // optional bytes sStockName = 3;
  inline bool has_sstockname() const;
  inline void clear_sstockname();
  static const int kSStockNameFieldNumber = 3;
  inline const ::std::string& sstockname() const;
  inline void set_sstockname(const ::std::string& value);
  inline void set_sstockname(const char* value);
  inline void set_sstockname(const void* value, size_t size);
  inline ::std::string* mutable_sstockname();
  inline ::std::string* release_sstockname();
  inline void set_allocated_sstockname(::std::string* sstockname);

  // optional string sTradingPhaseCode = 4;
  inline bool has_stradingphasecode() const;
  inline void clear_stradingphasecode();
  static const int kSTradingPhaseCodeFieldNumber = 4;
  inline const ::std::string& stradingphasecode() const;
  inline void set_stradingphasecode(const ::std::string& value);
  inline void set_stradingphasecode(const char* value);
  inline void set_stradingphasecode(const char* value, size_t size);
  inline ::std::string* mutable_stradingphasecode();
  inline ::std::string* release_stradingphasecode();
  inline void set_allocated_stradingphasecode(::std::string* stradingphasecode);

  // optional double dPrevClosePx = 5;
  inline bool has_dprevclosepx() const;
  inline void clear_dprevclosepx();
  static const int kDPrevClosePxFieldNumber = 5;
  inline double dprevclosepx() const;
  inline void set_dprevclosepx(double value);

  // optional double dNumTrades = 6;
  inline bool has_dnumtrades() const;
  inline void clear_dnumtrades();
  static const int kDNumTradesFieldNumber = 6;
  inline double dnumtrades() const;
  inline void set_dnumtrades(double value);

  // optional double dTotalVolumeTrade = 7;
  inline bool has_dtotalvolumetrade() const;
  inline void clear_dtotalvolumetrade();
  static const int kDTotalVolumeTradeFieldNumber = 7;
  inline double dtotalvolumetrade() const;
  inline void set_dtotalvolumetrade(double value);

  // optional double dTotalValueTrade = 8;
  inline bool has_dtotalvaluetrade() const;
  inline void clear_dtotalvaluetrade();
  static const int kDTotalValueTradeFieldNumber = 8;
  inline double dtotalvaluetrade() const;
  inline void set_dtotalvaluetrade(double value);

  // optional double dReferPrice = 9;
  inline bool has_dreferprice() const;
  inline void clear_dreferprice();
  static const int kDReferPriceFieldNumber = 9;
  inline double dreferprice() const;
  inline void set_dreferprice(double value);

  // optional double dBuyAmount = 10;
  inline bool has_dbuyamount() const;
  inline void clear_dbuyamount();
  static const int kDBuyAmountFieldNumber = 10;
  inline double dbuyamount() const;
  inline void set_dbuyamount(double value);

  // optional double dSaleAmount = 11;
  inline bool has_dsaleamount() const;
  inline void clear_dsaleamount();
  static const int kDSaleAmountFieldNumber = 11;
  inline double dsaleamount() const;
  inline void set_dsaleamount(double value);

  // optional string sTimeStamp = 12;
  inline bool has_stimestamp() const;
  inline void clear_stimestamp();
  static const int kSTimeStampFieldNumber = 12;
  inline const ::std::string& stimestamp() const;
  inline void set_stimestamp(const ::std::string& value);
  inline void set_stimestamp(const char* value);
  inline void set_stimestamp(const char* value, size_t size);
  inline ::std::string* mutable_stimestamp();
  inline ::std::string* release_stimestamp();
  inline void set_allocated_stimestamp(::std::string* stimestamp);

  // optional int32 iInitDate = 13;
  inline bool has_iinitdate() const;
  inline void clear_iinitdate();
  static const int kIInitDateFieldNumber = 13;
  inline ::google::protobuf::int32 iinitdate() const;
  inline void set_iinitdate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1061)
 private:
  inline void set_has_smarketno();
  inline void clear_has_smarketno();
  inline void set_has_sstockcode();
  inline void clear_has_sstockcode();
  inline void set_has_sstockname();
  inline void clear_has_sstockname();
  inline void set_has_stradingphasecode();
  inline void clear_has_stradingphasecode();
  inline void set_has_dprevclosepx();
  inline void clear_has_dprevclosepx();
  inline void set_has_dnumtrades();
  inline void clear_has_dnumtrades();
  inline void set_has_dtotalvolumetrade();
  inline void clear_has_dtotalvolumetrade();
  inline void set_has_dtotalvaluetrade();
  inline void clear_has_dtotalvaluetrade();
  inline void set_has_dreferprice();
  inline void clear_has_dreferprice();
  inline void set_has_dbuyamount();
  inline void clear_has_dbuyamount();
  inline void set_has_dsaleamount();
  inline void clear_has_dsaleamount();
  inline void set_has_stimestamp();
  inline void clear_has_stimestamp();
  inline void set_has_iinitdate();
  inline void clear_has_iinitdate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* smarketno_;
  ::std::string* sstockcode_;
  ::std::string* sstockname_;
  ::std::string* stradingphasecode_;
  double dprevclosepx_;
  double dnumtrades_;
  double dtotalvolumetrade_;
  double dtotalvaluetrade_;
  double dreferprice_;
  double dbuyamount_;
  double dsaleamount_;
  ::std::string* stimestamp_;
  ::google::protobuf::int32 iinitdate_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1061* default_instance_;
};
// -------------------------------------------------------------------

class HQ1061s : public ::google::protobuf::Message {
 public:
  HQ1061s();
  virtual ~HQ1061s();

  HQ1061s(const HQ1061s& from);

  inline HQ1061s& operator=(const HQ1061s& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1061s& default_instance();

  void Swap(HQ1061s* other);

  // implements Message ----------------------------------------------

  HQ1061s* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1061s& from);
  void MergeFrom(const HQ1061s& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HQStockPackage.HQ1061 rHQ1061 = 1;
  inline int rhq1061_size() const;
  inline void clear_rhq1061();
  static const int kRHQ1061FieldNumber = 1;
  inline const ::HQStockPackage::HQ1061& rhq1061(int index) const;
  inline ::HQStockPackage::HQ1061* mutable_rhq1061(int index);
  inline ::HQStockPackage::HQ1061* add_rhq1061();
  inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1061 >&
      rhq1061() const;
  inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1061 >*
      mutable_rhq1061();

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1061s)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1061 > rhq1061_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1061s* default_instance_;
};
// -------------------------------------------------------------------

class HQ1069 : public ::google::protobuf::Message {
 public:
  HQ1069();
  virtual ~HQ1069();

  HQ1069(const HQ1069& from);

  inline HQ1069& operator=(const HQ1069& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1069& default_instance();

  void Swap(HQ1069* other);

  // implements Message ----------------------------------------------

  HQ1069* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1069& from);
  void MergeFrom(const HQ1069& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iInitDate = 1;
  inline bool has_iinitdate() const;
  inline void clear_iinitdate();
  static const int kIInitDateFieldNumber = 1;
  inline ::google::protobuf::int32 iinitdate() const;
  inline void set_iinitdate(::google::protobuf::int32 value);

  // optional int32 iMarginlegID = 2;
  inline bool has_imarginlegid() const;
  inline void clear_imarginlegid();
  static const int kIMarginlegIDFieldNumber = 2;
  inline ::google::protobuf::int32 imarginlegid() const;
  inline void set_imarginlegid(::google::protobuf::int32 value);

  // required string sMarketNo = 3;
  inline bool has_smarketno() const;
  inline void clear_smarketno();
  static const int kSMarketNoFieldNumber = 3;
  inline const ::std::string& smarketno() const;
  inline void set_smarketno(const ::std::string& value);
  inline void set_smarketno(const char* value);
  inline void set_smarketno(const char* value, size_t size);
  inline ::std::string* mutable_smarketno();
  inline ::std::string* release_smarketno();
  inline void set_allocated_smarketno(::std::string* smarketno);

  // optional string sEntrustBs = 4;
  inline bool has_sentrustbs() const;
  inline void clear_sentrustbs();
  static const int kSEntrustBsFieldNumber = 4;
  inline const ::std::string& sentrustbs() const;
  inline void set_sentrustbs(const ::std::string& value);
  inline void set_sentrustbs(const char* value);
  inline void set_sentrustbs(const char* value, size_t size);
  inline ::std::string* mutable_sentrustbs();
  inline ::std::string* release_sentrustbs();
  inline void set_allocated_sentrustbs(::std::string* sentrustbs);

  // optional string sKindType = 5;
  inline bool has_skindtype() const;
  inline void clear_skindtype();
  static const int kSKindTypeFieldNumber = 5;
  inline const ::std::string& skindtype() const;
  inline void set_skindtype(const ::std::string& value);
  inline void set_skindtype(const char* value);
  inline void set_skindtype(const char* value, size_t size);
  inline ::std::string* mutable_skindtype();
  inline ::std::string* release_skindtype();
  inline void set_allocated_skindtype(::std::string* skindtype);

  // optional string sRuleType = 6;
  inline bool has_sruletype() const;
  inline void clear_sruletype();
  static const int kSRuleTypeFieldNumber = 6;
  inline const ::std::string& sruletype() const;
  inline void set_sruletype(const ::std::string& value);
  inline void set_sruletype(const char* value);
  inline void set_sruletype(const char* value, size_t size);
  inline ::std::string* mutable_sruletype();
  inline ::std::string* release_sruletype();
  inline void set_allocated_sruletype(::std::string* sruletype);

  // required string sStockCode = 7;
  inline bool has_sstockcode() const;
  inline void clear_sstockcode();
  static const int kSStockCodeFieldNumber = 7;
  inline const ::std::string& sstockcode() const;
  inline void set_sstockcode(const ::std::string& value);
  inline void set_sstockcode(const char* value);
  inline void set_sstockcode(const char* value, size_t size);
  inline ::std::string* mutable_sstockcode();
  inline ::std::string* release_sstockcode();
  inline void set_allocated_sstockcode(::std::string* sstockcode);

  // optional string sFirstCode = 8;
  inline bool has_sfirstcode() const;
  inline void clear_sfirstcode();
  static const int kSFirstCodeFieldNumber = 8;
  inline const ::std::string& sfirstcode() const;
  inline void set_sfirstcode(const ::std::string& value);
  inline void set_sfirstcode(const char* value);
  inline void set_sfirstcode(const char* value, size_t size);
  inline ::std::string* mutable_sfirstcode();
  inline ::std::string* release_sfirstcode();
  inline void set_allocated_sfirstcode(::std::string* sfirstcode);

  // optional string sFirstBs = 9;
  inline bool has_sfirstbs() const;
  inline void clear_sfirstbs();
  static const int kSFirstBsFieldNumber = 9;
  inline const ::std::string& sfirstbs() const;
  inline void set_sfirstbs(const ::std::string& value);
  inline void set_sfirstbs(const char* value);
  inline void set_sfirstbs(const char* value, size_t size);
  inline ::std::string* mutable_sfirstbs();
  inline ::std::string* release_sfirstbs();
  inline void set_allocated_sfirstbs(::std::string* sfirstbs);

  // optional int32 iFirstRation = 10;
  inline bool has_ifirstration() const;
  inline void clear_ifirstration();
  static const int kIFirstRationFieldNumber = 10;
  inline ::google::protobuf::int32 ifirstration() const;
  inline void set_ifirstration(::google::protobuf::int32 value);

  // optional string sSecondCode = 11;
  inline bool has_ssecondcode() const;
  inline void clear_ssecondcode();
  static const int kSSecondCodeFieldNumber = 11;
  inline const ::std::string& ssecondcode() const;
  inline void set_ssecondcode(const ::std::string& value);
  inline void set_ssecondcode(const char* value);
  inline void set_ssecondcode(const char* value, size_t size);
  inline ::std::string* mutable_ssecondcode();
  inline ::std::string* release_ssecondcode();
  inline void set_allocated_ssecondcode(::std::string* ssecondcode);

  // optional string sSecondBs = 12;
  inline bool has_ssecondbs() const;
  inline void clear_ssecondbs();
  static const int kSSecondBsFieldNumber = 12;
  inline const ::std::string& ssecondbs() const;
  inline void set_ssecondbs(const ::std::string& value);
  inline void set_ssecondbs(const char* value);
  inline void set_ssecondbs(const char* value, size_t size);
  inline ::std::string* mutable_ssecondbs();
  inline ::std::string* release_ssecondbs();
  inline void set_allocated_ssecondbs(::std::string* ssecondbs);

  // optional int32 iSecondRation = 13;
  inline bool has_isecondration() const;
  inline void clear_isecondration();
  static const int kISecondRationFieldNumber = 13;
  inline ::google::protobuf::int32 isecondration() const;
  inline void set_isecondration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1069)
 private:
  inline void set_has_iinitdate();
  inline void clear_has_iinitdate();
  inline void set_has_imarginlegid();
  inline void clear_has_imarginlegid();
  inline void set_has_smarketno();
  inline void clear_has_smarketno();
  inline void set_has_sentrustbs();
  inline void clear_has_sentrustbs();
  inline void set_has_skindtype();
  inline void clear_has_skindtype();
  inline void set_has_sruletype();
  inline void clear_has_sruletype();
  inline void set_has_sstockcode();
  inline void clear_has_sstockcode();
  inline void set_has_sfirstcode();
  inline void clear_has_sfirstcode();
  inline void set_has_sfirstbs();
  inline void clear_has_sfirstbs();
  inline void set_has_ifirstration();
  inline void clear_has_ifirstration();
  inline void set_has_ssecondcode();
  inline void clear_has_ssecondcode();
  inline void set_has_ssecondbs();
  inline void clear_has_ssecondbs();
  inline void set_has_isecondration();
  inline void clear_has_isecondration();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 iinitdate_;
  ::google::protobuf::int32 imarginlegid_;
  ::std::string* smarketno_;
  ::std::string* sentrustbs_;
  ::std::string* skindtype_;
  ::std::string* sruletype_;
  ::std::string* sstockcode_;
  ::std::string* sfirstcode_;
  ::std::string* sfirstbs_;
  ::std::string* ssecondcode_;
  ::google::protobuf::int32 ifirstration_;
  ::google::protobuf::int32 isecondration_;
  ::std::string* ssecondbs_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1069* default_instance_;
};
// -------------------------------------------------------------------

class HQ1069s : public ::google::protobuf::Message {
 public:
  HQ1069s();
  virtual ~HQ1069s();

  HQ1069s(const HQ1069s& from);

  inline HQ1069s& operator=(const HQ1069s& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1069s& default_instance();

  void Swap(HQ1069s* other);

  // implements Message ----------------------------------------------

  HQ1069s* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1069s& from);
  void MergeFrom(const HQ1069s& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HQStockPackage.HQ1069 rHQ1069 = 1;
  inline int rhq1069_size() const;
  inline void clear_rhq1069();
  static const int kRHQ1069FieldNumber = 1;
  inline const ::HQStockPackage::HQ1069& rhq1069(int index) const;
  inline ::HQStockPackage::HQ1069* mutable_rhq1069(int index);
  inline ::HQStockPackage::HQ1069* add_rhq1069();
  inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1069 >&
      rhq1069() const;
  inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1069 >*
      mutable_rhq1069();

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1069s)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1069 > rhq1069_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1069s* default_instance_;
};
// -------------------------------------------------------------------

class HQ1070 : public ::google::protobuf::Message {
 public:
  HQ1070();
  virtual ~HQ1070();

  HQ1070(const HQ1070& from);

  inline HQ1070& operator=(const HQ1070& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1070& default_instance();

  void Swap(HQ1070* other);

  // implements Message ----------------------------------------------

  HQ1070* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1070& from);
  void MergeFrom(const HQ1070& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iInitDate = 1;
  inline bool has_iinitdate() const;
  inline void clear_iinitdate();
  static const int kIInitDateFieldNumber = 1;
  inline ::google::protobuf::int32 iinitdate() const;
  inline void set_iinitdate(::google::protobuf::int32 value);

  // required string sMarketNo = 2;
  inline bool has_smarketno() const;
  inline void clear_smarketno();
  static const int kSMarketNoFieldNumber = 2;
  inline const ::std::string& smarketno() const;
  inline void set_smarketno(const ::std::string& value);
  inline void set_smarketno(const char* value);
  inline void set_smarketno(const char* value, size_t size);
  inline ::std::string* mutable_smarketno();
  inline ::std::string* release_smarketno();
  inline void set_allocated_smarketno(::std::string* smarketno);

  // required string sStockCode = 3;
  inline bool has_sstockcode() const;
  inline void clear_sstockcode();
  static const int kSStockCodeFieldNumber = 3;
  inline const ::std::string& sstockcode() const;
  inline void set_sstockcode(const ::std::string& value);
  inline void set_sstockcode(const char* value);
  inline void set_sstockcode(const char* value, size_t size);
  inline ::std::string* mutable_sstockcode();
  inline ::std::string* release_sstockcode();
  inline void set_allocated_sstockcode(::std::string* sstockcode);

  // optional bytes sStockName = 4;
  inline bool has_sstockname() const;
  inline void clear_sstockname();
  static const int kSStockNameFieldNumber = 4;
  inline const ::std::string& sstockname() const;
  inline void set_sstockname(const ::std::string& value);
  inline void set_sstockname(const char* value);
  inline void set_sstockname(const void* value, size_t size);
  inline ::std::string* mutable_sstockname();
  inline ::std::string* release_sstockname();
  inline void set_allocated_sstockname(::std::string* sstockname);

  // optional string sBuyOrderNo = 5;
  inline bool has_sbuyorderno() const;
  inline void clear_sbuyorderno();
  static const int kSBuyOrderNoFieldNumber = 5;
  inline const ::std::string& sbuyorderno() const;
  inline void set_sbuyorderno(const ::std::string& value);
  inline void set_sbuyorderno(const char* value);
  inline void set_sbuyorderno(const char* value, size_t size);
  inline ::std::string* mutable_sbuyorderno();
  inline ::std::string* release_sbuyorderno();
  inline void set_allocated_sbuyorderno(::std::string* sbuyorderno);

  // optional int32 iBuyQuoteTime = 6;
  inline bool has_ibuyquotetime() const;
  inline void clear_ibuyquotetime();
  static const int kIBuyQuoteTimeFieldNumber = 6;
  inline ::google::protobuf::int32 ibuyquotetime() const;
  inline void set_ibuyquotetime(::google::protobuf::int32 value);

  // optional bytes sBuyQuoter = 7;
  inline bool has_sbuyquoter() const;
  inline void clear_sbuyquoter();
  static const int kSBuyQuoterFieldNumber = 7;
  inline const ::std::string& sbuyquoter() const;
  inline void set_sbuyquoter(const ::std::string& value);
  inline void set_sbuyquoter(const char* value);
  inline void set_sbuyquoter(const void* value, size_t size);
  inline ::std::string* mutable_sbuyquoter();
  inline ::std::string* release_sbuyquoter();
  inline void set_allocated_sbuyquoter(::std::string* sbuyquoter);

  // optional double dBuyNetPrice = 8;
  inline bool has_dbuynetprice() const;
  inline void clear_dbuynetprice();
  static const int kDBuyNetPriceFieldNumber = 8;
  inline double dbuynetprice() const;
  inline void set_dbuynetprice(double value);

  // optional double dBuyQty = 9;
  inline bool has_dbuyqty() const;
  inline void clear_dbuyqty();
  static const int kDBuyQtyFieldNumber = 9;
  inline double dbuyqty() const;
  inline void set_dbuyqty(double value);

  // optional double dBuyAllPrice = 10;
  inline bool has_dbuyallprice() const;
  inline void clear_dbuyallprice();
  static const int kDBuyAllPriceFieldNumber = 10;
  inline double dbuyallprice() const;
  inline void set_dbuyallprice(double value);

  // optional double dBuyProfitRatio = 11;
  inline bool has_dbuyprofitratio() const;
  inline void clear_dbuyprofitratio();
  static const int kDBuyProfitRatioFieldNumber = 11;
  inline double dbuyprofitratio() const;
  inline void set_dbuyprofitratio(double value);

  // optional string sSaleOrderNo = 12;
  inline bool has_ssaleorderno() const;
  inline void clear_ssaleorderno();
  static const int kSSaleOrderNoFieldNumber = 12;
  inline const ::std::string& ssaleorderno() const;
  inline void set_ssaleorderno(const ::std::string& value);
  inline void set_ssaleorderno(const char* value);
  inline void set_ssaleorderno(const char* value, size_t size);
  inline ::std::string* mutable_ssaleorderno();
  inline ::std::string* release_ssaleorderno();
  inline void set_allocated_ssaleorderno(::std::string* ssaleorderno);

  // optional int32 iSaleQuoteTime = 13;
  inline bool has_isalequotetime() const;
  inline void clear_isalequotetime();
  static const int kISaleQuoteTimeFieldNumber = 13;
  inline ::google::protobuf::int32 isalequotetime() const;
  inline void set_isalequotetime(::google::protobuf::int32 value);

  // optional bytes sSaleQuoter = 14;
  inline bool has_ssalequoter() const;
  inline void clear_ssalequoter();
  static const int kSSaleQuoterFieldNumber = 14;
  inline const ::std::string& ssalequoter() const;
  inline void set_ssalequoter(const ::std::string& value);
  inline void set_ssalequoter(const char* value);
  inline void set_ssalequoter(const void* value, size_t size);
  inline ::std::string* mutable_ssalequoter();
  inline ::std::string* release_ssalequoter();
  inline void set_allocated_ssalequoter(::std::string* ssalequoter);

  // optional double dSaleNetPrice = 15;
  inline bool has_dsalenetprice() const;
  inline void clear_dsalenetprice();
  static const int kDSaleNetPriceFieldNumber = 15;
  inline double dsalenetprice() const;
  inline void set_dsalenetprice(double value);

  // optional double dSaleQty = 16;
  inline bool has_dsaleqty() const;
  inline void clear_dsaleqty();
  static const int kDSaleQtyFieldNumber = 16;
  inline double dsaleqty() const;
  inline void set_dsaleqty(double value);

  // optional double dSaleAllPrice = 17;
  inline bool has_dsaleallprice() const;
  inline void clear_dsaleallprice();
  static const int kDSaleAllPriceFieldNumber = 17;
  inline double dsaleallprice() const;
  inline void set_dsaleallprice(double value);

  // optional double dSaleProfitRatio = 18;
  inline bool has_dsaleprofitratio() const;
  inline void clear_dsaleprofitratio();
  static const int kDSaleProfitRatioFieldNumber = 18;
  inline double dsaleprofitratio() const;
  inline void set_dsaleprofitratio(double value);

  // optional double dAccruedInterest = 19;
  inline bool has_daccruedinterest() const;
  inline void clear_daccruedinterest();
  static const int kDAccruedInterestFieldNumber = 19;
  inline double daccruedinterest() const;
  inline void set_daccruedinterest(double value);

  // optional string sRecordStatus = 20;
  inline bool has_srecordstatus() const;
  inline void clear_srecordstatus();
  static const int kSRecordStatusFieldNumber = 20;
  inline const ::std::string& srecordstatus() const;
  inline void set_srecordstatus(const ::std::string& value);
  inline void set_srecordstatus(const char* value);
  inline void set_srecordstatus(const char* value, size_t size);
  inline ::std::string* mutable_srecordstatus();
  inline ::std::string* release_srecordstatus();
  inline void set_allocated_srecordstatus(::std::string* srecordstatus);

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1070)
 private:
  inline void set_has_iinitdate();
  inline void clear_has_iinitdate();
  inline void set_has_smarketno();
  inline void clear_has_smarketno();
  inline void set_has_sstockcode();
  inline void clear_has_sstockcode();
  inline void set_has_sstockname();
  inline void clear_has_sstockname();
  inline void set_has_sbuyorderno();
  inline void clear_has_sbuyorderno();
  inline void set_has_ibuyquotetime();
  inline void clear_has_ibuyquotetime();
  inline void set_has_sbuyquoter();
  inline void clear_has_sbuyquoter();
  inline void set_has_dbuynetprice();
  inline void clear_has_dbuynetprice();
  inline void set_has_dbuyqty();
  inline void clear_has_dbuyqty();
  inline void set_has_dbuyallprice();
  inline void clear_has_dbuyallprice();
  inline void set_has_dbuyprofitratio();
  inline void clear_has_dbuyprofitratio();
  inline void set_has_ssaleorderno();
  inline void clear_has_ssaleorderno();
  inline void set_has_isalequotetime();
  inline void clear_has_isalequotetime();
  inline void set_has_ssalequoter();
  inline void clear_has_ssalequoter();
  inline void set_has_dsalenetprice();
  inline void clear_has_dsalenetprice();
  inline void set_has_dsaleqty();
  inline void clear_has_dsaleqty();
  inline void set_has_dsaleallprice();
  inline void clear_has_dsaleallprice();
  inline void set_has_dsaleprofitratio();
  inline void clear_has_dsaleprofitratio();
  inline void set_has_daccruedinterest();
  inline void clear_has_daccruedinterest();
  inline void set_has_srecordstatus();
  inline void clear_has_srecordstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* smarketno_;
  ::std::string* sstockcode_;
  ::google::protobuf::int32 iinitdate_;
  ::google::protobuf::int32 ibuyquotetime_;
  ::std::string* sstockname_;
  ::std::string* sbuyorderno_;
  ::std::string* sbuyquoter_;
  double dbuynetprice_;
  double dbuyqty_;
  double dbuyallprice_;
  double dbuyprofitratio_;
  ::std::string* ssaleorderno_;
  ::std::string* ssalequoter_;
  double dsalenetprice_;
  double dsaleqty_;
  double dsaleallprice_;
  double dsaleprofitratio_;
  double daccruedinterest_;
  ::std::string* srecordstatus_;
  ::google::protobuf::int32 isalequotetime_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1070* default_instance_;
};
// -------------------------------------------------------------------

class HQ1070s : public ::google::protobuf::Message {
 public:
  HQ1070s();
  virtual ~HQ1070s();

  HQ1070s(const HQ1070s& from);

  inline HQ1070s& operator=(const HQ1070s& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1070s& default_instance();

  void Swap(HQ1070s* other);

  // implements Message ----------------------------------------------

  HQ1070s* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1070s& from);
  void MergeFrom(const HQ1070s& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HQStockPackage.HQ1070 rHQ1070 = 1;
  inline int rhq1070_size() const;
  inline void clear_rhq1070();
  static const int kRHQ1070FieldNumber = 1;
  inline const ::HQStockPackage::HQ1070& rhq1070(int index) const;
  inline ::HQStockPackage::HQ1070* mutable_rhq1070(int index);
  inline ::HQStockPackage::HQ1070* add_rhq1070();
  inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1070 >&
      rhq1070() const;
  inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1070 >*
      mutable_rhq1070();

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1070s)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1070 > rhq1070_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1070s* default_instance_;
};
// -------------------------------------------------------------------

class HQ1071 : public ::google::protobuf::Message {
 public:
  HQ1071();
  virtual ~HQ1071();

  HQ1071(const HQ1071& from);

  inline HQ1071& operator=(const HQ1071& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1071& default_instance();

  void Swap(HQ1071* other);

  // implements Message ----------------------------------------------

  HQ1071* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1071& from);
  void MergeFrom(const HQ1071& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iInitDate = 1;
  inline bool has_iinitdate() const;
  inline void clear_iinitdate();
  static const int kIInitDateFieldNumber = 1;
  inline ::google::protobuf::int32 iinitdate() const;
  inline void set_iinitdate(::google::protobuf::int32 value);

  // required string sMarketNo = 2;
  inline bool has_smarketno() const;
  inline void clear_smarketno();
  static const int kSMarketNoFieldNumber = 2;
  inline const ::std::string& smarketno() const;
  inline void set_smarketno(const ::std::string& value);
  inline void set_smarketno(const char* value);
  inline void set_smarketno(const char* value, size_t size);
  inline ::std::string* mutable_smarketno();
  inline ::std::string* release_smarketno();
  inline void set_allocated_smarketno(::std::string* smarketno);

  // required string sStockCode = 3;
  inline bool has_sstockcode() const;
  inline void clear_sstockcode();
  static const int kSStockCodeFieldNumber = 3;
  inline const ::std::string& sstockcode() const;
  inline void set_sstockcode(const ::std::string& value);
  inline void set_sstockcode(const char* value);
  inline void set_sstockcode(const char* value, size_t size);
  inline ::std::string* mutable_sstockcode();
  inline ::std::string* release_sstockcode();
  inline void set_allocated_sstockcode(::std::string* sstockcode);

  // optional bytes sStockName = 4;
  inline bool has_sstockname() const;
  inline void clear_sstockname();
  static const int kSStockNameFieldNumber = 4;
  inline const ::std::string& sstockname() const;
  inline void set_sstockname(const ::std::string& value);
  inline void set_sstockname(const char* value);
  inline void set_sstockname(const void* value, size_t size);
  inline ::std::string* mutable_sstockname();
  inline ::std::string* release_sstockname();
  inline void set_allocated_sstockname(::std::string* sstockname);

  // optional int32 iTimeStamp = 5;
  inline bool has_itimestamp() const;
  inline void clear_itimestamp();
  static const int kITimeStampFieldNumber = 5;
  inline ::google::protobuf::int32 itimestamp() const;
  inline void set_itimestamp(::google::protobuf::int32 value);

  // optional double dYesterdayClosePrice = 6;
  inline bool has_dyesterdaycloseprice() const;
  inline void clear_dyesterdaycloseprice();
  static const int kDYesterdayClosePriceFieldNumber = 6;
  inline double dyesterdaycloseprice() const;
  inline void set_dyesterdaycloseprice(double value);

  // optional double dYesterdayWeightedAvgPrice = 7;
  inline bool has_dyesterdayweightedavgprice() const;
  inline void clear_dyesterdayweightedavgprice();
  static const int kDYesterdayWeightedAvgPriceFieldNumber = 7;
  inline double dyesterdayweightedavgprice() const;
  inline void set_dyesterdayweightedavgprice(double value);

  // optional double dOpenPrice = 8;
  inline bool has_dopenprice() const;
  inline void clear_dopenprice();
  static const int kDOpenPriceFieldNumber = 8;
  inline double dopenprice() const;
  inline void set_dopenprice(double value);

  // optional double dHighPrice = 9;
  inline bool has_dhighprice() const;
  inline void clear_dhighprice();
  static const int kDHighPriceFieldNumber = 9;
  inline double dhighprice() const;
  inline void set_dhighprice(double value);

  // optional double dLowPrice = 10;
  inline bool has_dlowprice() const;
  inline void clear_dlowprice();
  static const int kDLowPriceFieldNumber = 10;
  inline double dlowprice() const;
  inline void set_dlowprice(double value);

  // optional double dLastPrice = 11;
  inline bool has_dlastprice() const;
  inline void clear_dlastprice();
  static const int kDLastPriceFieldNumber = 11;
  inline double dlastprice() const;
  inline void set_dlastprice(double value);

  // optional double dWeightedAvgPrice = 12;
  inline bool has_dweightedavgprice() const;
  inline void clear_dweightedavgprice();
  static const int kDWeightedAvgPriceFieldNumber = 12;
  inline double dweightedavgprice() const;
  inline void set_dweightedavgprice(double value);

  // optional double dTotalQty = 13;
  inline bool has_dtotalqty() const;
  inline void clear_dtotalqty();
  static const int kDTotalQtyFieldNumber = 13;
  inline double dtotalqty() const;
  inline void set_dtotalqty(double value);

  // optional double dTotalAmount = 14;
  inline bool has_dtotalamount() const;
  inline void clear_dtotalamount();
  static const int kDTotalAmountFieldNumber = 14;
  inline double dtotalamount() const;
  inline void set_dtotalamount(double value);

  // optional double dTotalNum = 15;
  inline bool has_dtotalnum() const;
  inline void clear_dtotalnum();
  static const int kDTotalNumFieldNumber = 15;
  inline double dtotalnum() const;
  inline void set_dtotalnum(double value);

  // optional double dYesterdayCloseYield = 16;
  inline bool has_dyesterdaycloseyield() const;
  inline void clear_dyesterdaycloseyield();
  static const int kDYesterdayCloseYieldFieldNumber = 16;
  inline double dyesterdaycloseyield() const;
  inline void set_dyesterdaycloseyield(double value);

  // optional double dYesterdayWeightedAvgYield = 17;
  inline bool has_dyesterdayweightedavgyield() const;
  inline void clear_dyesterdayweightedavgyield();
  static const int kDYesterdayWeightedAvgYieldFieldNumber = 17;
  inline double dyesterdayweightedavgyield() const;
  inline void set_dyesterdayweightedavgyield(double value);

  // optional double dOpenYield = 18;
  inline bool has_dopenyield() const;
  inline void clear_dopenyield();
  static const int kDOpenYieldFieldNumber = 18;
  inline double dopenyield() const;
  inline void set_dopenyield(double value);

  // optional double dHighYield = 19;
  inline bool has_dhighyield() const;
  inline void clear_dhighyield();
  static const int kDHighYieldFieldNumber = 19;
  inline double dhighyield() const;
  inline void set_dhighyield(double value);

  // optional double dLowYield = 20;
  inline bool has_dlowyield() const;
  inline void clear_dlowyield();
  static const int kDLowYieldFieldNumber = 20;
  inline double dlowyield() const;
  inline void set_dlowyield(double value);

  // optional double dLastYield = 21;
  inline bool has_dlastyield() const;
  inline void clear_dlastyield();
  static const int kDLastYieldFieldNumber = 21;
  inline double dlastyield() const;
  inline void set_dlastyield(double value);

  // optional double dWeightedAvgYield = 22;
  inline bool has_dweightedavgyield() const;
  inline void clear_dweightedavgyield();
  static const int kDWeightedAvgYieldFieldNumber = 22;
  inline double dweightedavgyield() const;
  inline void set_dweightedavgyield(double value);

  // optional string sCodeType = 23;
  inline bool has_scodetype() const;
  inline void clear_scodetype();
  static const int kSCodeTypeFieldNumber = 23;
  inline const ::std::string& scodetype() const;
  inline void set_scodetype(const ::std::string& value);
  inline void set_scodetype(const char* value);
  inline void set_scodetype(const char* value, size_t size);
  inline ::std::string* mutable_scodetype();
  inline ::std::string* release_scodetype();
  inline void set_allocated_scodetype(::std::string* scodetype);

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1071)
 private:
  inline void set_has_iinitdate();
  inline void clear_has_iinitdate();
  inline void set_has_smarketno();
  inline void clear_has_smarketno();
  inline void set_has_sstockcode();
  inline void clear_has_sstockcode();
  inline void set_has_sstockname();
  inline void clear_has_sstockname();
  inline void set_has_itimestamp();
  inline void clear_has_itimestamp();
  inline void set_has_dyesterdaycloseprice();
  inline void clear_has_dyesterdaycloseprice();
  inline void set_has_dyesterdayweightedavgprice();
  inline void clear_has_dyesterdayweightedavgprice();
  inline void set_has_dopenprice();
  inline void clear_has_dopenprice();
  inline void set_has_dhighprice();
  inline void clear_has_dhighprice();
  inline void set_has_dlowprice();
  inline void clear_has_dlowprice();
  inline void set_has_dlastprice();
  inline void clear_has_dlastprice();
  inline void set_has_dweightedavgprice();
  inline void clear_has_dweightedavgprice();
  inline void set_has_dtotalqty();
  inline void clear_has_dtotalqty();
  inline void set_has_dtotalamount();
  inline void clear_has_dtotalamount();
  inline void set_has_dtotalnum();
  inline void clear_has_dtotalnum();
  inline void set_has_dyesterdaycloseyield();
  inline void clear_has_dyesterdaycloseyield();
  inline void set_has_dyesterdayweightedavgyield();
  inline void clear_has_dyesterdayweightedavgyield();
  inline void set_has_dopenyield();
  inline void clear_has_dopenyield();
  inline void set_has_dhighyield();
  inline void clear_has_dhighyield();
  inline void set_has_dlowyield();
  inline void clear_has_dlowyield();
  inline void set_has_dlastyield();
  inline void clear_has_dlastyield();
  inline void set_has_dweightedavgyield();
  inline void clear_has_dweightedavgyield();
  inline void set_has_scodetype();
  inline void clear_has_scodetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* smarketno_;
  ::std::string* sstockcode_;
  ::google::protobuf::int32 iinitdate_;
  ::google::protobuf::int32 itimestamp_;
  ::std::string* sstockname_;
  double dyesterdaycloseprice_;
  double dyesterdayweightedavgprice_;
  double dopenprice_;
  double dhighprice_;
  double dlowprice_;
  double dlastprice_;
  double dweightedavgprice_;
  double dtotalqty_;
  double dtotalamount_;
  double dtotalnum_;
  double dyesterdaycloseyield_;
  double dyesterdayweightedavgyield_;
  double dopenyield_;
  double dhighyield_;
  double dlowyield_;
  double dlastyield_;
  double dweightedavgyield_;
  ::std::string* scodetype_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1071* default_instance_;
};
// -------------------------------------------------------------------

class HQ1071s : public ::google::protobuf::Message {
 public:
  HQ1071s();
  virtual ~HQ1071s();

  HQ1071s(const HQ1071s& from);

  inline HQ1071s& operator=(const HQ1071s& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HQ1071s& default_instance();

  void Swap(HQ1071s* other);

  // implements Message ----------------------------------------------

  HQ1071s* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HQ1071s& from);
  void MergeFrom(const HQ1071s& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HQStockPackage.HQ1071 rHQ1071 = 1;
  inline int rhq1071_size() const;
  inline void clear_rhq1071();
  static const int kRHQ1071FieldNumber = 1;
  inline const ::HQStockPackage::HQ1071& rhq1071(int index) const;
  inline ::HQStockPackage::HQ1071* mutable_rhq1071(int index);
  inline ::HQStockPackage::HQ1071* add_rhq1071();
  inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1071 >&
      rhq1071() const;
  inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1071 >*
      mutable_rhq1071();

  // @@protoc_insertion_point(class_scope:HQStockPackage.HQ1071s)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1071 > rhq1071_;
  friend void  protobuf_AddDesc_HQStock_2eproto();
  friend void protobuf_AssignDesc_HQStock_2eproto();
  friend void protobuf_ShutdownFile_HQStock_2eproto();

  void InitAsDefaultInstance();
  static HQ1071s* default_instance_;
};
// ===================================================================


// ===================================================================

// HQ1008

// required string sMarketNo = 1;
inline bool HQ1008::has_smarketno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HQ1008::set_has_smarketno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HQ1008::clear_has_smarketno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HQ1008::clear_smarketno() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_->clear();
  }
  clear_has_smarketno();
}
inline const ::std::string& HQ1008::smarketno() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.sMarketNo)
  return *smarketno_;
}
inline void HQ1008::set_smarketno(const ::std::string& value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.sMarketNo)
}
inline void HQ1008::set_smarketno(const char* value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1008.sMarketNo)
}
inline void HQ1008::set_smarketno(const char* value, size_t size) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1008.sMarketNo)
}
inline ::std::string* HQ1008::mutable_smarketno() {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1008.sMarketNo)
  return smarketno_;
}
inline ::std::string* HQ1008::release_smarketno() {
  clear_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = smarketno_;
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1008::set_allocated_smarketno(::std::string* smarketno) {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (smarketno) {
    set_has_smarketno();
    smarketno_ = smarketno;
  } else {
    clear_has_smarketno();
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1008.sMarketNo)
}

// required string sStockCode = 2;
inline bool HQ1008::has_sstockcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HQ1008::set_has_sstockcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HQ1008::clear_has_sstockcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HQ1008::clear_sstockcode() {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_->clear();
  }
  clear_has_sstockcode();
}
inline const ::std::string& HQ1008::sstockcode() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.sStockCode)
  return *sstockcode_;
}
inline void HQ1008::set_sstockcode(const ::std::string& value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.sStockCode)
}
inline void HQ1008::set_sstockcode(const char* value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1008.sStockCode)
}
inline void HQ1008::set_sstockcode(const char* value, size_t size) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1008.sStockCode)
}
inline ::std::string* HQ1008::mutable_sstockcode() {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1008.sStockCode)
  return sstockcode_;
}
inline ::std::string* HQ1008::release_sstockcode() {
  clear_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstockcode_;
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1008::set_allocated_sstockcode(::std::string* sstockcode) {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sstockcode) {
    set_has_sstockcode();
    sstockcode_ = sstockcode;
  } else {
    clear_has_sstockcode();
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1008.sStockCode)
}

// optional string sAbsoluteTimeStamp = 3;
inline bool HQ1008::has_sabsolutetimestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HQ1008::set_has_sabsolutetimestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HQ1008::clear_has_sabsolutetimestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HQ1008::clear_sabsolutetimestamp() {
  if (sabsolutetimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sabsolutetimestamp_->clear();
  }
  clear_has_sabsolutetimestamp();
}
inline const ::std::string& HQ1008::sabsolutetimestamp() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.sAbsoluteTimeStamp)
  return *sabsolutetimestamp_;
}
inline void HQ1008::set_sabsolutetimestamp(const ::std::string& value) {
  set_has_sabsolutetimestamp();
  if (sabsolutetimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sabsolutetimestamp_ = new ::std::string;
  }
  sabsolutetimestamp_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.sAbsoluteTimeStamp)
}
inline void HQ1008::set_sabsolutetimestamp(const char* value) {
  set_has_sabsolutetimestamp();
  if (sabsolutetimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sabsolutetimestamp_ = new ::std::string;
  }
  sabsolutetimestamp_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1008.sAbsoluteTimeStamp)
}
inline void HQ1008::set_sabsolutetimestamp(const char* value, size_t size) {
  set_has_sabsolutetimestamp();
  if (sabsolutetimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sabsolutetimestamp_ = new ::std::string;
  }
  sabsolutetimestamp_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1008.sAbsoluteTimeStamp)
}
inline ::std::string* HQ1008::mutable_sabsolutetimestamp() {
  set_has_sabsolutetimestamp();
  if (sabsolutetimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sabsolutetimestamp_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1008.sAbsoluteTimeStamp)
  return sabsolutetimestamp_;
}
inline ::std::string* HQ1008::release_sabsolutetimestamp() {
  clear_has_sabsolutetimestamp();
  if (sabsolutetimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sabsolutetimestamp_;
    sabsolutetimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1008::set_allocated_sabsolutetimestamp(::std::string* sabsolutetimestamp) {
  if (sabsolutetimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sabsolutetimestamp_;
  }
  if (sabsolutetimestamp) {
    set_has_sabsolutetimestamp();
    sabsolutetimestamp_ = sabsolutetimestamp;
  } else {
    clear_has_sabsolutetimestamp();
    sabsolutetimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1008.sAbsoluteTimeStamp)
}

// optional double dPreclosePrice = 4;
inline bool HQ1008::has_dprecloseprice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HQ1008::set_has_dprecloseprice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HQ1008::clear_has_dprecloseprice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HQ1008::clear_dprecloseprice() {
  dprecloseprice_ = 0;
  clear_has_dprecloseprice();
}
inline double HQ1008::dprecloseprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dPreclosePrice)
  return dprecloseprice_;
}
inline void HQ1008::set_dprecloseprice(double value) {
  set_has_dprecloseprice();
  dprecloseprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dPreclosePrice)
}

// optional double dOpenPrice = 5;
inline bool HQ1008::has_dopenprice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HQ1008::set_has_dopenprice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HQ1008::clear_has_dopenprice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HQ1008::clear_dopenprice() {
  dopenprice_ = 0;
  clear_has_dopenprice();
}
inline double HQ1008::dopenprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dOpenPrice)
  return dopenprice_;
}
inline void HQ1008::set_dopenprice(double value) {
  set_has_dopenprice();
  dopenprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dOpenPrice)
}

// optional double dLastPrice = 6;
inline bool HQ1008::has_dlastprice() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HQ1008::set_has_dlastprice() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HQ1008::clear_has_dlastprice() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HQ1008::clear_dlastprice() {
  dlastprice_ = 0;
  clear_has_dlastprice();
}
inline double HQ1008::dlastprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dLastPrice)
  return dlastprice_;
}
inline void HQ1008::set_dlastprice(double value) {
  set_has_dlastprice();
  dlastprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dLastPrice)
}

// optional double dHighPrice = 7;
inline bool HQ1008::has_dhighprice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HQ1008::set_has_dhighprice() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HQ1008::clear_has_dhighprice() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HQ1008::clear_dhighprice() {
  dhighprice_ = 0;
  clear_has_dhighprice();
}
inline double HQ1008::dhighprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dHighPrice)
  return dhighprice_;
}
inline void HQ1008::set_dhighprice(double value) {
  set_has_dhighprice();
  dhighprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dHighPrice)
}

// optional double dLowPrice = 8;
inline bool HQ1008::has_dlowprice() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HQ1008::set_has_dlowprice() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HQ1008::clear_has_dlowprice() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HQ1008::clear_dlowprice() {
  dlowprice_ = 0;
  clear_has_dlowprice();
}
inline double HQ1008::dlowprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dLowPrice)
  return dlowprice_;
}
inline void HQ1008::set_dlowprice(double value) {
  set_has_dlowprice();
  dlowprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dLowPrice)
}

// optional double dClosePrice = 9;
inline bool HQ1008::has_dcloseprice() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HQ1008::set_has_dcloseprice() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HQ1008::clear_has_dcloseprice() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HQ1008::clear_dcloseprice() {
  dcloseprice_ = 0;
  clear_has_dcloseprice();
}
inline double HQ1008::dcloseprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dClosePrice)
  return dcloseprice_;
}
inline void HQ1008::set_dcloseprice(double value) {
  set_has_dcloseprice();
  dcloseprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dClosePrice)
}

// optional double dAvgPrice = 10;
inline bool HQ1008::has_davgprice() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void HQ1008::set_has_davgprice() {
  _has_bits_[0] |= 0x00000200u;
}
inline void HQ1008::clear_has_davgprice() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void HQ1008::clear_davgprice() {
  davgprice_ = 0;
  clear_has_davgprice();
}
inline double HQ1008::davgprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dAvgPrice)
  return davgprice_;
}
inline void HQ1008::set_davgprice(double value) {
  set_has_davgprice();
  davgprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dAvgPrice)
}

// optional double dBusinessAmount = 11;
inline bool HQ1008::has_dbusinessamount() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void HQ1008::set_has_dbusinessamount() {
  _has_bits_[0] |= 0x00000400u;
}
inline void HQ1008::clear_has_dbusinessamount() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void HQ1008::clear_dbusinessamount() {
  dbusinessamount_ = 0;
  clear_has_dbusinessamount();
}
inline double HQ1008::dbusinessamount() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dBusinessAmount)
  return dbusinessamount_;
}
inline void HQ1008::set_dbusinessamount(double value) {
  set_has_dbusinessamount();
  dbusinessamount_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dBusinessAmount)
}

// optional double dBusinessBalance = 12;
inline bool HQ1008::has_dbusinessbalance() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void HQ1008::set_has_dbusinessbalance() {
  _has_bits_[0] |= 0x00000800u;
}
inline void HQ1008::clear_has_dbusinessbalance() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void HQ1008::clear_dbusinessbalance() {
  dbusinessbalance_ = 0;
  clear_has_dbusinessbalance();
}
inline double HQ1008::dbusinessbalance() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dBusinessBalance)
  return dbusinessbalance_;
}
inline void HQ1008::set_dbusinessbalance(double value) {
  set_has_dbusinessbalance();
  dbusinessbalance_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dBusinessBalance)
}

// optional double dUpPrice = 13;
inline bool HQ1008::has_dupprice() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void HQ1008::set_has_dupprice() {
  _has_bits_[0] |= 0x00001000u;
}
inline void HQ1008::clear_has_dupprice() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void HQ1008::clear_dupprice() {
  dupprice_ = 0;
  clear_has_dupprice();
}
inline double HQ1008::dupprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dUpPrice)
  return dupprice_;
}
inline void HQ1008::set_dupprice(double value) {
  set_has_dupprice();
  dupprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dUpPrice)
}

// optional double dDownPrice = 14;
inline bool HQ1008::has_ddownprice() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void HQ1008::set_has_ddownprice() {
  _has_bits_[0] |= 0x00002000u;
}
inline void HQ1008::clear_has_ddownprice() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void HQ1008::clear_ddownprice() {
  ddownprice_ = 0;
  clear_has_ddownprice();
}
inline double HQ1008::ddownprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dDownPrice)
  return ddownprice_;
}
inline void HQ1008::set_ddownprice(double value) {
  set_has_ddownprice();
  ddownprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dDownPrice)
}

// optional double dCurrentAmount = 15;
inline bool HQ1008::has_dcurrentamount() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void HQ1008::set_has_dcurrentamount() {
  _has_bits_[0] |= 0x00004000u;
}
inline void HQ1008::clear_has_dcurrentamount() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void HQ1008::clear_dcurrentamount() {
  dcurrentamount_ = 0;
  clear_has_dcurrentamount();
}
inline double HQ1008::dcurrentamount() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dCurrentAmount)
  return dcurrentamount_;
}
inline void HQ1008::set_dcurrentamount(double value) {
  set_has_dcurrentamount();
  dcurrentamount_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dCurrentAmount)
}

// optional double dAmount = 16;
inline bool HQ1008::has_damount() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void HQ1008::set_has_damount() {
  _has_bits_[0] |= 0x00008000u;
}
inline void HQ1008::clear_has_damount() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void HQ1008::clear_damount() {
  damount_ = 0;
  clear_has_damount();
}
inline double HQ1008::damount() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dAmount)
  return damount_;
}
inline void HQ1008::set_damount(double value) {
  set_has_damount();
  damount_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dAmount)
}

// optional double dPreAmount = 17;
inline bool HQ1008::has_dpreamount() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void HQ1008::set_has_dpreamount() {
  _has_bits_[0] |= 0x00010000u;
}
inline void HQ1008::clear_has_dpreamount() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void HQ1008::clear_dpreamount() {
  dpreamount_ = 0;
  clear_has_dpreamount();
}
inline double HQ1008::dpreamount() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dPreAmount)
  return dpreamount_;
}
inline void HQ1008::set_dpreamount(double value) {
  set_has_dpreamount();
  dpreamount_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dPreAmount)
}

// optional double dPreSettlement = 18;
inline bool HQ1008::has_dpresettlement() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void HQ1008::set_has_dpresettlement() {
  _has_bits_[0] |= 0x00020000u;
}
inline void HQ1008::clear_has_dpresettlement() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void HQ1008::clear_dpresettlement() {
  dpresettlement_ = 0;
  clear_has_dpresettlement();
}
inline double HQ1008::dpresettlement() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dPreSettlement)
  return dpresettlement_;
}
inline void HQ1008::set_dpresettlement(double value) {
  set_has_dpresettlement();
  dpresettlement_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dPreSettlement)
}

// optional double dSettleMent = 19;
inline bool HQ1008::has_dsettlement() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void HQ1008::set_has_dsettlement() {
  _has_bits_[0] |= 0x00040000u;
}
inline void HQ1008::clear_has_dsettlement() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void HQ1008::clear_dsettlement() {
  dsettlement_ = 0;
  clear_has_dsettlement();
}
inline double HQ1008::dsettlement() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dSettleMent)
  return dsettlement_;
}
inline void HQ1008::set_dsettlement(double value) {
  set_has_dsettlement();
  dsettlement_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dSettleMent)
}

// optional double dIopv = 20;
inline bool HQ1008::has_diopv() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void HQ1008::set_has_diopv() {
  _has_bits_[0] |= 0x00080000u;
}
inline void HQ1008::clear_has_diopv() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void HQ1008::clear_diopv() {
  diopv_ = 0;
  clear_has_diopv();
}
inline double HQ1008::diopv() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dIopv)
  return diopv_;
}
inline void HQ1008::set_diopv(double value) {
  set_has_diopv();
  diopv_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dIopv)
}

// optional string sTradingPhaseCode = 21;
inline bool HQ1008::has_stradingphasecode() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void HQ1008::set_has_stradingphasecode() {
  _has_bits_[0] |= 0x00100000u;
}
inline void HQ1008::clear_has_stradingphasecode() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void HQ1008::clear_stradingphasecode() {
  if (stradingphasecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingphasecode_->clear();
  }
  clear_has_stradingphasecode();
}
inline const ::std::string& HQ1008::stradingphasecode() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.sTradingPhaseCode)
  return *stradingphasecode_;
}
inline void HQ1008::set_stradingphasecode(const ::std::string& value) {
  set_has_stradingphasecode();
  if (stradingphasecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingphasecode_ = new ::std::string;
  }
  stradingphasecode_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.sTradingPhaseCode)
}
inline void HQ1008::set_stradingphasecode(const char* value) {
  set_has_stradingphasecode();
  if (stradingphasecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingphasecode_ = new ::std::string;
  }
  stradingphasecode_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1008.sTradingPhaseCode)
}
inline void HQ1008::set_stradingphasecode(const char* value, size_t size) {
  set_has_stradingphasecode();
  if (stradingphasecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingphasecode_ = new ::std::string;
  }
  stradingphasecode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1008.sTradingPhaseCode)
}
inline ::std::string* HQ1008::mutable_stradingphasecode() {
  set_has_stradingphasecode();
  if (stradingphasecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingphasecode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1008.sTradingPhaseCode)
  return stradingphasecode_;
}
inline ::std::string* HQ1008::release_stradingphasecode() {
  clear_has_stradingphasecode();
  if (stradingphasecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = stradingphasecode_;
    stradingphasecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1008::set_allocated_stradingphasecode(::std::string* stradingphasecode) {
  if (stradingphasecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stradingphasecode_;
  }
  if (stradingphasecode) {
    set_has_stradingphasecode();
    stradingphasecode_ = stradingphasecode;
  } else {
    clear_has_stradingphasecode();
    stradingphasecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1008.sTradingPhaseCode)
}

// optional double dAuctionPrice = 22;
inline bool HQ1008::has_dauctionprice() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void HQ1008::set_has_dauctionprice() {
  _has_bits_[0] |= 0x00200000u;
}
inline void HQ1008::clear_has_dauctionprice() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void HQ1008::clear_dauctionprice() {
  dauctionprice_ = 0;
  clear_has_dauctionprice();
}
inline double HQ1008::dauctionprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dAuctionPrice)
  return dauctionprice_;
}
inline void HQ1008::set_dauctionprice(double value) {
  set_has_dauctionprice();
  dauctionprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dAuctionPrice)
}

// optional double dMatchedQty = 23;
inline bool HQ1008::has_dmatchedqty() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void HQ1008::set_has_dmatchedqty() {
  _has_bits_[0] |= 0x00400000u;
}
inline void HQ1008::clear_has_dmatchedqty() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void HQ1008::clear_dmatchedqty() {
  dmatchedqty_ = 0;
  clear_has_dmatchedqty();
}
inline double HQ1008::dmatchedqty() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dMatchedQty)
  return dmatchedqty_;
}
inline void HQ1008::set_dmatchedqty(double value) {
  set_has_dmatchedqty();
  dmatchedqty_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dMatchedQty)
}

// optional double dFundT1Price = 24;
inline bool HQ1008::has_dfundt1price() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void HQ1008::set_has_dfundt1price() {
  _has_bits_[0] |= 0x00800000u;
}
inline void HQ1008::clear_has_dfundt1price() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void HQ1008::clear_dfundt1price() {
  dfundt1price_ = 0;
  clear_has_dfundt1price();
}
inline double HQ1008::dfundt1price() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dFundT1Price)
  return dfundt1price_;
}
inline void HQ1008::set_dfundt1price(double value) {
  set_has_dfundt1price();
  dfundt1price_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dFundT1Price)
}

// optional string sFundType = 25;
inline bool HQ1008::has_sfundtype() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void HQ1008::set_has_sfundtype() {
  _has_bits_[0] |= 0x01000000u;
}
inline void HQ1008::clear_has_sfundtype() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void HQ1008::clear_sfundtype() {
  if (sfundtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sfundtype_->clear();
  }
  clear_has_sfundtype();
}
inline const ::std::string& HQ1008::sfundtype() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.sFundType)
  return *sfundtype_;
}
inline void HQ1008::set_sfundtype(const ::std::string& value) {
  set_has_sfundtype();
  if (sfundtype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sfundtype_ = new ::std::string;
  }
  sfundtype_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.sFundType)
}
inline void HQ1008::set_sfundtype(const char* value) {
  set_has_sfundtype();
  if (sfundtype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sfundtype_ = new ::std::string;
  }
  sfundtype_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1008.sFundType)
}
inline void HQ1008::set_sfundtype(const char* value, size_t size) {
  set_has_sfundtype();
  if (sfundtype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sfundtype_ = new ::std::string;
  }
  sfundtype_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1008.sFundType)
}
inline ::std::string* HQ1008::mutable_sfundtype() {
  set_has_sfundtype();
  if (sfundtype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sfundtype_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1008.sFundType)
  return sfundtype_;
}
inline ::std::string* HQ1008::release_sfundtype() {
  clear_has_sfundtype();
  if (sfundtype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sfundtype_;
    sfundtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1008::set_allocated_sfundtype(::std::string* sfundtype) {
  if (sfundtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sfundtype_;
  }
  if (sfundtype) {
    set_has_sfundtype();
    sfundtype_ = sfundtype;
  } else {
    clear_has_sfundtype();
    sfundtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1008.sFundType)
}

// optional double dMarketDealAmount = 26;
inline bool HQ1008::has_dmarketdealamount() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void HQ1008::set_has_dmarketdealamount() {
  _has_bits_[0] |= 0x02000000u;
}
inline void HQ1008::clear_has_dmarketdealamount() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void HQ1008::clear_dmarketdealamount() {
  dmarketdealamount_ = 0;
  clear_has_dmarketdealamount();
}
inline double HQ1008::dmarketdealamount() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dMarketDealAmount)
  return dmarketdealamount_;
}
inline void HQ1008::set_dmarketdealamount(double value) {
  set_has_dmarketdealamount();
  dmarketdealamount_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dMarketDealAmount)
}

// optional string sStopFlag = 27;
inline bool HQ1008::has_sstopflag() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void HQ1008::set_has_sstopflag() {
  _has_bits_[0] |= 0x04000000u;
}
inline void HQ1008::clear_has_sstopflag() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void HQ1008::clear_sstopflag() {
  if (sstopflag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstopflag_->clear();
  }
  clear_has_sstopflag();
}
inline const ::std::string& HQ1008::sstopflag() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.sStopFlag)
  return *sstopflag_;
}
inline void HQ1008::set_sstopflag(const ::std::string& value) {
  set_has_sstopflag();
  if (sstopflag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstopflag_ = new ::std::string;
  }
  sstopflag_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.sStopFlag)
}
inline void HQ1008::set_sstopflag(const char* value) {
  set_has_sstopflag();
  if (sstopflag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstopflag_ = new ::std::string;
  }
  sstopflag_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1008.sStopFlag)
}
inline void HQ1008::set_sstopflag(const char* value, size_t size) {
  set_has_sstopflag();
  if (sstopflag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstopflag_ = new ::std::string;
  }
  sstopflag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1008.sStopFlag)
}
inline ::std::string* HQ1008::mutable_sstopflag() {
  set_has_sstopflag();
  if (sstopflag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstopflag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1008.sStopFlag)
  return sstopflag_;
}
inline ::std::string* HQ1008::release_sstopflag() {
  clear_has_sstopflag();
  if (sstopflag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstopflag_;
    sstopflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1008::set_allocated_sstopflag(::std::string* sstopflag) {
  if (sstopflag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstopflag_;
  }
  if (sstopflag) {
    set_has_sstopflag();
    sstopflag_ = sstopflag;
  } else {
    clear_has_sstopflag();
    sstopflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1008.sStopFlag)
}

// optional string sBsStatus = 28;
inline bool HQ1008::has_sbsstatus() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void HQ1008::set_has_sbsstatus() {
  _has_bits_[0] |= 0x08000000u;
}
inline void HQ1008::clear_has_sbsstatus() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void HQ1008::clear_sbsstatus() {
  if (sbsstatus_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbsstatus_->clear();
  }
  clear_has_sbsstatus();
}
inline const ::std::string& HQ1008::sbsstatus() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.sBsStatus)
  return *sbsstatus_;
}
inline void HQ1008::set_sbsstatus(const ::std::string& value) {
  set_has_sbsstatus();
  if (sbsstatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbsstatus_ = new ::std::string;
  }
  sbsstatus_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.sBsStatus)
}
inline void HQ1008::set_sbsstatus(const char* value) {
  set_has_sbsstatus();
  if (sbsstatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbsstatus_ = new ::std::string;
  }
  sbsstatus_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1008.sBsStatus)
}
inline void HQ1008::set_sbsstatus(const char* value, size_t size) {
  set_has_sbsstatus();
  if (sbsstatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbsstatus_ = new ::std::string;
  }
  sbsstatus_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1008.sBsStatus)
}
inline ::std::string* HQ1008::mutable_sbsstatus() {
  set_has_sbsstatus();
  if (sbsstatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbsstatus_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1008.sBsStatus)
  return sbsstatus_;
}
inline ::std::string* HQ1008::release_sbsstatus() {
  clear_has_sbsstatus();
  if (sbsstatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sbsstatus_;
    sbsstatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1008::set_allocated_sbsstatus(::std::string* sbsstatus) {
  if (sbsstatus_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sbsstatus_;
  }
  if (sbsstatus) {
    set_has_sbsstatus();
    sbsstatus_ = sbsstatus;
  } else {
    clear_has_sbsstatus();
    sbsstatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1008.sBsStatus)
}

// optional string sLatestEnquiryTime = 29;
inline bool HQ1008::has_slatestenquirytime() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void HQ1008::set_has_slatestenquirytime() {
  _has_bits_[0] |= 0x10000000u;
}
inline void HQ1008::clear_has_slatestenquirytime() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void HQ1008::clear_slatestenquirytime() {
  if (slatestenquirytime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    slatestenquirytime_->clear();
  }
  clear_has_slatestenquirytime();
}
inline const ::std::string& HQ1008::slatestenquirytime() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.sLatestEnquiryTime)
  return *slatestenquirytime_;
}
inline void HQ1008::set_slatestenquirytime(const ::std::string& value) {
  set_has_slatestenquirytime();
  if (slatestenquirytime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    slatestenquirytime_ = new ::std::string;
  }
  slatestenquirytime_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.sLatestEnquiryTime)
}
inline void HQ1008::set_slatestenquirytime(const char* value) {
  set_has_slatestenquirytime();
  if (slatestenquirytime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    slatestenquirytime_ = new ::std::string;
  }
  slatestenquirytime_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1008.sLatestEnquiryTime)
}
inline void HQ1008::set_slatestenquirytime(const char* value, size_t size) {
  set_has_slatestenquirytime();
  if (slatestenquirytime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    slatestenquirytime_ = new ::std::string;
  }
  slatestenquirytime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1008.sLatestEnquiryTime)
}
inline ::std::string* HQ1008::mutable_slatestenquirytime() {
  set_has_slatestenquirytime();
  if (slatestenquirytime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    slatestenquirytime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1008.sLatestEnquiryTime)
  return slatestenquirytime_;
}
inline ::std::string* HQ1008::release_slatestenquirytime() {
  clear_has_slatestenquirytime();
  if (slatestenquirytime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = slatestenquirytime_;
    slatestenquirytime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1008::set_allocated_slatestenquirytime(::std::string* slatestenquirytime) {
  if (slatestenquirytime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete slatestenquirytime_;
  }
  if (slatestenquirytime) {
    set_has_slatestenquirytime();
    slatestenquirytime_ = slatestenquirytime;
  } else {
    clear_has_slatestenquirytime();
    slatestenquirytime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1008.sLatestEnquiryTime)
}

// optional double dBusinWeight = 30;
inline bool HQ1008::has_dbusinweight() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void HQ1008::set_has_dbusinweight() {
  _has_bits_[0] |= 0x20000000u;
}
inline void HQ1008::clear_has_dbusinweight() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void HQ1008::clear_dbusinweight() {
  dbusinweight_ = 0;
  clear_has_dbusinweight();
}
inline double HQ1008::dbusinweight() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dBusinWeight)
  return dbusinweight_;
}
inline void HQ1008::set_dbusinweight(double value) {
  set_has_dbusinweight();
  dbusinweight_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dBusinWeight)
}

// optional double dBuyPrice1 = 31;
inline bool HQ1008::has_dbuyprice1() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void HQ1008::set_has_dbuyprice1() {
  _has_bits_[0] |= 0x40000000u;
}
inline void HQ1008::clear_has_dbuyprice1() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void HQ1008::clear_dbuyprice1() {
  dbuyprice1_ = 0;
  clear_has_dbuyprice1();
}
inline double HQ1008::dbuyprice1() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dBuyPrice1)
  return dbuyprice1_;
}
inline void HQ1008::set_dbuyprice1(double value) {
  set_has_dbuyprice1();
  dbuyprice1_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dBuyPrice1)
}

// optional double dBuyPrice2 = 32;
inline bool HQ1008::has_dbuyprice2() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void HQ1008::set_has_dbuyprice2() {
  _has_bits_[0] |= 0x80000000u;
}
inline void HQ1008::clear_has_dbuyprice2() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void HQ1008::clear_dbuyprice2() {
  dbuyprice2_ = 0;
  clear_has_dbuyprice2();
}
inline double HQ1008::dbuyprice2() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dBuyPrice2)
  return dbuyprice2_;
}
inline void HQ1008::set_dbuyprice2(double value) {
  set_has_dbuyprice2();
  dbuyprice2_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dBuyPrice2)
}

// optional double dBuyPrice3 = 33;
inline bool HQ1008::has_dbuyprice3() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void HQ1008::set_has_dbuyprice3() {
  _has_bits_[1] |= 0x00000001u;
}
inline void HQ1008::clear_has_dbuyprice3() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void HQ1008::clear_dbuyprice3() {
  dbuyprice3_ = 0;
  clear_has_dbuyprice3();
}
inline double HQ1008::dbuyprice3() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dBuyPrice3)
  return dbuyprice3_;
}
inline void HQ1008::set_dbuyprice3(double value) {
  set_has_dbuyprice3();
  dbuyprice3_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dBuyPrice3)
}

// optional double dBuyPrice4 = 34;
inline bool HQ1008::has_dbuyprice4() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void HQ1008::set_has_dbuyprice4() {
  _has_bits_[1] |= 0x00000002u;
}
inline void HQ1008::clear_has_dbuyprice4() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void HQ1008::clear_dbuyprice4() {
  dbuyprice4_ = 0;
  clear_has_dbuyprice4();
}
inline double HQ1008::dbuyprice4() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dBuyPrice4)
  return dbuyprice4_;
}
inline void HQ1008::set_dbuyprice4(double value) {
  set_has_dbuyprice4();
  dbuyprice4_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dBuyPrice4)
}

// optional double dBuyPrice5 = 35;
inline bool HQ1008::has_dbuyprice5() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void HQ1008::set_has_dbuyprice5() {
  _has_bits_[1] |= 0x00000004u;
}
inline void HQ1008::clear_has_dbuyprice5() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void HQ1008::clear_dbuyprice5() {
  dbuyprice5_ = 0;
  clear_has_dbuyprice5();
}
inline double HQ1008::dbuyprice5() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dBuyPrice5)
  return dbuyprice5_;
}
inline void HQ1008::set_dbuyprice5(double value) {
  set_has_dbuyprice5();
  dbuyprice5_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dBuyPrice5)
}

// optional double dSalePrice1 = 36;
inline bool HQ1008::has_dsaleprice1() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void HQ1008::set_has_dsaleprice1() {
  _has_bits_[1] |= 0x00000008u;
}
inline void HQ1008::clear_has_dsaleprice1() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void HQ1008::clear_dsaleprice1() {
  dsaleprice1_ = 0;
  clear_has_dsaleprice1();
}
inline double HQ1008::dsaleprice1() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dSalePrice1)
  return dsaleprice1_;
}
inline void HQ1008::set_dsaleprice1(double value) {
  set_has_dsaleprice1();
  dsaleprice1_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dSalePrice1)
}

// optional double dSalePrice2 = 37;
inline bool HQ1008::has_dsaleprice2() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void HQ1008::set_has_dsaleprice2() {
  _has_bits_[1] |= 0x00000010u;
}
inline void HQ1008::clear_has_dsaleprice2() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void HQ1008::clear_dsaleprice2() {
  dsaleprice2_ = 0;
  clear_has_dsaleprice2();
}
inline double HQ1008::dsaleprice2() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dSalePrice2)
  return dsaleprice2_;
}
inline void HQ1008::set_dsaleprice2(double value) {
  set_has_dsaleprice2();
  dsaleprice2_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dSalePrice2)
}

// optional double dSalePrice3 = 38;
inline bool HQ1008::has_dsaleprice3() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void HQ1008::set_has_dsaleprice3() {
  _has_bits_[1] |= 0x00000020u;
}
inline void HQ1008::clear_has_dsaleprice3() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void HQ1008::clear_dsaleprice3() {
  dsaleprice3_ = 0;
  clear_has_dsaleprice3();
}
inline double HQ1008::dsaleprice3() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dSalePrice3)
  return dsaleprice3_;
}
inline void HQ1008::set_dsaleprice3(double value) {
  set_has_dsaleprice3();
  dsaleprice3_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dSalePrice3)
}

// optional double dSalePrice4 = 39;
inline bool HQ1008::has_dsaleprice4() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void HQ1008::set_has_dsaleprice4() {
  _has_bits_[1] |= 0x00000040u;
}
inline void HQ1008::clear_has_dsaleprice4() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void HQ1008::clear_dsaleprice4() {
  dsaleprice4_ = 0;
  clear_has_dsaleprice4();
}
inline double HQ1008::dsaleprice4() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dSalePrice4)
  return dsaleprice4_;
}
inline void HQ1008::set_dsaleprice4(double value) {
  set_has_dsaleprice4();
  dsaleprice4_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dSalePrice4)
}

// optional double dSalePrice5 = 40;
inline bool HQ1008::has_dsaleprice5() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void HQ1008::set_has_dsaleprice5() {
  _has_bits_[1] |= 0x00000080u;
}
inline void HQ1008::clear_has_dsaleprice5() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void HQ1008::clear_dsaleprice5() {
  dsaleprice5_ = 0;
  clear_has_dsaleprice5();
}
inline double HQ1008::dsaleprice5() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dSalePrice5)
  return dsaleprice5_;
}
inline void HQ1008::set_dsaleprice5(double value) {
  set_has_dsaleprice5();
  dsaleprice5_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dSalePrice5)
}

// optional double dBuyQty1 = 41;
inline bool HQ1008::has_dbuyqty1() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void HQ1008::set_has_dbuyqty1() {
  _has_bits_[1] |= 0x00000100u;
}
inline void HQ1008::clear_has_dbuyqty1() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void HQ1008::clear_dbuyqty1() {
  dbuyqty1_ = 0;
  clear_has_dbuyqty1();
}
inline double HQ1008::dbuyqty1() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dBuyQty1)
  return dbuyqty1_;
}
inline void HQ1008::set_dbuyqty1(double value) {
  set_has_dbuyqty1();
  dbuyqty1_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dBuyQty1)
}

// optional double dBuyQty2 = 42;
inline bool HQ1008::has_dbuyqty2() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void HQ1008::set_has_dbuyqty2() {
  _has_bits_[1] |= 0x00000200u;
}
inline void HQ1008::clear_has_dbuyqty2() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void HQ1008::clear_dbuyqty2() {
  dbuyqty2_ = 0;
  clear_has_dbuyqty2();
}
inline double HQ1008::dbuyqty2() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dBuyQty2)
  return dbuyqty2_;
}
inline void HQ1008::set_dbuyqty2(double value) {
  set_has_dbuyqty2();
  dbuyqty2_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dBuyQty2)
}

// optional double dBuyQty3 = 43;
inline bool HQ1008::has_dbuyqty3() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void HQ1008::set_has_dbuyqty3() {
  _has_bits_[1] |= 0x00000400u;
}
inline void HQ1008::clear_has_dbuyqty3() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void HQ1008::clear_dbuyqty3() {
  dbuyqty3_ = 0;
  clear_has_dbuyqty3();
}
inline double HQ1008::dbuyqty3() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dBuyQty3)
  return dbuyqty3_;
}
inline void HQ1008::set_dbuyqty3(double value) {
  set_has_dbuyqty3();
  dbuyqty3_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dBuyQty3)
}

// optional double dBuyQty4 = 44;
inline bool HQ1008::has_dbuyqty4() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void HQ1008::set_has_dbuyqty4() {
  _has_bits_[1] |= 0x00000800u;
}
inline void HQ1008::clear_has_dbuyqty4() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void HQ1008::clear_dbuyqty4() {
  dbuyqty4_ = 0;
  clear_has_dbuyqty4();
}
inline double HQ1008::dbuyqty4() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dBuyQty4)
  return dbuyqty4_;
}
inline void HQ1008::set_dbuyqty4(double value) {
  set_has_dbuyqty4();
  dbuyqty4_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dBuyQty4)
}

// optional double dBuyQty5 = 45;
inline bool HQ1008::has_dbuyqty5() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void HQ1008::set_has_dbuyqty5() {
  _has_bits_[1] |= 0x00001000u;
}
inline void HQ1008::clear_has_dbuyqty5() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void HQ1008::clear_dbuyqty5() {
  dbuyqty5_ = 0;
  clear_has_dbuyqty5();
}
inline double HQ1008::dbuyqty5() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dBuyQty5)
  return dbuyqty5_;
}
inline void HQ1008::set_dbuyqty5(double value) {
  set_has_dbuyqty5();
  dbuyqty5_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dBuyQty5)
}

// optional double dSaleQty1 = 46;
inline bool HQ1008::has_dsaleqty1() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void HQ1008::set_has_dsaleqty1() {
  _has_bits_[1] |= 0x00002000u;
}
inline void HQ1008::clear_has_dsaleqty1() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void HQ1008::clear_dsaleqty1() {
  dsaleqty1_ = 0;
  clear_has_dsaleqty1();
}
inline double HQ1008::dsaleqty1() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dSaleQty1)
  return dsaleqty1_;
}
inline void HQ1008::set_dsaleqty1(double value) {
  set_has_dsaleqty1();
  dsaleqty1_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dSaleQty1)
}

// optional double dSaleQty2 = 47;
inline bool HQ1008::has_dsaleqty2() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void HQ1008::set_has_dsaleqty2() {
  _has_bits_[1] |= 0x00004000u;
}
inline void HQ1008::clear_has_dsaleqty2() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void HQ1008::clear_dsaleqty2() {
  dsaleqty2_ = 0;
  clear_has_dsaleqty2();
}
inline double HQ1008::dsaleqty2() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dSaleQty2)
  return dsaleqty2_;
}
inline void HQ1008::set_dsaleqty2(double value) {
  set_has_dsaleqty2();
  dsaleqty2_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dSaleQty2)
}

// optional double dSaleQty3 = 48;
inline bool HQ1008::has_dsaleqty3() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void HQ1008::set_has_dsaleqty3() {
  _has_bits_[1] |= 0x00008000u;
}
inline void HQ1008::clear_has_dsaleqty3() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void HQ1008::clear_dsaleqty3() {
  dsaleqty3_ = 0;
  clear_has_dsaleqty3();
}
inline double HQ1008::dsaleqty3() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dSaleQty3)
  return dsaleqty3_;
}
inline void HQ1008::set_dsaleqty3(double value) {
  set_has_dsaleqty3();
  dsaleqty3_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dSaleQty3)
}

// optional double dSaleQty4 = 49;
inline bool HQ1008::has_dsaleqty4() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void HQ1008::set_has_dsaleqty4() {
  _has_bits_[1] |= 0x00010000u;
}
inline void HQ1008::clear_has_dsaleqty4() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void HQ1008::clear_dsaleqty4() {
  dsaleqty4_ = 0;
  clear_has_dsaleqty4();
}
inline double HQ1008::dsaleqty4() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dSaleQty4)
  return dsaleqty4_;
}
inline void HQ1008::set_dsaleqty4(double value) {
  set_has_dsaleqty4();
  dsaleqty4_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dSaleQty4)
}

// optional double dSaleQty5 = 50;
inline bool HQ1008::has_dsaleqty5() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void HQ1008::set_has_dsaleqty5() {
  _has_bits_[1] |= 0x00020000u;
}
inline void HQ1008::clear_has_dsaleqty5() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void HQ1008::clear_dsaleqty5() {
  dsaleqty5_ = 0;
  clear_has_dsaleqty5();
}
inline double HQ1008::dsaleqty5() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dSaleQty5)
  return dsaleqty5_;
}
inline void HQ1008::set_dsaleqty5(double value) {
  set_has_dsaleqty5();
  dsaleqty5_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dSaleQty5)
}

// optional bytes sStockName = 51;
inline bool HQ1008::has_sstockname() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void HQ1008::set_has_sstockname() {
  _has_bits_[1] |= 0x00040000u;
}
inline void HQ1008::clear_has_sstockname() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void HQ1008::clear_sstockname() {
  if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_->clear();
  }
  clear_has_sstockname();
}
inline const ::std::string& HQ1008::sstockname() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.sStockName)
  return *sstockname_;
}
inline void HQ1008::set_sstockname(const ::std::string& value) {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  sstockname_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.sStockName)
}
inline void HQ1008::set_sstockname(const char* value) {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  sstockname_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1008.sStockName)
}
inline void HQ1008::set_sstockname(const void* value, size_t size) {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  sstockname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1008.sStockName)
}
inline ::std::string* HQ1008::mutable_sstockname() {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1008.sStockName)
  return sstockname_;
}
inline ::std::string* HQ1008::release_sstockname() {
  clear_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstockname_;
    sstockname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1008::set_allocated_sstockname(::std::string* sstockname) {
  if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockname_;
  }
  if (sstockname) {
    set_has_sstockname();
    sstockname_ = sstockname;
  } else {
    clear_has_sstockname();
    sstockname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1008.sStockName)
}

// optional double dAnountPerHand = 52;
inline bool HQ1008::has_danountperhand() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void HQ1008::set_has_danountperhand() {
  _has_bits_[1] |= 0x00080000u;
}
inline void HQ1008::clear_has_danountperhand() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void HQ1008::clear_danountperhand() {
  danountperhand_ = 0;
  clear_has_danountperhand();
}
inline double HQ1008::danountperhand() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dAnountPerHand)
  return danountperhand_;
}
inline void HQ1008::set_danountperhand(double value) {
  set_has_danountperhand();
  danountperhand_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dAnountPerHand)
}

// optional double dTotalbuyAmount = 53;
inline bool HQ1008::has_dtotalbuyamount() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void HQ1008::set_has_dtotalbuyamount() {
  _has_bits_[1] |= 0x00100000u;
}
inline void HQ1008::clear_has_dtotalbuyamount() {
  _has_bits_[1] &= ~0x00100000u;
}
inline void HQ1008::clear_dtotalbuyamount() {
  dtotalbuyamount_ = 0;
  clear_has_dtotalbuyamount();
}
inline double HQ1008::dtotalbuyamount() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dTotalbuyAmount)
  return dtotalbuyamount_;
}
inline void HQ1008::set_dtotalbuyamount(double value) {
  set_has_dtotalbuyamount();
  dtotalbuyamount_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dTotalbuyAmount)
}

// optional double dTotalSaleAmount = 54;
inline bool HQ1008::has_dtotalsaleamount() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void HQ1008::set_has_dtotalsaleamount() {
  _has_bits_[1] |= 0x00200000u;
}
inline void HQ1008::clear_has_dtotalsaleamount() {
  _has_bits_[1] &= ~0x00200000u;
}
inline void HQ1008::clear_dtotalsaleamount() {
  dtotalsaleamount_ = 0;
  clear_has_dtotalsaleamount();
}
inline double HQ1008::dtotalsaleamount() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dTotalSaleAmount)
  return dtotalsaleamount_;
}
inline void HQ1008::set_dtotalsaleamount(double value) {
  set_has_dtotalsaleamount();
  dtotalsaleamount_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dTotalSaleAmount)
}

// optional double dCJBiShu = 55;
inline bool HQ1008::has_dcjbishu() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void HQ1008::set_has_dcjbishu() {
  _has_bits_[1] |= 0x00400000u;
}
inline void HQ1008::clear_has_dcjbishu() {
  _has_bits_[1] &= ~0x00400000u;
}
inline void HQ1008::clear_dcjbishu() {
  dcjbishu_ = 0;
  clear_has_dcjbishu();
}
inline double HQ1008::dcjbishu() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dCJBiShu)
  return dcjbishu_;
}
inline void HQ1008::set_dcjbishu(double value) {
  set_has_dcjbishu();
  dcjbishu_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dCJBiShu)
}

// optional double dRealavgRate = 56;
inline bool HQ1008::has_drealavgrate() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void HQ1008::set_has_drealavgrate() {
  _has_bits_[1] |= 0x00800000u;
}
inline void HQ1008::clear_has_drealavgrate() {
  _has_bits_[1] &= ~0x00800000u;
}
inline void HQ1008::clear_drealavgrate() {
  drealavgrate_ = 0;
  clear_has_drealavgrate();
}
inline double HQ1008::drealavgrate() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dRealavgRate)
  return drealavgrate_;
}
inline void HQ1008::set_drealavgrate(double value) {
  set_has_drealavgrate();
  drealavgrate_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dRealavgRate)
}

// optional double dPreavgRate = 57;
inline bool HQ1008::has_dpreavgrate() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
inline void HQ1008::set_has_dpreavgrate() {
  _has_bits_[1] |= 0x01000000u;
}
inline void HQ1008::clear_has_dpreavgrate() {
  _has_bits_[1] &= ~0x01000000u;
}
inline void HQ1008::clear_dpreavgrate() {
  dpreavgrate_ = 0;
  clear_has_dpreavgrate();
}
inline double HQ1008::dpreavgrate() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dPreavgRate)
  return dpreavgrate_;
}
inline void HQ1008::set_dpreavgrate(double value) {
  set_has_dpreavgrate();
  dpreavgrate_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dPreavgRate)
}

// optional int32 iInitDate = 58;
inline bool HQ1008::has_iinitdate() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
inline void HQ1008::set_has_iinitdate() {
  _has_bits_[1] |= 0x02000000u;
}
inline void HQ1008::clear_has_iinitdate() {
  _has_bits_[1] &= ~0x02000000u;
}
inline void HQ1008::clear_iinitdate() {
  iinitdate_ = 0;
  clear_has_iinitdate();
}
inline ::google::protobuf::int32 HQ1008::iinitdate() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.iInitDate)
  return iinitdate_;
}
inline void HQ1008::set_iinitdate(::google::protobuf::int32 value) {
  set_has_iinitdate();
  iinitdate_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.iInitDate)
}

// optional double dPe = 59;
inline bool HQ1008::has_dpe() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
inline void HQ1008::set_has_dpe() {
  _has_bits_[1] |= 0x04000000u;
}
inline void HQ1008::clear_has_dpe() {
  _has_bits_[1] &= ~0x04000000u;
}
inline void HQ1008::clear_dpe() {
  dpe_ = 0;
  clear_has_dpe();
}
inline double HQ1008::dpe() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dPe)
  return dpe_;
}
inline void HQ1008::set_dpe(double value) {
  set_has_dpe();
  dpe_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dPe)
}

// optional double dPe2 = 60;
inline bool HQ1008::has_dpe2() const {
  return (_has_bits_[1] & 0x08000000u) != 0;
}
inline void HQ1008::set_has_dpe2() {
  _has_bits_[1] |= 0x08000000u;
}
inline void HQ1008::clear_has_dpe2() {
  _has_bits_[1] &= ~0x08000000u;
}
inline void HQ1008::clear_dpe2() {
  dpe2_ = 0;
  clear_has_dpe2();
}
inline double HQ1008::dpe2() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dPe2)
  return dpe2_;
}
inline void HQ1008::set_dpe2(double value) {
  set_has_dpe2();
  dpe2_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dPe2)
}

// optional int32 iLayering = 61;
inline bool HQ1008::has_ilayering() const {
  return (_has_bits_[1] & 0x10000000u) != 0;
}
inline void HQ1008::set_has_ilayering() {
  _has_bits_[1] |= 0x10000000u;
}
inline void HQ1008::clear_has_ilayering() {
  _has_bits_[1] &= ~0x10000000u;
}
inline void HQ1008::clear_ilayering() {
  ilayering_ = 0;
  clear_has_ilayering();
}
inline ::google::protobuf::int32 HQ1008::ilayering() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.iLayering)
  return ilayering_;
}
inline void HQ1008::set_ilayering(::google::protobuf::int32 value) {
  set_has_ilayering();
  ilayering_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.iLayering)
}

// optional int32 iZSSSL = 62;
inline bool HQ1008::has_izsssl() const {
  return (_has_bits_[1] & 0x20000000u) != 0;
}
inline void HQ1008::set_has_izsssl() {
  _has_bits_[1] |= 0x20000000u;
}
inline void HQ1008::clear_has_izsssl() {
  _has_bits_[1] &= ~0x20000000u;
}
inline void HQ1008::clear_izsssl() {
  izsssl_ = 0;
  clear_has_izsssl();
}
inline ::google::protobuf::int32 HQ1008::izsssl() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.iZSSSL)
  return izsssl_;
}
inline void HQ1008::set_izsssl(::google::protobuf::int32 value) {
  set_has_izsssl();
  izsssl_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.iZSSSL)
}

// optional string sStockType = 63;
inline bool HQ1008::has_sstocktype() const {
  return (_has_bits_[1] & 0x40000000u) != 0;
}
inline void HQ1008::set_has_sstocktype() {
  _has_bits_[1] |= 0x40000000u;
}
inline void HQ1008::clear_has_sstocktype() {
  _has_bits_[1] &= ~0x40000000u;
}
inline void HQ1008::clear_sstocktype() {
  if (sstocktype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstocktype_->clear();
  }
  clear_has_sstocktype();
}
inline const ::std::string& HQ1008::sstocktype() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.sStockType)
  return *sstocktype_;
}
inline void HQ1008::set_sstocktype(const ::std::string& value) {
  set_has_sstocktype();
  if (sstocktype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstocktype_ = new ::std::string;
  }
  sstocktype_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.sStockType)
}
inline void HQ1008::set_sstocktype(const char* value) {
  set_has_sstocktype();
  if (sstocktype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstocktype_ = new ::std::string;
  }
  sstocktype_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1008.sStockType)
}
inline void HQ1008::set_sstocktype(const char* value, size_t size) {
  set_has_sstocktype();
  if (sstocktype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstocktype_ = new ::std::string;
  }
  sstocktype_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1008.sStockType)
}
inline ::std::string* HQ1008::mutable_sstocktype() {
  set_has_sstocktype();
  if (sstocktype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstocktype_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1008.sStockType)
  return sstocktype_;
}
inline ::std::string* HQ1008::release_sstocktype() {
  clear_has_sstocktype();
  if (sstocktype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstocktype_;
    sstocktype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1008::set_allocated_sstocktype(::std::string* sstocktype) {
  if (sstocktype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstocktype_;
  }
  if (sstocktype) {
    set_has_sstocktype();
    sstocktype_ = sstocktype;
  } else {
    clear_has_sstocktype();
    sstocktype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1008.sStockType)
}

// optional string sCodeType = 64;
inline bool HQ1008::has_scodetype() const {
  return (_has_bits_[1] & 0x80000000u) != 0;
}
inline void HQ1008::set_has_scodetype() {
  _has_bits_[1] |= 0x80000000u;
}
inline void HQ1008::clear_has_scodetype() {
  _has_bits_[1] &= ~0x80000000u;
}
inline void HQ1008::clear_scodetype() {
  if (scodetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scodetype_->clear();
  }
  clear_has_scodetype();
}
inline const ::std::string& HQ1008::scodetype() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.sCodeType)
  return *scodetype_;
}
inline void HQ1008::set_scodetype(const ::std::string& value) {
  set_has_scodetype();
  if (scodetype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scodetype_ = new ::std::string;
  }
  scodetype_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.sCodeType)
}
inline void HQ1008::set_scodetype(const char* value) {
  set_has_scodetype();
  if (scodetype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scodetype_ = new ::std::string;
  }
  scodetype_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1008.sCodeType)
}
inline void HQ1008::set_scodetype(const char* value, size_t size) {
  set_has_scodetype();
  if (scodetype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scodetype_ = new ::std::string;
  }
  scodetype_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1008.sCodeType)
}
inline ::std::string* HQ1008::mutable_scodetype() {
  set_has_scodetype();
  if (scodetype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scodetype_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1008.sCodeType)
  return scodetype_;
}
inline ::std::string* HQ1008::release_scodetype() {
  clear_has_scodetype();
  if (scodetype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = scodetype_;
    scodetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1008::set_allocated_scodetype(::std::string* scodetype) {
  if (scodetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scodetype_;
  }
  if (scodetype) {
    set_has_scodetype();
    scodetype_ = scodetype;
  } else {
    clear_has_scodetype();
    scodetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1008.sCodeType)
}

// optional int32 iStrikeDate = 65;
inline bool HQ1008::has_istrikedate() const {
  return (_has_bits_[2] & 0x00000001u) != 0;
}
inline void HQ1008::set_has_istrikedate() {
  _has_bits_[2] |= 0x00000001u;
}
inline void HQ1008::clear_has_istrikedate() {
  _has_bits_[2] &= ~0x00000001u;
}
inline void HQ1008::clear_istrikedate() {
  istrikedate_ = 0;
  clear_has_istrikedate();
}
inline ::google::protobuf::int32 HQ1008::istrikedate() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.iStrikeDate)
  return istrikedate_;
}
inline void HQ1008::set_istrikedate(::google::protobuf::int32 value) {
  set_has_istrikedate();
  istrikedate_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.iStrikeDate)
}

// optional int32 iExpireDate = 66;
inline bool HQ1008::has_iexpiredate() const {
  return (_has_bits_[2] & 0x00000002u) != 0;
}
inline void HQ1008::set_has_iexpiredate() {
  _has_bits_[2] |= 0x00000002u;
}
inline void HQ1008::clear_has_iexpiredate() {
  _has_bits_[2] &= ~0x00000002u;
}
inline void HQ1008::clear_iexpiredate() {
  iexpiredate_ = 0;
  clear_has_iexpiredate();
}
inline ::google::protobuf::int32 HQ1008::iexpiredate() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.iExpireDate)
  return iexpiredate_;
}
inline void HQ1008::set_iexpiredate(::google::protobuf::int32 value) {
  set_has_iexpiredate();
  iexpiredate_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.iExpireDate)
}

// optional double dMaxLimitedAmount = 67;
inline bool HQ1008::has_dmaxlimitedamount() const {
  return (_has_bits_[2] & 0x00000004u) != 0;
}
inline void HQ1008::set_has_dmaxlimitedamount() {
  _has_bits_[2] |= 0x00000004u;
}
inline void HQ1008::clear_has_dmaxlimitedamount() {
  _has_bits_[2] &= ~0x00000004u;
}
inline void HQ1008::clear_dmaxlimitedamount() {
  dmaxlimitedamount_ = 0;
  clear_has_dmaxlimitedamount();
}
inline double HQ1008::dmaxlimitedamount() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dMaxLimitedAmount)
  return dmaxlimitedamount_;
}
inline void HQ1008::set_dmaxlimitedamount(double value) {
  set_has_dmaxlimitedamount();
  dmaxlimitedamount_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dMaxLimitedAmount)
}

// optional double dMaxMarketAmount = 68;
inline bool HQ1008::has_dmaxmarketamount() const {
  return (_has_bits_[2] & 0x00000008u) != 0;
}
inline void HQ1008::set_has_dmaxmarketamount() {
  _has_bits_[2] |= 0x00000008u;
}
inline void HQ1008::clear_has_dmaxmarketamount() {
  _has_bits_[2] &= ~0x00000008u;
}
inline void HQ1008::clear_dmaxmarketamount() {
  dmaxmarketamount_ = 0;
  clear_has_dmaxmarketamount();
}
inline double HQ1008::dmaxmarketamount() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dMaxMarketAmount)
  return dmaxmarketamount_;
}
inline void HQ1008::set_dmaxmarketamount(double value) {
  set_has_dmaxmarketamount();
  dmaxmarketamount_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dMaxMarketAmount)
}

// optional double dHoldBalance = 69;
inline bool HQ1008::has_dholdbalance() const {
  return (_has_bits_[2] & 0x00000010u) != 0;
}
inline void HQ1008::set_has_dholdbalance() {
  _has_bits_[2] |= 0x00000010u;
}
inline void HQ1008::clear_has_dholdbalance() {
  _has_bits_[2] &= ~0x00000010u;
}
inline void HQ1008::clear_dholdbalance() {
  dholdbalance_ = 0;
  clear_has_dholdbalance();
}
inline double HQ1008::dholdbalance() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dHoldBalance)
  return dholdbalance_;
}
inline void HQ1008::set_dholdbalance(double value) {
  set_has_dholdbalance();
  dholdbalance_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dHoldBalance)
}

// optional double dDelta = 70;
inline bool HQ1008::has_ddelta() const {
  return (_has_bits_[2] & 0x00000020u) != 0;
}
inline void HQ1008::set_has_ddelta() {
  _has_bits_[2] |= 0x00000020u;
}
inline void HQ1008::clear_has_ddelta() {
  _has_bits_[2] &= ~0x00000020u;
}
inline void HQ1008::clear_ddelta() {
  ddelta_ = 0;
  clear_has_ddelta();
}
inline double HQ1008::ddelta() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008.dDelta)
  return ddelta_;
}
inline void HQ1008::set_ddelta(double value) {
  set_has_ddelta();
  ddelta_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1008.dDelta)
}

// -------------------------------------------------------------------

// HQ1008s

// repeated .HQStockPackage.HQ1008 rHQ1008 = 1;
inline int HQ1008s::rHQ1008_size() const {
  return rHQ1008_.size();
}
inline void HQ1008s::clear_rHQ1008() {
  rHQ1008_.Clear();
}
inline const ::HQStockPackage::HQ1008& HQ1008s::rHQ1008(int index) const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1008s.rHQ1008)
  return rHQ1008_.Get(index);
}
inline ::HQStockPackage::HQ1008* HQ1008s::mutable_rHQ1008(int index) {
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1008s.rHQ1008)
  return rHQ1008_.Mutable(index);
}
inline ::HQStockPackage::HQ1008* HQ1008s::add_rHQ1008() {
  // @@protoc_insertion_point(field_add:HQStockPackage.HQ1008s.rHQ1008)
  return rHQ1008_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1008 >&
HQ1008s::rHQ1008() const {
  // @@protoc_insertion_point(field_list:HQStockPackage.HQ1008s.rHQ1008)
  return rHQ1008_;
}
inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1008 >*
HQ1008s::mutable_rHQ1008() {
  // @@protoc_insertion_point(field_mutable_list:HQStockPackage.HQ1008s.rHQ1008)
  return &rHQ1008_;
}

// -------------------------------------------------------------------

// HQ1001

// required string sMarketNo = 1;
inline bool HQ1001::has_smarketno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HQ1001::set_has_smarketno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HQ1001::clear_has_smarketno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HQ1001::clear_smarketno() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_->clear();
  }
  clear_has_smarketno();
}
inline const ::std::string& HQ1001::smarketno() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1001.sMarketNo)
  return *smarketno_;
}
inline void HQ1001::set_smarketno(const ::std::string& value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1001.sMarketNo)
}
inline void HQ1001::set_smarketno(const char* value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1001.sMarketNo)
}
inline void HQ1001::set_smarketno(const char* value, size_t size) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1001.sMarketNo)
}
inline ::std::string* HQ1001::mutable_smarketno() {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1001.sMarketNo)
  return smarketno_;
}
inline ::std::string* HQ1001::release_smarketno() {
  clear_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = smarketno_;
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1001::set_allocated_smarketno(::std::string* smarketno) {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (smarketno) {
    set_has_smarketno();
    smarketno_ = smarketno;
  } else {
    clear_has_smarketno();
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1001.sMarketNo)
}

// required string sStockCode = 2;
inline bool HQ1001::has_sstockcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HQ1001::set_has_sstockcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HQ1001::clear_has_sstockcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HQ1001::clear_sstockcode() {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_->clear();
  }
  clear_has_sstockcode();
}
inline const ::std::string& HQ1001::sstockcode() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1001.sStockCode)
  return *sstockcode_;
}
inline void HQ1001::set_sstockcode(const ::std::string& value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1001.sStockCode)
}
inline void HQ1001::set_sstockcode(const char* value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1001.sStockCode)
}
inline void HQ1001::set_sstockcode(const char* value, size_t size) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1001.sStockCode)
}
inline ::std::string* HQ1001::mutable_sstockcode() {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1001.sStockCode)
  return sstockcode_;
}
inline ::std::string* HQ1001::release_sstockcode() {
  clear_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstockcode_;
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1001::set_allocated_sstockcode(::std::string* sstockcode) {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sstockcode) {
    set_has_sstockcode();
    sstockcode_ = sstockcode;
  } else {
    clear_has_sstockcode();
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1001.sStockCode)
}

// optional string sTimeStamp = 3;
inline bool HQ1001::has_stimestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HQ1001::set_has_stimestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HQ1001::clear_has_stimestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HQ1001::clear_stimestamp() {
  if (stimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_->clear();
  }
  clear_has_stimestamp();
}
inline const ::std::string& HQ1001::stimestamp() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1001.sTimeStamp)
  return *stimestamp_;
}
inline void HQ1001::set_stimestamp(const ::std::string& value) {
  set_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_ = new ::std::string;
  }
  stimestamp_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1001.sTimeStamp)
}
inline void HQ1001::set_stimestamp(const char* value) {
  set_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_ = new ::std::string;
  }
  stimestamp_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1001.sTimeStamp)
}
inline void HQ1001::set_stimestamp(const char* value, size_t size) {
  set_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_ = new ::std::string;
  }
  stimestamp_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1001.sTimeStamp)
}
inline ::std::string* HQ1001::mutable_stimestamp() {
  set_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1001.sTimeStamp)
  return stimestamp_;
}
inline ::std::string* HQ1001::release_stimestamp() {
  clear_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = stimestamp_;
    stimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1001::set_allocated_stimestamp(::std::string* stimestamp) {
  if (stimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stimestamp_;
  }
  if (stimestamp) {
    set_has_stimestamp();
    stimestamp_ = stimestamp;
  } else {
    clear_has_stimestamp();
    stimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1001.sTimeStamp)
}

// optional double dReferencePrice = 4;
inline bool HQ1001::has_dreferenceprice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HQ1001::set_has_dreferenceprice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HQ1001::clear_has_dreferenceprice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HQ1001::clear_dreferenceprice() {
  dreferenceprice_ = 0;
  clear_has_dreferenceprice();
}
inline double HQ1001::dreferenceprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1001.dReferencePrice)
  return dreferenceprice_;
}
inline void HQ1001::set_dreferenceprice(double value) {
  set_has_dreferenceprice();
  dreferenceprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1001.dReferencePrice)
}

// optional double dUpPrice = 5;
inline bool HQ1001::has_dupprice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HQ1001::set_has_dupprice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HQ1001::clear_has_dupprice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HQ1001::clear_dupprice() {
  dupprice_ = 0;
  clear_has_dupprice();
}
inline double HQ1001::dupprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1001.dUpPrice)
  return dupprice_;
}
inline void HQ1001::set_dupprice(double value) {
  set_has_dupprice();
  dupprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1001.dUpPrice)
}

// optional double dDownPrice = 6;
inline bool HQ1001::has_ddownprice() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HQ1001::set_has_ddownprice() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HQ1001::clear_has_ddownprice() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HQ1001::clear_ddownprice() {
  ddownprice_ = 0;
  clear_has_ddownprice();
}
inline double HQ1001::ddownprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1001.dDownPrice)
  return ddownprice_;
}
inline void HQ1001::set_ddownprice(double value) {
  set_has_ddownprice();
  ddownprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1001.dDownPrice)
}

// optional string sBeginTime = 7;
inline bool HQ1001::has_sbegintime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HQ1001::set_has_sbegintime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HQ1001::clear_has_sbegintime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HQ1001::clear_sbegintime() {
  if (sbegintime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbegintime_->clear();
  }
  clear_has_sbegintime();
}
inline const ::std::string& HQ1001::sbegintime() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1001.sBeginTime)
  return *sbegintime_;
}
inline void HQ1001::set_sbegintime(const ::std::string& value) {
  set_has_sbegintime();
  if (sbegintime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbegintime_ = new ::std::string;
  }
  sbegintime_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1001.sBeginTime)
}
inline void HQ1001::set_sbegintime(const char* value) {
  set_has_sbegintime();
  if (sbegintime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbegintime_ = new ::std::string;
  }
  sbegintime_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1001.sBeginTime)
}
inline void HQ1001::set_sbegintime(const char* value, size_t size) {
  set_has_sbegintime();
  if (sbegintime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbegintime_ = new ::std::string;
  }
  sbegintime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1001.sBeginTime)
}
inline ::std::string* HQ1001::mutable_sbegintime() {
  set_has_sbegintime();
  if (sbegintime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbegintime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1001.sBeginTime)
  return sbegintime_;
}
inline ::std::string* HQ1001::release_sbegintime() {
  clear_has_sbegintime();
  if (sbegintime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sbegintime_;
    sbegintime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1001::set_allocated_sbegintime(::std::string* sbegintime) {
  if (sbegintime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sbegintime_;
  }
  if (sbegintime) {
    set_has_sbegintime();
    sbegintime_ = sbegintime;
  } else {
    clear_has_sbegintime();
    sbegintime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1001.sBeginTime)
}

// optional string sEndTime = 8;
inline bool HQ1001::has_sendtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HQ1001::set_has_sendtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HQ1001::clear_has_sendtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HQ1001::clear_sendtime() {
  if (sendtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendtime_->clear();
  }
  clear_has_sendtime();
}
inline const ::std::string& HQ1001::sendtime() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1001.sEndTime)
  return *sendtime_;
}
inline void HQ1001::set_sendtime(const ::std::string& value) {
  set_has_sendtime();
  if (sendtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendtime_ = new ::std::string;
  }
  sendtime_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1001.sEndTime)
}
inline void HQ1001::set_sendtime(const char* value) {
  set_has_sendtime();
  if (sendtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendtime_ = new ::std::string;
  }
  sendtime_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1001.sEndTime)
}
inline void HQ1001::set_sendtime(const char* value, size_t size) {
  set_has_sendtime();
  if (sendtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendtime_ = new ::std::string;
  }
  sendtime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1001.sEndTime)
}
inline ::std::string* HQ1001::mutable_sendtime() {
  set_has_sendtime();
  if (sendtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendtime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1001.sEndTime)
  return sendtime_;
}
inline ::std::string* HQ1001::release_sendtime() {
  clear_has_sendtime();
  if (sendtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sendtime_;
    sendtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1001::set_allocated_sendtime(::std::string* sendtime) {
  if (sendtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sendtime_;
  }
  if (sendtime) {
    set_has_sendtime();
    sendtime_ = sendtime;
  } else {
    clear_has_sendtime();
    sendtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1001.sEndTime)
}

// -------------------------------------------------------------------

// HQ1001s

// repeated .HQStockPackage.HQ1001 rHQ1001 = 1;
inline int HQ1001s::rhq1001_size() const {
  return rhq1001_.size();
}
inline void HQ1001s::clear_rhq1001() {
  rhq1001_.Clear();
}
inline const ::HQStockPackage::HQ1001& HQ1001s::rhq1001(int index) const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1001s.rHQ1001)
  return rhq1001_.Get(index);
}
inline ::HQStockPackage::HQ1001* HQ1001s::mutable_rhq1001(int index) {
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1001s.rHQ1001)
  return rhq1001_.Mutable(index);
}
inline ::HQStockPackage::HQ1001* HQ1001s::add_rhq1001() {
  // @@protoc_insertion_point(field_add:HQStockPackage.HQ1001s.rHQ1001)
  return rhq1001_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1001 >&
HQ1001s::rhq1001() const {
  // @@protoc_insertion_point(field_list:HQStockPackage.HQ1001s.rHQ1001)
  return rhq1001_;
}
inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1001 >*
HQ1001s::mutable_rhq1001() {
  // @@protoc_insertion_point(field_mutable_list:HQStockPackage.HQ1001s.rHQ1001)
  return &rhq1001_;
}

// -------------------------------------------------------------------

// HQ1002

// required string sMarketNo = 1;
inline bool HQ1002::has_smarketno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HQ1002::set_has_smarketno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HQ1002::clear_has_smarketno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HQ1002::clear_smarketno() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_->clear();
  }
  clear_has_smarketno();
}
inline const ::std::string& HQ1002::smarketno() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1002.sMarketNo)
  return *smarketno_;
}
inline void HQ1002::set_smarketno(const ::std::string& value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1002.sMarketNo)
}
inline void HQ1002::set_smarketno(const char* value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1002.sMarketNo)
}
inline void HQ1002::set_smarketno(const char* value, size_t size) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1002.sMarketNo)
}
inline ::std::string* HQ1002::mutable_smarketno() {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1002.sMarketNo)
  return smarketno_;
}
inline ::std::string* HQ1002::release_smarketno() {
  clear_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = smarketno_;
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1002::set_allocated_smarketno(::std::string* smarketno) {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (smarketno) {
    set_has_smarketno();
    smarketno_ = smarketno;
  } else {
    clear_has_smarketno();
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1002.sMarketNo)
}

// required string sStockCode = 2;
inline bool HQ1002::has_sstockcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HQ1002::set_has_sstockcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HQ1002::clear_has_sstockcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HQ1002::clear_sstockcode() {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_->clear();
  }
  clear_has_sstockcode();
}
inline const ::std::string& HQ1002::sstockcode() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1002.sStockCode)
  return *sstockcode_;
}
inline void HQ1002::set_sstockcode(const ::std::string& value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1002.sStockCode)
}
inline void HQ1002::set_sstockcode(const char* value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1002.sStockCode)
}
inline void HQ1002::set_sstockcode(const char* value, size_t size) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1002.sStockCode)
}
inline ::std::string* HQ1002::mutable_sstockcode() {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1002.sStockCode)
  return sstockcode_;
}
inline ::std::string* HQ1002::release_sstockcode() {
  clear_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstockcode_;
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1002::set_allocated_sstockcode(::std::string* sstockcode) {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sstockcode) {
    set_has_sstockcode();
    sstockcode_ = sstockcode;
  } else {
    clear_has_sstockcode();
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1002.sStockCode)
}

// optional double dPopcPrice = 3;
inline bool HQ1002::has_dpopcprice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HQ1002::set_has_dpopcprice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HQ1002::clear_has_dpopcprice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HQ1002::clear_dpopcprice() {
  dpopcprice_ = 0;
  clear_has_dpopcprice();
}
inline double HQ1002::dpopcprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1002.dPopcPrice)
  return dpopcprice_;
}
inline void HQ1002::set_dpopcprice(double value) {
  set_has_dpopcprice();
  dpopcprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1002.dPopcPrice)
}

// optional double dSvol = 4;
inline bool HQ1002::has_dsvol() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HQ1002::set_has_dsvol() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HQ1002::clear_has_dsvol() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HQ1002::clear_dsvol() {
  dsvol_ = 0;
  clear_has_dsvol();
}
inline double HQ1002::dsvol() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1002.dSvol)
  return dsvol_;
}
inline void HQ1002::set_dsvol(double value) {
  set_has_dsvol();
  dsvol_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1002.dSvol)
}

// optional double dReferencePrice = 5;
inline bool HQ1002::has_dreferenceprice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HQ1002::set_has_dreferenceprice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HQ1002::clear_has_dreferenceprice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HQ1002::clear_dreferenceprice() {
  dreferenceprice_ = 0;
  clear_has_dreferenceprice();
}
inline double HQ1002::dreferenceprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1002.dReferencePrice)
  return dreferenceprice_;
}
inline void HQ1002::set_dreferenceprice(double value) {
  set_has_dreferenceprice();
  dreferenceprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1002.dReferencePrice)
}

// optional double dUpPrice = 6;
inline bool HQ1002::has_dupprice() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HQ1002::set_has_dupprice() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HQ1002::clear_has_dupprice() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HQ1002::clear_dupprice() {
  dupprice_ = 0;
  clear_has_dupprice();
}
inline double HQ1002::dupprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1002.dUpPrice)
  return dupprice_;
}
inline void HQ1002::set_dupprice(double value) {
  set_has_dupprice();
  dupprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1002.dUpPrice)
}

// optional double dDownPrice = 7;
inline bool HQ1002::has_ddownprice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HQ1002::set_has_ddownprice() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HQ1002::clear_has_ddownprice() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HQ1002::clear_ddownprice() {
  ddownprice_ = 0;
  clear_has_ddownprice();
}
inline double HQ1002::ddownprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1002.dDownPrice)
  return ddownprice_;
}
inline void HQ1002::set_ddownprice(double value) {
  set_has_ddownprice();
  ddownprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1002.dDownPrice)
}

// optional double dAmount = 8;
inline bool HQ1002::has_damount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HQ1002::set_has_damount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HQ1002::clear_has_damount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HQ1002::clear_damount() {
  damount_ = 0;
  clear_has_damount();
}
inline double HQ1002::damount() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1002.dAmount)
  return damount_;
}
inline void HQ1002::set_damount(double value) {
  set_has_damount();
  damount_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1002.dAmount)
}

// optional string sOrdImbDirection = 9;
inline bool HQ1002::has_sordimbdirection() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HQ1002::set_has_sordimbdirection() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HQ1002::clear_has_sordimbdirection() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HQ1002::clear_sordimbdirection() {
  if (sordimbdirection_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sordimbdirection_->clear();
  }
  clear_has_sordimbdirection();
}
inline const ::std::string& HQ1002::sordimbdirection() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1002.sOrdImbDirection)
  return *sordimbdirection_;
}
inline void HQ1002::set_sordimbdirection(const ::std::string& value) {
  set_has_sordimbdirection();
  if (sordimbdirection_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sordimbdirection_ = new ::std::string;
  }
  sordimbdirection_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1002.sOrdImbDirection)
}
inline void HQ1002::set_sordimbdirection(const char* value) {
  set_has_sordimbdirection();
  if (sordimbdirection_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sordimbdirection_ = new ::std::string;
  }
  sordimbdirection_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1002.sOrdImbDirection)
}
inline void HQ1002::set_sordimbdirection(const char* value, size_t size) {
  set_has_sordimbdirection();
  if (sordimbdirection_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sordimbdirection_ = new ::std::string;
  }
  sordimbdirection_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1002.sOrdImbDirection)
}
inline ::std::string* HQ1002::mutable_sordimbdirection() {
  set_has_sordimbdirection();
  if (sordimbdirection_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sordimbdirection_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1002.sOrdImbDirection)
  return sordimbdirection_;
}
inline ::std::string* HQ1002::release_sordimbdirection() {
  clear_has_sordimbdirection();
  if (sordimbdirection_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sordimbdirection_;
    sordimbdirection_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1002::set_allocated_sordimbdirection(::std::string* sordimbdirection) {
  if (sordimbdirection_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sordimbdirection_;
  }
  if (sordimbdirection) {
    set_has_sordimbdirection();
    sordimbdirection_ = sordimbdirection;
  } else {
    clear_has_sordimbdirection();
    sordimbdirection_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1002.sOrdImbDirection)
}

// optional string sTimeStamp = 10;
inline bool HQ1002::has_stimestamp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void HQ1002::set_has_stimestamp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void HQ1002::clear_has_stimestamp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void HQ1002::clear_stimestamp() {
  if (stimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_->clear();
  }
  clear_has_stimestamp();
}
inline const ::std::string& HQ1002::stimestamp() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1002.sTimeStamp)
  return *stimestamp_;
}
inline void HQ1002::set_stimestamp(const ::std::string& value) {
  set_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_ = new ::std::string;
  }
  stimestamp_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1002.sTimeStamp)
}
inline void HQ1002::set_stimestamp(const char* value) {
  set_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_ = new ::std::string;
  }
  stimestamp_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1002.sTimeStamp)
}
inline void HQ1002::set_stimestamp(const char* value, size_t size) {
  set_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_ = new ::std::string;
  }
  stimestamp_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1002.sTimeStamp)
}
inline ::std::string* HQ1002::mutable_stimestamp() {
  set_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1002.sTimeStamp)
  return stimestamp_;
}
inline ::std::string* HQ1002::release_stimestamp() {
  clear_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = stimestamp_;
    stimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1002::set_allocated_stimestamp(::std::string* stimestamp) {
  if (stimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stimestamp_;
  }
  if (stimestamp) {
    set_has_stimestamp();
    stimestamp_ = stimestamp;
  } else {
    clear_has_stimestamp();
    stimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1002.sTimeStamp)
}

// -------------------------------------------------------------------

// HQ1002s

// repeated .HQStockPackage.HQ1002 rHQ1002 = 1;
inline int HQ1002s::rhq1002_size() const {
  return rhq1002_.size();
}
inline void HQ1002s::clear_rhq1002() {
  rhq1002_.Clear();
}
inline const ::HQStockPackage::HQ1002& HQ1002s::rhq1002(int index) const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1002s.rHQ1002)
  return rhq1002_.Get(index);
}
inline ::HQStockPackage::HQ1002* HQ1002s::mutable_rhq1002(int index) {
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1002s.rHQ1002)
  return rhq1002_.Mutable(index);
}
inline ::HQStockPackage::HQ1002* HQ1002s::add_rhq1002() {
  // @@protoc_insertion_point(field_add:HQStockPackage.HQ1002s.rHQ1002)
  return rhq1002_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1002 >&
HQ1002s::rhq1002() const {
  // @@protoc_insertion_point(field_list:HQStockPackage.HQ1002s.rHQ1002)
  return rhq1002_;
}
inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1002 >*
HQ1002s::mutable_rhq1002() {
  // @@protoc_insertion_point(field_mutable_list:HQStockPackage.HQ1002s.rHQ1002)
  return &rhq1002_;
}

// -------------------------------------------------------------------

// HQ1006

// required string sMarketNo = 1;
inline bool HQ1006::has_smarketno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HQ1006::set_has_smarketno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HQ1006::clear_has_smarketno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HQ1006::clear_smarketno() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_->clear();
  }
  clear_has_smarketno();
}
inline const ::std::string& HQ1006::smarketno() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1006.sMarketNo)
  return *smarketno_;
}
inline void HQ1006::set_smarketno(const ::std::string& value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1006.sMarketNo)
}
inline void HQ1006::set_smarketno(const char* value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1006.sMarketNo)
}
inline void HQ1006::set_smarketno(const char* value, size_t size) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1006.sMarketNo)
}
inline ::std::string* HQ1006::mutable_smarketno() {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1006.sMarketNo)
  return smarketno_;
}
inline ::std::string* HQ1006::release_smarketno() {
  clear_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = smarketno_;
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1006::set_allocated_smarketno(::std::string* smarketno) {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (smarketno) {
    set_has_smarketno();
    smarketno_ = smarketno;
  } else {
    clear_has_smarketno();
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1006.sMarketNo)
}

// required string sStockCode = 2;
inline bool HQ1006::has_sstockcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HQ1006::set_has_sstockcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HQ1006::clear_has_sstockcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HQ1006::clear_sstockcode() {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_->clear();
  }
  clear_has_sstockcode();
}
inline const ::std::string& HQ1006::sstockcode() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1006.sStockCode)
  return *sstockcode_;
}
inline void HQ1006::set_sstockcode(const ::std::string& value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1006.sStockCode)
}
inline void HQ1006::set_sstockcode(const char* value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1006.sStockCode)
}
inline void HQ1006::set_sstockcode(const char* value, size_t size) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1006.sStockCode)
}
inline ::std::string* HQ1006::mutable_sstockcode() {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1006.sStockCode)
  return sstockcode_;
}
inline ::std::string* HQ1006::release_sstockcode() {
  clear_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstockcode_;
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1006::set_allocated_sstockcode(::std::string* sstockcode) {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sstockcode) {
    set_has_sstockcode();
    sstockcode_ = sstockcode;
  } else {
    clear_has_sstockcode();
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1006.sStockCode)
}

// optional string sTradeStatus = 3;
inline bool HQ1006::has_stradestatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HQ1006::set_has_stradestatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HQ1006::clear_has_stradestatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HQ1006::clear_stradestatus() {
  if (stradestatus_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradestatus_->clear();
  }
  clear_has_stradestatus();
}
inline const ::std::string& HQ1006::stradestatus() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1006.sTradeStatus)
  return *stradestatus_;
}
inline void HQ1006::set_stradestatus(const ::std::string& value) {
  set_has_stradestatus();
  if (stradestatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradestatus_ = new ::std::string;
  }
  stradestatus_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1006.sTradeStatus)
}
inline void HQ1006::set_stradestatus(const char* value) {
  set_has_stradestatus();
  if (stradestatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradestatus_ = new ::std::string;
  }
  stradestatus_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1006.sTradeStatus)
}
inline void HQ1006::set_stradestatus(const char* value, size_t size) {
  set_has_stradestatus();
  if (stradestatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradestatus_ = new ::std::string;
  }
  stradestatus_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1006.sTradeStatus)
}
inline ::std::string* HQ1006::mutable_stradestatus() {
  set_has_stradestatus();
  if (stradestatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradestatus_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1006.sTradeStatus)
  return stradestatus_;
}
inline ::std::string* HQ1006::release_stradestatus() {
  clear_has_stradestatus();
  if (stradestatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = stradestatus_;
    stradestatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1006::set_allocated_stradestatus(::std::string* stradestatus) {
  if (stradestatus_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stradestatus_;
  }
  if (stradestatus) {
    set_has_stradestatus();
    stradestatus_ = stradestatus;
  } else {
    clear_has_stradestatus();
    stradestatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1006.sTradeStatus)
}

// optional double dNominalPrice = 4;
inline bool HQ1006::has_dnominalprice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HQ1006::set_has_dnominalprice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HQ1006::clear_has_dnominalprice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HQ1006::clear_dnominalprice() {
  dnominalprice_ = 0;
  clear_has_dnominalprice();
}
inline double HQ1006::dnominalprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1006.dNominalPrice)
  return dnominalprice_;
}
inline void HQ1006::set_dnominalprice(double value) {
  set_has_dnominalprice();
  dnominalprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1006.dNominalPrice)
}

// -------------------------------------------------------------------

// HQ1006s

// repeated .HQStockPackage.HQ1006 rHQ1006 = 1;
inline int HQ1006s::rhq1006_size() const {
  return rhq1006_.size();
}
inline void HQ1006s::clear_rhq1006() {
  rhq1006_.Clear();
}
inline const ::HQStockPackage::HQ1006& HQ1006s::rhq1006(int index) const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1006s.rHQ1006)
  return rhq1006_.Get(index);
}
inline ::HQStockPackage::HQ1006* HQ1006s::mutable_rhq1006(int index) {
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1006s.rHQ1006)
  return rhq1006_.Mutable(index);
}
inline ::HQStockPackage::HQ1006* HQ1006s::add_rhq1006() {
  // @@protoc_insertion_point(field_add:HQStockPackage.HQ1006s.rHQ1006)
  return rhq1006_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1006 >&
HQ1006s::rhq1006() const {
  // @@protoc_insertion_point(field_list:HQStockPackage.HQ1006s.rHQ1006)
  return rhq1006_;
}
inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1006 >*
HQ1006s::mutable_rhq1006() {
  // @@protoc_insertion_point(field_mutable_list:HQStockPackage.HQ1006s.rHQ1006)
  return &rhq1006_;
}

// -------------------------------------------------------------------

// HQ1011

// required string sMarketNo = 1;
inline bool HQ1011::has_smarketno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HQ1011::set_has_smarketno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HQ1011::clear_has_smarketno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HQ1011::clear_smarketno() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_->clear();
  }
  clear_has_smarketno();
}
inline const ::std::string& HQ1011::smarketno() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1011.sMarketNo)
  return *smarketno_;
}
inline void HQ1011::set_smarketno(const ::std::string& value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1011.sMarketNo)
}
inline void HQ1011::set_smarketno(const char* value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1011.sMarketNo)
}
inline void HQ1011::set_smarketno(const char* value, size_t size) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1011.sMarketNo)
}
inline ::std::string* HQ1011::mutable_smarketno() {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1011.sMarketNo)
  return smarketno_;
}
inline ::std::string* HQ1011::release_smarketno() {
  clear_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = smarketno_;
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1011::set_allocated_smarketno(::std::string* smarketno) {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (smarketno) {
    set_has_smarketno();
    smarketno_ = smarketno;
  } else {
    clear_has_smarketno();
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1011.sMarketNo)
}

// required string sStockCode = 2;
inline bool HQ1011::has_sstockcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HQ1011::set_has_sstockcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HQ1011::clear_has_sstockcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HQ1011::clear_sstockcode() {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_->clear();
  }
  clear_has_sstockcode();
}
inline const ::std::string& HQ1011::sstockcode() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1011.sStockCode)
  return *sstockcode_;
}
inline void HQ1011::set_sstockcode(const ::std::string& value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1011.sStockCode)
}
inline void HQ1011::set_sstockcode(const char* value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1011.sStockCode)
}
inline void HQ1011::set_sstockcode(const char* value, size_t size) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1011.sStockCode)
}
inline ::std::string* HQ1011::mutable_sstockcode() {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1011.sStockCode)
  return sstockcode_;
}
inline ::std::string* HQ1011::release_sstockcode() {
  clear_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstockcode_;
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1011::set_allocated_sstockcode(::std::string* sstockcode) {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sstockcode) {
    set_has_sstockcode();
    sstockcode_ = sstockcode;
  } else {
    clear_has_sstockcode();
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1011.sStockCode)
}

// optional string sTimeStamp = 3;
inline bool HQ1011::has_stimestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HQ1011::set_has_stimestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HQ1011::clear_has_stimestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HQ1011::clear_stimestamp() {
  if (stimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_->clear();
  }
  clear_has_stimestamp();
}
inline const ::std::string& HQ1011::stimestamp() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1011.sTimeStamp)
  return *stimestamp_;
}
inline void HQ1011::set_stimestamp(const ::std::string& value) {
  set_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_ = new ::std::string;
  }
  stimestamp_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1011.sTimeStamp)
}
inline void HQ1011::set_stimestamp(const char* value) {
  set_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_ = new ::std::string;
  }
  stimestamp_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1011.sTimeStamp)
}
inline void HQ1011::set_stimestamp(const char* value, size_t size) {
  set_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_ = new ::std::string;
  }
  stimestamp_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1011.sTimeStamp)
}
inline ::std::string* HQ1011::mutable_stimestamp() {
  set_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1011.sTimeStamp)
  return stimestamp_;
}
inline ::std::string* HQ1011::release_stimestamp() {
  clear_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = stimestamp_;
    stimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1011::set_allocated_stimestamp(::std::string* stimestamp) {
  if (stimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stimestamp_;
  }
  if (stimestamp) {
    set_has_stimestamp();
    stimestamp_ = stimestamp;
  } else {
    clear_has_stimestamp();
    stimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1011.sTimeStamp)
}

// optional int64 dSpecialMark = 4;
inline bool HQ1011::has_dspecialmark() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HQ1011::set_has_dspecialmark() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HQ1011::clear_has_dspecialmark() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HQ1011::clear_dspecialmark() {
  dspecialmark_ = GOOGLE_LONGLONG(0);
  clear_has_dspecialmark();
}
inline ::google::protobuf::int64 HQ1011::dspecialmark() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1011.dSpecialMark)
  return dspecialmark_;
}
inline void HQ1011::set_dspecialmark(::google::protobuf::int64 value) {
  set_has_dspecialmark();
  dspecialmark_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1011.dSpecialMark)
}

// -------------------------------------------------------------------

// HQ1011s

// repeated .HQStockPackage.HQ1011 rHQ1011 = 1;
inline int HQ1011s::rhq1011_size() const {
  return rhq1011_.size();
}
inline void HQ1011s::clear_rhq1011() {
  rhq1011_.Clear();
}
inline const ::HQStockPackage::HQ1011& HQ1011s::rhq1011(int index) const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1011s.rHQ1011)
  return rhq1011_.Get(index);
}
inline ::HQStockPackage::HQ1011* HQ1011s::mutable_rhq1011(int index) {
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1011s.rHQ1011)
  return rhq1011_.Mutable(index);
}
inline ::HQStockPackage::HQ1011* HQ1011s::add_rhq1011() {
  // @@protoc_insertion_point(field_add:HQStockPackage.HQ1011s.rHQ1011)
  return rhq1011_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1011 >&
HQ1011s::rhq1011() const {
  // @@protoc_insertion_point(field_list:HQStockPackage.HQ1011s.rHQ1011)
  return rhq1011_;
}
inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1011 >*
HQ1011s::mutable_rhq1011() {
  // @@protoc_insertion_point(field_mutable_list:HQStockPackage.HQ1011s.rHQ1011)
  return &rhq1011_;
}

// -------------------------------------------------------------------

// HQ1013

// required string sMarketNo = 1;
inline bool HQ1013::has_smarketno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HQ1013::set_has_smarketno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HQ1013::clear_has_smarketno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HQ1013::clear_smarketno() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_->clear();
  }
  clear_has_smarketno();
}
inline const ::std::string& HQ1013::smarketno() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1013.sMarketNo)
  return *smarketno_;
}
inline void HQ1013::set_smarketno(const ::std::string& value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1013.sMarketNo)
}
inline void HQ1013::set_smarketno(const char* value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1013.sMarketNo)
}
inline void HQ1013::set_smarketno(const char* value, size_t size) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1013.sMarketNo)
}
inline ::std::string* HQ1013::mutable_smarketno() {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1013.sMarketNo)
  return smarketno_;
}
inline ::std::string* HQ1013::release_smarketno() {
  clear_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = smarketno_;
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1013::set_allocated_smarketno(::std::string* smarketno) {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (smarketno) {
    set_has_smarketno();
    smarketno_ = smarketno;
  } else {
    clear_has_smarketno();
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1013.sMarketNo)
}

// required string sRecordNo = 2;
inline bool HQ1013::has_srecordno() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HQ1013::set_has_srecordno() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HQ1013::clear_has_srecordno() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HQ1013::clear_srecordno() {
  if (srecordno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srecordno_->clear();
  }
  clear_has_srecordno();
}
inline const ::std::string& HQ1013::srecordno() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1013.sRecordNo)
  return *srecordno_;
}
inline void HQ1013::set_srecordno(const ::std::string& value) {
  set_has_srecordno();
  if (srecordno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srecordno_ = new ::std::string;
  }
  srecordno_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1013.sRecordNo)
}
inline void HQ1013::set_srecordno(const char* value) {
  set_has_srecordno();
  if (srecordno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srecordno_ = new ::std::string;
  }
  srecordno_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1013.sRecordNo)
}
inline void HQ1013::set_srecordno(const char* value, size_t size) {
  set_has_srecordno();
  if (srecordno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srecordno_ = new ::std::string;
  }
  srecordno_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1013.sRecordNo)
}
inline ::std::string* HQ1013::mutable_srecordno() {
  set_has_srecordno();
  if (srecordno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srecordno_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1013.sRecordNo)
  return srecordno_;
}
inline ::std::string* HQ1013::release_srecordno() {
  clear_has_srecordno();
  if (srecordno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = srecordno_;
    srecordno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1013::set_allocated_srecordno(::std::string* srecordno) {
  if (srecordno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srecordno_;
  }
  if (srecordno) {
    set_has_srecordno();
    srecordno_ = srecordno;
  } else {
    clear_has_srecordno();
    srecordno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1013.sRecordNo)
}

// required string sReportSeat = 3;
inline bool HQ1013::has_sreportseat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HQ1013::set_has_sreportseat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HQ1013::clear_has_sreportseat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HQ1013::clear_sreportseat() {
  if (sreportseat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sreportseat_->clear();
  }
  clear_has_sreportseat();
}
inline const ::std::string& HQ1013::sreportseat() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1013.sReportSeat)
  return *sreportseat_;
}
inline void HQ1013::set_sreportseat(const ::std::string& value) {
  set_has_sreportseat();
  if (sreportseat_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sreportseat_ = new ::std::string;
  }
  sreportseat_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1013.sReportSeat)
}
inline void HQ1013::set_sreportseat(const char* value) {
  set_has_sreportseat();
  if (sreportseat_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sreportseat_ = new ::std::string;
  }
  sreportseat_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1013.sReportSeat)
}
inline void HQ1013::set_sreportseat(const char* value, size_t size) {
  set_has_sreportseat();
  if (sreportseat_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sreportseat_ = new ::std::string;
  }
  sreportseat_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1013.sReportSeat)
}
inline ::std::string* HQ1013::mutable_sreportseat() {
  set_has_sreportseat();
  if (sreportseat_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sreportseat_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1013.sReportSeat)
  return sreportseat_;
}
inline ::std::string* HQ1013::release_sreportseat() {
  clear_has_sreportseat();
  if (sreportseat_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sreportseat_;
    sreportseat_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1013::set_allocated_sreportseat(::std::string* sreportseat) {
  if (sreportseat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sreportseat_;
  }
  if (sreportseat) {
    set_has_sreportseat();
    sreportseat_ = sreportseat;
  } else {
    clear_has_sreportseat();
    sreportseat_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1013.sReportSeat)
}

// optional string sStockCode = 4;
inline bool HQ1013::has_sstockcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HQ1013::set_has_sstockcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HQ1013::clear_has_sstockcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HQ1013::clear_sstockcode() {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_->clear();
  }
  clear_has_sstockcode();
}
inline const ::std::string& HQ1013::sstockcode() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1013.sStockCode)
  return *sstockcode_;
}
inline void HQ1013::set_sstockcode(const ::std::string& value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1013.sStockCode)
}
inline void HQ1013::set_sstockcode(const char* value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1013.sStockCode)
}
inline void HQ1013::set_sstockcode(const char* value, size_t size) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1013.sStockCode)
}
inline ::std::string* HQ1013::mutable_sstockcode() {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1013.sStockCode)
  return sstockcode_;
}
inline ::std::string* HQ1013::release_sstockcode() {
  clear_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstockcode_;
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1013::set_allocated_sstockcode(::std::string* sstockcode) {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sstockcode) {
    set_has_sstockcode();
    sstockcode_ = sstockcode;
  } else {
    clear_has_sstockcode();
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1013.sStockCode)
}

// optional double dEntrustPrice = 5;
inline bool HQ1013::has_dentrustprice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HQ1013::set_has_dentrustprice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HQ1013::clear_has_dentrustprice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HQ1013::clear_dentrustprice() {
  dentrustprice_ = 0;
  clear_has_dentrustprice();
}
inline double HQ1013::dentrustprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1013.dEntrustPrice)
  return dentrustprice_;
}
inline void HQ1013::set_dentrustprice(double value) {
  set_has_dentrustprice();
  dentrustprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1013.dEntrustPrice)
}

// optional double dEntrustAmount = 6;
inline bool HQ1013::has_dentrustamount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HQ1013::set_has_dentrustamount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HQ1013::clear_has_dentrustamount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HQ1013::clear_dentrustamount() {
  dentrustamount_ = 0;
  clear_has_dentrustamount();
}
inline double HQ1013::dentrustamount() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1013.dEntrustAmount)
  return dentrustamount_;
}
inline void HQ1013::set_dentrustamount(double value) {
  set_has_dentrustamount();
  dentrustamount_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1013.dEntrustAmount)
}

// optional string sSide = 7;
inline bool HQ1013::has_sside() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HQ1013::set_has_sside() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HQ1013::clear_has_sside() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HQ1013::clear_sside() {
  if (sside_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sside_->clear();
  }
  clear_has_sside();
}
inline const ::std::string& HQ1013::sside() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1013.sSide)
  return *sside_;
}
inline void HQ1013::set_sside(const ::std::string& value) {
  set_has_sside();
  if (sside_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sside_ = new ::std::string;
  }
  sside_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1013.sSide)
}
inline void HQ1013::set_sside(const char* value) {
  set_has_sside();
  if (sside_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sside_ = new ::std::string;
  }
  sside_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1013.sSide)
}
inline void HQ1013::set_sside(const char* value, size_t size) {
  set_has_sside();
  if (sside_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sside_ = new ::std::string;
  }
  sside_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1013.sSide)
}
inline ::std::string* HQ1013::mutable_sside() {
  set_has_sside();
  if (sside_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sside_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1013.sSide)
  return sside_;
}
inline ::std::string* HQ1013::release_sside() {
  clear_has_sside();
  if (sside_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sside_;
    sside_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1013::set_allocated_sside(::std::string* sside) {
  if (sside_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sside_;
  }
  if (sside) {
    set_has_sside();
    sside_ = sside;
  } else {
    clear_has_sside();
    sside_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1013.sSide)
}

// optional bytes sContactInfo = 8;
inline bool HQ1013::has_scontactinfo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HQ1013::set_has_scontactinfo() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HQ1013::clear_has_scontactinfo() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HQ1013::clear_scontactinfo() {
  if (scontactinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scontactinfo_->clear();
  }
  clear_has_scontactinfo();
}
inline const ::std::string& HQ1013::scontactinfo() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1013.sContactInfo)
  return *scontactinfo_;
}
inline void HQ1013::set_scontactinfo(const ::std::string& value) {
  set_has_scontactinfo();
  if (scontactinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scontactinfo_ = new ::std::string;
  }
  scontactinfo_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1013.sContactInfo)
}
inline void HQ1013::set_scontactinfo(const char* value) {
  set_has_scontactinfo();
  if (scontactinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scontactinfo_ = new ::std::string;
  }
  scontactinfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1013.sContactInfo)
}
inline void HQ1013::set_scontactinfo(const void* value, size_t size) {
  set_has_scontactinfo();
  if (scontactinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scontactinfo_ = new ::std::string;
  }
  scontactinfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1013.sContactInfo)
}
inline ::std::string* HQ1013::mutable_scontactinfo() {
  set_has_scontactinfo();
  if (scontactinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scontactinfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1013.sContactInfo)
  return scontactinfo_;
}
inline ::std::string* HQ1013::release_scontactinfo() {
  clear_has_scontactinfo();
  if (scontactinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = scontactinfo_;
    scontactinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1013::set_allocated_scontactinfo(::std::string* scontactinfo) {
  if (scontactinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scontactinfo_;
  }
  if (scontactinfo) {
    set_has_scontactinfo();
    scontactinfo_ = scontactinfo;
  } else {
    clear_has_scontactinfo();
    scontactinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1013.sContactInfo)
}

// required string sTransactDate = 9;
inline bool HQ1013::has_stransactdate() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HQ1013::set_has_stransactdate() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HQ1013::clear_has_stransactdate() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HQ1013::clear_stransactdate() {
  if (stransactdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stransactdate_->clear();
  }
  clear_has_stransactdate();
}
inline const ::std::string& HQ1013::stransactdate() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1013.sTransactDate)
  return *stransactdate_;
}
inline void HQ1013::set_stransactdate(const ::std::string& value) {
  set_has_stransactdate();
  if (stransactdate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stransactdate_ = new ::std::string;
  }
  stransactdate_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1013.sTransactDate)
}
inline void HQ1013::set_stransactdate(const char* value) {
  set_has_stransactdate();
  if (stransactdate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stransactdate_ = new ::std::string;
  }
  stransactdate_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1013.sTransactDate)
}
inline void HQ1013::set_stransactdate(const char* value, size_t size) {
  set_has_stransactdate();
  if (stransactdate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stransactdate_ = new ::std::string;
  }
  stransactdate_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1013.sTransactDate)
}
inline ::std::string* HQ1013::mutable_stransactdate() {
  set_has_stransactdate();
  if (stransactdate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stransactdate_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1013.sTransactDate)
  return stransactdate_;
}
inline ::std::string* HQ1013::release_stransactdate() {
  clear_has_stransactdate();
  if (stransactdate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = stransactdate_;
    stransactdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1013::set_allocated_stransactdate(::std::string* stransactdate) {
  if (stransactdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stransactdate_;
  }
  if (stransactdate) {
    set_has_stransactdate();
    stransactdate_ = stransactdate;
  } else {
    clear_has_stransactdate();
    stransactdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1013.sTransactDate)
}

// optional string sTransactTime = 10;
inline bool HQ1013::has_stransacttime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void HQ1013::set_has_stransacttime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void HQ1013::clear_has_stransacttime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void HQ1013::clear_stransacttime() {
  if (stransacttime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stransacttime_->clear();
  }
  clear_has_stransacttime();
}
inline const ::std::string& HQ1013::stransacttime() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1013.sTransactTime)
  return *stransacttime_;
}
inline void HQ1013::set_stransacttime(const ::std::string& value) {
  set_has_stransacttime();
  if (stransacttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stransacttime_ = new ::std::string;
  }
  stransacttime_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1013.sTransactTime)
}
inline void HQ1013::set_stransacttime(const char* value) {
  set_has_stransacttime();
  if (stransacttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stransacttime_ = new ::std::string;
  }
  stransacttime_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1013.sTransactTime)
}
inline void HQ1013::set_stransacttime(const char* value, size_t size) {
  set_has_stransacttime();
  if (stransacttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stransacttime_ = new ::std::string;
  }
  stransacttime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1013.sTransactTime)
}
inline ::std::string* HQ1013::mutable_stransacttime() {
  set_has_stransacttime();
  if (stransacttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stransacttime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1013.sTransactTime)
  return stransacttime_;
}
inline ::std::string* HQ1013::release_stransacttime() {
  clear_has_stransacttime();
  if (stransacttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = stransacttime_;
    stransacttime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1013::set_allocated_stransacttime(::std::string* stransacttime) {
  if (stransacttime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stransacttime_;
  }
  if (stransacttime) {
    set_has_stransacttime();
    stransacttime_ = stransacttime;
  } else {
    clear_has_stransacttime();
    stransacttime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1013.sTransactTime)
}

// optional string sTransType = 11;
inline bool HQ1013::has_stranstype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void HQ1013::set_has_stranstype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void HQ1013::clear_has_stranstype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void HQ1013::clear_stranstype() {
  if (stranstype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stranstype_->clear();
  }
  clear_has_stranstype();
}
inline const ::std::string& HQ1013::stranstype() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1013.sTransType)
  return *stranstype_;
}
inline void HQ1013::set_stranstype(const ::std::string& value) {
  set_has_stranstype();
  if (stranstype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stranstype_ = new ::std::string;
  }
  stranstype_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1013.sTransType)
}
inline void HQ1013::set_stranstype(const char* value) {
  set_has_stranstype();
  if (stranstype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stranstype_ = new ::std::string;
  }
  stranstype_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1013.sTransType)
}
inline void HQ1013::set_stranstype(const char* value, size_t size) {
  set_has_stranstype();
  if (stranstype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stranstype_ = new ::std::string;
  }
  stranstype_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1013.sTransType)
}
inline ::std::string* HQ1013::mutable_stranstype() {
  set_has_stranstype();
  if (stranstype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stranstype_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1013.sTransType)
  return stranstype_;
}
inline ::std::string* HQ1013::release_stranstype() {
  clear_has_stranstype();
  if (stranstype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = stranstype_;
    stranstype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1013::set_allocated_stranstype(::std::string* stranstype) {
  if (stranstype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stranstype_;
  }
  if (stranstype) {
    set_has_stranstype();
    stranstype_ = stranstype;
  } else {
    clear_has_stranstype();
    stranstype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1013.sTransType)
}

// optional string sConfirmID = 12;
inline bool HQ1013::has_sconfirmid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void HQ1013::set_has_sconfirmid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void HQ1013::clear_has_sconfirmid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void HQ1013::clear_sconfirmid() {
  if (sconfirmid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sconfirmid_->clear();
  }
  clear_has_sconfirmid();
}
inline const ::std::string& HQ1013::sconfirmid() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1013.sConfirmID)
  return *sconfirmid_;
}
inline void HQ1013::set_sconfirmid(const ::std::string& value) {
  set_has_sconfirmid();
  if (sconfirmid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sconfirmid_ = new ::std::string;
  }
  sconfirmid_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1013.sConfirmID)
}
inline void HQ1013::set_sconfirmid(const char* value) {
  set_has_sconfirmid();
  if (sconfirmid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sconfirmid_ = new ::std::string;
  }
  sconfirmid_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1013.sConfirmID)
}
inline void HQ1013::set_sconfirmid(const char* value, size_t size) {
  set_has_sconfirmid();
  if (sconfirmid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sconfirmid_ = new ::std::string;
  }
  sconfirmid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1013.sConfirmID)
}
inline ::std::string* HQ1013::mutable_sconfirmid() {
  set_has_sconfirmid();
  if (sconfirmid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sconfirmid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1013.sConfirmID)
  return sconfirmid_;
}
inline ::std::string* HQ1013::release_sconfirmid() {
  clear_has_sconfirmid();
  if (sconfirmid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sconfirmid_;
    sconfirmid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1013::set_allocated_sconfirmid(::std::string* sconfirmid) {
  if (sconfirmid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sconfirmid_;
  }
  if (sconfirmid) {
    set_has_sconfirmid();
    sconfirmid_ = sconfirmid;
  } else {
    clear_has_sconfirmid();
    sconfirmid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1013.sConfirmID)
}

// optional string sBulkunderweightFlag = 13;
inline bool HQ1013::has_sbulkunderweightflag() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void HQ1013::set_has_sbulkunderweightflag() {
  _has_bits_[0] |= 0x00001000u;
}
inline void HQ1013::clear_has_sbulkunderweightflag() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void HQ1013::clear_sbulkunderweightflag() {
  if (sbulkunderweightflag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbulkunderweightflag_->clear();
  }
  clear_has_sbulkunderweightflag();
}
inline const ::std::string& HQ1013::sbulkunderweightflag() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1013.sBulkunderweightFlag)
  return *sbulkunderweightflag_;
}
inline void HQ1013::set_sbulkunderweightflag(const ::std::string& value) {
  set_has_sbulkunderweightflag();
  if (sbulkunderweightflag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbulkunderweightflag_ = new ::std::string;
  }
  sbulkunderweightflag_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1013.sBulkunderweightFlag)
}
inline void HQ1013::set_sbulkunderweightflag(const char* value) {
  set_has_sbulkunderweightflag();
  if (sbulkunderweightflag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbulkunderweightflag_ = new ::std::string;
  }
  sbulkunderweightflag_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1013.sBulkunderweightFlag)
}
inline void HQ1013::set_sbulkunderweightflag(const char* value, size_t size) {
  set_has_sbulkunderweightflag();
  if (sbulkunderweightflag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbulkunderweightflag_ = new ::std::string;
  }
  sbulkunderweightflag_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1013.sBulkunderweightFlag)
}
inline ::std::string* HQ1013::mutable_sbulkunderweightflag() {
  set_has_sbulkunderweightflag();
  if (sbulkunderweightflag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbulkunderweightflag_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1013.sBulkunderweightFlag)
  return sbulkunderweightflag_;
}
inline ::std::string* HQ1013::release_sbulkunderweightflag() {
  clear_has_sbulkunderweightflag();
  if (sbulkunderweightflag_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sbulkunderweightflag_;
    sbulkunderweightflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1013::set_allocated_sbulkunderweightflag(::std::string* sbulkunderweightflag) {
  if (sbulkunderweightflag_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sbulkunderweightflag_;
  }
  if (sbulkunderweightflag) {
    set_has_sbulkunderweightflag();
    sbulkunderweightflag_ = sbulkunderweightflag;
  } else {
    clear_has_sbulkunderweightflag();
    sbulkunderweightflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1013.sBulkunderweightFlag)
}

// optional string sExecType = 14;
inline bool HQ1013::has_sexectype() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void HQ1013::set_has_sexectype() {
  _has_bits_[0] |= 0x00002000u;
}
inline void HQ1013::clear_has_sexectype() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void HQ1013::clear_sexectype() {
  if (sexectype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sexectype_->clear();
  }
  clear_has_sexectype();
}
inline const ::std::string& HQ1013::sexectype() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1013.sExecType)
  return *sexectype_;
}
inline void HQ1013::set_sexectype(const ::std::string& value) {
  set_has_sexectype();
  if (sexectype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sexectype_ = new ::std::string;
  }
  sexectype_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1013.sExecType)
}
inline void HQ1013::set_sexectype(const char* value) {
  set_has_sexectype();
  if (sexectype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sexectype_ = new ::std::string;
  }
  sexectype_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1013.sExecType)
}
inline void HQ1013::set_sexectype(const char* value, size_t size) {
  set_has_sexectype();
  if (sexectype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sexectype_ = new ::std::string;
  }
  sexectype_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1013.sExecType)
}
inline ::std::string* HQ1013::mutable_sexectype() {
  set_has_sexectype();
  if (sexectype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sexectype_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1013.sExecType)
  return sexectype_;
}
inline ::std::string* HQ1013::release_sexectype() {
  clear_has_sexectype();
  if (sexectype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sexectype_;
    sexectype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1013::set_allocated_sexectype(::std::string* sexectype) {
  if (sexectype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sexectype_;
  }
  if (sexectype) {
    set_has_sexectype();
    sexectype_ = sexectype;
  } else {
    clear_has_sexectype();
    sexectype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1013.sExecType)
}

// -------------------------------------------------------------------

// HQ1013s

// repeated .HQStockPackage.HQ1013 rHQ1013 = 1;
inline int HQ1013s::rhq1013_size() const {
  return rhq1013_.size();
}
inline void HQ1013s::clear_rhq1013() {
  rhq1013_.Clear();
}
inline const ::HQStockPackage::HQ1013& HQ1013s::rhq1013(int index) const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1013s.rHQ1013)
  return rhq1013_.Get(index);
}
inline ::HQStockPackage::HQ1013* HQ1013s::mutable_rhq1013(int index) {
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1013s.rHQ1013)
  return rhq1013_.Mutable(index);
}
inline ::HQStockPackage::HQ1013* HQ1013s::add_rhq1013() {
  // @@protoc_insertion_point(field_add:HQStockPackage.HQ1013s.rHQ1013)
  return rhq1013_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1013 >&
HQ1013s::rhq1013() const {
  // @@protoc_insertion_point(field_list:HQStockPackage.HQ1013s.rHQ1013)
  return rhq1013_;
}
inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1013 >*
HQ1013s::mutable_rhq1013() {
  // @@protoc_insertion_point(field_mutable_list:HQStockPackage.HQ1013s.rHQ1013)
  return &rhq1013_;
}

// -------------------------------------------------------------------

// HQ1055

// required string sMarketNo = 1;
inline bool HQ1055::has_smarketno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HQ1055::set_has_smarketno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HQ1055::clear_has_smarketno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HQ1055::clear_smarketno() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_->clear();
  }
  clear_has_smarketno();
}
inline const ::std::string& HQ1055::smarketno() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1055.sMarketNo)
  return *smarketno_;
}
inline void HQ1055::set_smarketno(const ::std::string& value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1055.sMarketNo)
}
inline void HQ1055::set_smarketno(const char* value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1055.sMarketNo)
}
inline void HQ1055::set_smarketno(const char* value, size_t size) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1055.sMarketNo)
}
inline ::std::string* HQ1055::mutable_smarketno() {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1055.sMarketNo)
  return smarketno_;
}
inline ::std::string* HQ1055::release_smarketno() {
  clear_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = smarketno_;
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1055::set_allocated_smarketno(::std::string* smarketno) {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (smarketno) {
    set_has_smarketno();
    smarketno_ = smarketno;
  } else {
    clear_has_smarketno();
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1055.sMarketNo)
}

// required string sStockCode = 2;
inline bool HQ1055::has_sstockcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HQ1055::set_has_sstockcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HQ1055::clear_has_sstockcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HQ1055::clear_sstockcode() {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_->clear();
  }
  clear_has_sstockcode();
}
inline const ::std::string& HQ1055::sstockcode() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1055.sStockCode)
  return *sstockcode_;
}
inline void HQ1055::set_sstockcode(const ::std::string& value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1055.sStockCode)
}
inline void HQ1055::set_sstockcode(const char* value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1055.sStockCode)
}
inline void HQ1055::set_sstockcode(const char* value, size_t size) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1055.sStockCode)
}
inline ::std::string* HQ1055::mutable_sstockcode() {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1055.sStockCode)
  return sstockcode_;
}
inline ::std::string* HQ1055::release_sstockcode() {
  clear_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstockcode_;
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1055::set_allocated_sstockcode(::std::string* sstockcode) {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sstockcode) {
    set_has_sstockcode();
    sstockcode_ = sstockcode;
  } else {
    clear_has_sstockcode();
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1055.sStockCode)
}

// optional bytes sStockName = 3;
inline bool HQ1055::has_sstockname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HQ1055::set_has_sstockname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HQ1055::clear_has_sstockname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HQ1055::clear_sstockname() {
  if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_->clear();
  }
  clear_has_sstockname();
}
inline const ::std::string& HQ1055::sstockname() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1055.sStockName)
  return *sstockname_;
}
inline void HQ1055::set_sstockname(const ::std::string& value) {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  sstockname_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1055.sStockName)
}
inline void HQ1055::set_sstockname(const char* value) {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  sstockname_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1055.sStockName)
}
inline void HQ1055::set_sstockname(const void* value, size_t size) {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  sstockname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1055.sStockName)
}
inline ::std::string* HQ1055::mutable_sstockname() {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1055.sStockName)
  return sstockname_;
}
inline ::std::string* HQ1055::release_sstockname() {
  clear_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstockname_;
    sstockname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1055::set_allocated_sstockname(::std::string* sstockname) {
  if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockname_;
  }
  if (sstockname) {
    set_has_sstockname();
    sstockname_ = sstockname;
  } else {
    clear_has_sstockname();
    sstockname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1055.sStockName)
}

// optional double dBusinessAmount = 4;
inline bool HQ1055::has_dbusinessamount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HQ1055::set_has_dbusinessamount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HQ1055::clear_has_dbusinessamount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HQ1055::clear_dbusinessamount() {
  dbusinessamount_ = 0;
  clear_has_dbusinessamount();
}
inline double HQ1055::dbusinessamount() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1055.dBusinessAmount)
  return dbusinessamount_;
}
inline void HQ1055::set_dbusinessamount(double value) {
  set_has_dbusinessamount();
  dbusinessamount_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1055.dBusinessAmount)
}

// optional double dBusinessBalance = 5;
inline bool HQ1055::has_dbusinessbalance() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HQ1055::set_has_dbusinessbalance() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HQ1055::clear_has_dbusinessbalance() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HQ1055::clear_dbusinessbalance() {
  dbusinessbalance_ = 0;
  clear_has_dbusinessbalance();
}
inline double HQ1055::dbusinessbalance() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1055.dBusinessBalance)
  return dbusinessbalance_;
}
inline void HQ1055::set_dbusinessbalance(double value) {
  set_has_dbusinessbalance();
  dbusinessbalance_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1055.dBusinessBalance)
}

// optional double dClosePrice = 6;
inline bool HQ1055::has_dcloseprice() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HQ1055::set_has_dcloseprice() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HQ1055::clear_has_dcloseprice() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HQ1055::clear_dcloseprice() {
  dcloseprice_ = 0;
  clear_has_dcloseprice();
}
inline double HQ1055::dcloseprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1055.dClosePrice)
  return dcloseprice_;
}
inline void HQ1055::set_dcloseprice(double value) {
  set_has_dcloseprice();
  dcloseprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1055.dClosePrice)
}

// optional double dBuyVolume = 7;
inline bool HQ1055::has_dbuyvolume() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HQ1055::set_has_dbuyvolume() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HQ1055::clear_has_dbuyvolume() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HQ1055::clear_dbuyvolume() {
  dbuyvolume_ = 0;
  clear_has_dbuyvolume();
}
inline double HQ1055::dbuyvolume() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1055.dBuyVolume)
  return dbuyvolume_;
}
inline void HQ1055::set_dbuyvolume(double value) {
  set_has_dbuyvolume();
  dbuyvolume_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1055.dBuyVolume)
}

// optional double dSellVolume = 8;
inline bool HQ1055::has_dsellvolume() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HQ1055::set_has_dsellvolume() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HQ1055::clear_has_dsellvolume() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HQ1055::clear_dsellvolume() {
  dsellvolume_ = 0;
  clear_has_dsellvolume();
}
inline double HQ1055::dsellvolume() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1055.dSellVolume)
  return dsellvolume_;
}
inline void HQ1055::set_dsellvolume(double value) {
  set_has_dsellvolume();
  dsellvolume_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1055.dSellVolume)
}

// optional string sTradingPhaseCode = 9;
inline bool HQ1055::has_stradingphasecode() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HQ1055::set_has_stradingphasecode() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HQ1055::clear_has_stradingphasecode() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HQ1055::clear_stradingphasecode() {
  if (stradingphasecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingphasecode_->clear();
  }
  clear_has_stradingphasecode();
}
inline const ::std::string& HQ1055::stradingphasecode() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1055.sTradingPhaseCode)
  return *stradingphasecode_;
}
inline void HQ1055::set_stradingphasecode(const ::std::string& value) {
  set_has_stradingphasecode();
  if (stradingphasecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingphasecode_ = new ::std::string;
  }
  stradingphasecode_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1055.sTradingPhaseCode)
}
inline void HQ1055::set_stradingphasecode(const char* value) {
  set_has_stradingphasecode();
  if (stradingphasecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingphasecode_ = new ::std::string;
  }
  stradingphasecode_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1055.sTradingPhaseCode)
}
inline void HQ1055::set_stradingphasecode(const char* value, size_t size) {
  set_has_stradingphasecode();
  if (stradingphasecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingphasecode_ = new ::std::string;
  }
  stradingphasecode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1055.sTradingPhaseCode)
}
inline ::std::string* HQ1055::mutable_stradingphasecode() {
  set_has_stradingphasecode();
  if (stradingphasecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingphasecode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1055.sTradingPhaseCode)
  return stradingphasecode_;
}
inline ::std::string* HQ1055::release_stradingphasecode() {
  clear_has_stradingphasecode();
  if (stradingphasecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = stradingphasecode_;
    stradingphasecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1055::set_allocated_stradingphasecode(::std::string* stradingphasecode) {
  if (stradingphasecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stradingphasecode_;
  }
  if (stradingphasecode) {
    set_has_stradingphasecode();
    stradingphasecode_ = stradingphasecode;
  } else {
    clear_has_stradingphasecode();
    stradingphasecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1055.sTradingPhaseCode)
}

// optional string sAbsoluteTimeStamp = 10;
inline bool HQ1055::has_sabsolutetimestamp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void HQ1055::set_has_sabsolutetimestamp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void HQ1055::clear_has_sabsolutetimestamp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void HQ1055::clear_sabsolutetimestamp() {
  if (sabsolutetimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sabsolutetimestamp_->clear();
  }
  clear_has_sabsolutetimestamp();
}
inline const ::std::string& HQ1055::sabsolutetimestamp() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1055.sAbsoluteTimeStamp)
  return *sabsolutetimestamp_;
}
inline void HQ1055::set_sabsolutetimestamp(const ::std::string& value) {
  set_has_sabsolutetimestamp();
  if (sabsolutetimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sabsolutetimestamp_ = new ::std::string;
  }
  sabsolutetimestamp_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1055.sAbsoluteTimeStamp)
}
inline void HQ1055::set_sabsolutetimestamp(const char* value) {
  set_has_sabsolutetimestamp();
  if (sabsolutetimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sabsolutetimestamp_ = new ::std::string;
  }
  sabsolutetimestamp_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1055.sAbsoluteTimeStamp)
}
inline void HQ1055::set_sabsolutetimestamp(const char* value, size_t size) {
  set_has_sabsolutetimestamp();
  if (sabsolutetimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sabsolutetimestamp_ = new ::std::string;
  }
  sabsolutetimestamp_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1055.sAbsoluteTimeStamp)
}
inline ::std::string* HQ1055::mutable_sabsolutetimestamp() {
  set_has_sabsolutetimestamp();
  if (sabsolutetimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sabsolutetimestamp_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1055.sAbsoluteTimeStamp)
  return sabsolutetimestamp_;
}
inline ::std::string* HQ1055::release_sabsolutetimestamp() {
  clear_has_sabsolutetimestamp();
  if (sabsolutetimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sabsolutetimestamp_;
    sabsolutetimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1055::set_allocated_sabsolutetimestamp(::std::string* sabsolutetimestamp) {
  if (sabsolutetimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sabsolutetimestamp_;
  }
  if (sabsolutetimestamp) {
    set_has_sabsolutetimestamp();
    sabsolutetimestamp_ = sabsolutetimestamp;
  } else {
    clear_has_sabsolutetimestamp();
    sabsolutetimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1055.sAbsoluteTimeStamp)
}

// optional int32 iInitDate = 11;
inline bool HQ1055::has_iinitdate() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void HQ1055::set_has_iinitdate() {
  _has_bits_[0] |= 0x00000400u;
}
inline void HQ1055::clear_has_iinitdate() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void HQ1055::clear_iinitdate() {
  iinitdate_ = 0;
  clear_has_iinitdate();
}
inline ::google::protobuf::int32 HQ1055::iinitdate() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1055.iInitDate)
  return iinitdate_;
}
inline void HQ1055::set_iinitdate(::google::protobuf::int32 value) {
  set_has_iinitdate();
  iinitdate_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1055.iInitDate)
}

// -------------------------------------------------------------------

// HQ1055s

// repeated .HQStockPackage.HQ1055 rHQ1055 = 1;
inline int HQ1055s::rhq1055_size() const {
  return rhq1055_.size();
}
inline void HQ1055s::clear_rhq1055() {
  rhq1055_.Clear();
}
inline const ::HQStockPackage::HQ1055& HQ1055s::rhq1055(int index) const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1055s.rHQ1055)
  return rhq1055_.Get(index);
}
inline ::HQStockPackage::HQ1055* HQ1055s::mutable_rhq1055(int index) {
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1055s.rHQ1055)
  return rhq1055_.Mutable(index);
}
inline ::HQStockPackage::HQ1055* HQ1055s::add_rhq1055() {
  // @@protoc_insertion_point(field_add:HQStockPackage.HQ1055s.rHQ1055)
  return rhq1055_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1055 >&
HQ1055s::rhq1055() const {
  // @@protoc_insertion_point(field_list:HQStockPackage.HQ1055s.rHQ1055)
  return rhq1055_;
}
inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1055 >*
HQ1055s::mutable_rhq1055() {
  // @@protoc_insertion_point(field_mutable_list:HQStockPackage.HQ1055s.rHQ1055)
  return &rhq1055_;
}

// -------------------------------------------------------------------

// HQ1057

// required string sMarketNo = 1;
inline bool HQ1057::has_smarketno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HQ1057::set_has_smarketno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HQ1057::clear_has_smarketno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HQ1057::clear_smarketno() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_->clear();
  }
  clear_has_smarketno();
}
inline const ::std::string& HQ1057::smarketno() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1057.sMarketNo)
  return *smarketno_;
}
inline void HQ1057::set_smarketno(const ::std::string& value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1057.sMarketNo)
}
inline void HQ1057::set_smarketno(const char* value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1057.sMarketNo)
}
inline void HQ1057::set_smarketno(const char* value, size_t size) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1057.sMarketNo)
}
inline ::std::string* HQ1057::mutable_smarketno() {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1057.sMarketNo)
  return smarketno_;
}
inline ::std::string* HQ1057::release_smarketno() {
  clear_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = smarketno_;
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1057::set_allocated_smarketno(::std::string* smarketno) {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (smarketno) {
    set_has_smarketno();
    smarketno_ = smarketno;
  } else {
    clear_has_smarketno();
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1057.sMarketNo)
}

// required string sStockCode = 2;
inline bool HQ1057::has_sstockcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HQ1057::set_has_sstockcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HQ1057::clear_has_sstockcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HQ1057::clear_sstockcode() {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_->clear();
  }
  clear_has_sstockcode();
}
inline const ::std::string& HQ1057::sstockcode() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1057.sStockCode)
  return *sstockcode_;
}
inline void HQ1057::set_sstockcode(const ::std::string& value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1057.sStockCode)
}
inline void HQ1057::set_sstockcode(const char* value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1057.sStockCode)
}
inline void HQ1057::set_sstockcode(const char* value, size_t size) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1057.sStockCode)
}
inline ::std::string* HQ1057::mutable_sstockcode() {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1057.sStockCode)
  return sstockcode_;
}
inline ::std::string* HQ1057::release_sstockcode() {
  clear_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstockcode_;
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1057::set_allocated_sstockcode(::std::string* sstockcode) {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sstockcode) {
    set_has_sstockcode();
    sstockcode_ = sstockcode;
  } else {
    clear_has_sstockcode();
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1057.sStockCode)
}

// optional string sTradingDay = 3;
inline bool HQ1057::has_stradingday() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HQ1057::set_has_stradingday() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HQ1057::clear_has_stradingday() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HQ1057::clear_stradingday() {
  if (stradingday_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingday_->clear();
  }
  clear_has_stradingday();
}
inline const ::std::string& HQ1057::stradingday() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1057.sTradingDay)
  return *stradingday_;
}
inline void HQ1057::set_stradingday(const ::std::string& value) {
  set_has_stradingday();
  if (stradingday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingday_ = new ::std::string;
  }
  stradingday_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1057.sTradingDay)
}
inline void HQ1057::set_stradingday(const char* value) {
  set_has_stradingday();
  if (stradingday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingday_ = new ::std::string;
  }
  stradingday_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1057.sTradingDay)
}
inline void HQ1057::set_stradingday(const char* value, size_t size) {
  set_has_stradingday();
  if (stradingday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingday_ = new ::std::string;
  }
  stradingday_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1057.sTradingDay)
}
inline ::std::string* HQ1057::mutable_stradingday() {
  set_has_stradingday();
  if (stradingday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingday_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1057.sTradingDay)
  return stradingday_;
}
inline ::std::string* HQ1057::release_stradingday() {
  clear_has_stradingday();
  if (stradingday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = stradingday_;
    stradingday_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1057::set_allocated_stradingday(::std::string* stradingday) {
  if (stradingday_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stradingday_;
  }
  if (stradingday) {
    set_has_stradingday();
    stradingday_ = stradingday;
  } else {
    clear_has_stradingday();
    stradingday_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1057.sTradingDay)
}

// optional string sForquoteSysId = 4;
inline bool HQ1057::has_sforquotesysid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HQ1057::set_has_sforquotesysid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HQ1057::clear_has_sforquotesysid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HQ1057::clear_sforquotesysid() {
  if (sforquotesysid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sforquotesysid_->clear();
  }
  clear_has_sforquotesysid();
}
inline const ::std::string& HQ1057::sforquotesysid() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1057.sForquoteSysId)
  return *sforquotesysid_;
}
inline void HQ1057::set_sforquotesysid(const ::std::string& value) {
  set_has_sforquotesysid();
  if (sforquotesysid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sforquotesysid_ = new ::std::string;
  }
  sforquotesysid_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1057.sForquoteSysId)
}
inline void HQ1057::set_sforquotesysid(const char* value) {
  set_has_sforquotesysid();
  if (sforquotesysid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sforquotesysid_ = new ::std::string;
  }
  sforquotesysid_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1057.sForquoteSysId)
}
inline void HQ1057::set_sforquotesysid(const char* value, size_t size) {
  set_has_sforquotesysid();
  if (sforquotesysid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sforquotesysid_ = new ::std::string;
  }
  sforquotesysid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1057.sForquoteSysId)
}
inline ::std::string* HQ1057::mutable_sforquotesysid() {
  set_has_sforquotesysid();
  if (sforquotesysid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sforquotesysid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1057.sForquoteSysId)
  return sforquotesysid_;
}
inline ::std::string* HQ1057::release_sforquotesysid() {
  clear_has_sforquotesysid();
  if (sforquotesysid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sforquotesysid_;
    sforquotesysid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1057::set_allocated_sforquotesysid(::std::string* sforquotesysid) {
  if (sforquotesysid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sforquotesysid_;
  }
  if (sforquotesysid) {
    set_has_sforquotesysid();
    sforquotesysid_ = sforquotesysid;
  } else {
    clear_has_sforquotesysid();
    sforquotesysid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1057.sForquoteSysId)
}

// optional string sForquoteTime = 5;
inline bool HQ1057::has_sforquotetime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HQ1057::set_has_sforquotetime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HQ1057::clear_has_sforquotetime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HQ1057::clear_sforquotetime() {
  if (sforquotetime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sforquotetime_->clear();
  }
  clear_has_sforquotetime();
}
inline const ::std::string& HQ1057::sforquotetime() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1057.sForquoteTime)
  return *sforquotetime_;
}
inline void HQ1057::set_sforquotetime(const ::std::string& value) {
  set_has_sforquotetime();
  if (sforquotetime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sforquotetime_ = new ::std::string;
  }
  sforquotetime_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1057.sForquoteTime)
}
inline void HQ1057::set_sforquotetime(const char* value) {
  set_has_sforquotetime();
  if (sforquotetime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sforquotetime_ = new ::std::string;
  }
  sforquotetime_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1057.sForquoteTime)
}
inline void HQ1057::set_sforquotetime(const char* value, size_t size) {
  set_has_sforquotetime();
  if (sforquotetime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sforquotetime_ = new ::std::string;
  }
  sforquotetime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1057.sForquoteTime)
}
inline ::std::string* HQ1057::mutable_sforquotetime() {
  set_has_sforquotetime();
  if (sforquotetime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sforquotetime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1057.sForquoteTime)
  return sforquotetime_;
}
inline ::std::string* HQ1057::release_sforquotetime() {
  clear_has_sforquotetime();
  if (sforquotetime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sforquotetime_;
    sforquotetime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1057::set_allocated_sforquotetime(::std::string* sforquotetime) {
  if (sforquotetime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sforquotetime_;
  }
  if (sforquotetime) {
    set_has_sforquotetime();
    sforquotetime_ = sforquotetime;
  } else {
    clear_has_sforquotetime();
    sforquotetime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1057.sForquoteTime)
}

// optional string sActionDay = 6;
inline bool HQ1057::has_sactionday() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HQ1057::set_has_sactionday() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HQ1057::clear_has_sactionday() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HQ1057::clear_sactionday() {
  if (sactionday_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sactionday_->clear();
  }
  clear_has_sactionday();
}
inline const ::std::string& HQ1057::sactionday() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1057.sActionDay)
  return *sactionday_;
}
inline void HQ1057::set_sactionday(const ::std::string& value) {
  set_has_sactionday();
  if (sactionday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sactionday_ = new ::std::string;
  }
  sactionday_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1057.sActionDay)
}
inline void HQ1057::set_sactionday(const char* value) {
  set_has_sactionday();
  if (sactionday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sactionday_ = new ::std::string;
  }
  sactionday_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1057.sActionDay)
}
inline void HQ1057::set_sactionday(const char* value, size_t size) {
  set_has_sactionday();
  if (sactionday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sactionday_ = new ::std::string;
  }
  sactionday_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1057.sActionDay)
}
inline ::std::string* HQ1057::mutable_sactionday() {
  set_has_sactionday();
  if (sactionday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sactionday_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1057.sActionDay)
  return sactionday_;
}
inline ::std::string* HQ1057::release_sactionday() {
  clear_has_sactionday();
  if (sactionday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sactionday_;
    sactionday_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1057::set_allocated_sactionday(::std::string* sactionday) {
  if (sactionday_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sactionday_;
  }
  if (sactionday) {
    set_has_sactionday();
    sactionday_ = sactionday;
  } else {
    clear_has_sactionday();
    sactionday_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1057.sActionDay)
}

// optional string sAbsoluteTimeStamp = 7;
inline bool HQ1057::has_sabsolutetimestamp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HQ1057::set_has_sabsolutetimestamp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HQ1057::clear_has_sabsolutetimestamp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HQ1057::clear_sabsolutetimestamp() {
  if (sabsolutetimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sabsolutetimestamp_->clear();
  }
  clear_has_sabsolutetimestamp();
}
inline const ::std::string& HQ1057::sabsolutetimestamp() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1057.sAbsoluteTimeStamp)
  return *sabsolutetimestamp_;
}
inline void HQ1057::set_sabsolutetimestamp(const ::std::string& value) {
  set_has_sabsolutetimestamp();
  if (sabsolutetimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sabsolutetimestamp_ = new ::std::string;
  }
  sabsolutetimestamp_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1057.sAbsoluteTimeStamp)
}
inline void HQ1057::set_sabsolutetimestamp(const char* value) {
  set_has_sabsolutetimestamp();
  if (sabsolutetimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sabsolutetimestamp_ = new ::std::string;
  }
  sabsolutetimestamp_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1057.sAbsoluteTimeStamp)
}
inline void HQ1057::set_sabsolutetimestamp(const char* value, size_t size) {
  set_has_sabsolutetimestamp();
  if (sabsolutetimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sabsolutetimestamp_ = new ::std::string;
  }
  sabsolutetimestamp_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1057.sAbsoluteTimeStamp)
}
inline ::std::string* HQ1057::mutable_sabsolutetimestamp() {
  set_has_sabsolutetimestamp();
  if (sabsolutetimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sabsolutetimestamp_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1057.sAbsoluteTimeStamp)
  return sabsolutetimestamp_;
}
inline ::std::string* HQ1057::release_sabsolutetimestamp() {
  clear_has_sabsolutetimestamp();
  if (sabsolutetimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sabsolutetimestamp_;
    sabsolutetimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1057::set_allocated_sabsolutetimestamp(::std::string* sabsolutetimestamp) {
  if (sabsolutetimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sabsolutetimestamp_;
  }
  if (sabsolutetimestamp) {
    set_has_sabsolutetimestamp();
    sabsolutetimestamp_ = sabsolutetimestamp;
  } else {
    clear_has_sabsolutetimestamp();
    sabsolutetimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1057.sAbsoluteTimeStamp)
}

// optional int32 iInitDate = 8;
inline bool HQ1057::has_iinitdate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HQ1057::set_has_iinitdate() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HQ1057::clear_has_iinitdate() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HQ1057::clear_iinitdate() {
  iinitdate_ = 0;
  clear_has_iinitdate();
}
inline ::google::protobuf::int32 HQ1057::iinitdate() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1057.iInitDate)
  return iinitdate_;
}
inline void HQ1057::set_iinitdate(::google::protobuf::int32 value) {
  set_has_iinitdate();
  iinitdate_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1057.iInitDate)
}

// -------------------------------------------------------------------

// HQ1057s

// repeated .HQStockPackage.HQ1057 rHQ1057 = 1;
inline int HQ1057s::rhq1057_size() const {
  return rhq1057_.size();
}
inline void HQ1057s::clear_rhq1057() {
  rhq1057_.Clear();
}
inline const ::HQStockPackage::HQ1057& HQ1057s::rhq1057(int index) const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1057s.rHQ1057)
  return rhq1057_.Get(index);
}
inline ::HQStockPackage::HQ1057* HQ1057s::mutable_rhq1057(int index) {
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1057s.rHQ1057)
  return rhq1057_.Mutable(index);
}
inline ::HQStockPackage::HQ1057* HQ1057s::add_rhq1057() {
  // @@protoc_insertion_point(field_add:HQStockPackage.HQ1057s.rHQ1057)
  return rhq1057_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1057 >&
HQ1057s::rhq1057() const {
  // @@protoc_insertion_point(field_list:HQStockPackage.HQ1057s.rHQ1057)
  return rhq1057_;
}
inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1057 >*
HQ1057s::mutable_rhq1057() {
  // @@protoc_insertion_point(field_mutable_list:HQStockPackage.HQ1057s.rHQ1057)
  return &rhq1057_;
}

// -------------------------------------------------------------------

// HQ1058

// required string sMarketNo = 1;
inline bool HQ1058::has_smarketno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HQ1058::set_has_smarketno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HQ1058::clear_has_smarketno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HQ1058::clear_smarketno() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_->clear();
  }
  clear_has_smarketno();
}
inline const ::std::string& HQ1058::smarketno() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1058.sMarketNo)
  return *smarketno_;
}
inline void HQ1058::set_smarketno(const ::std::string& value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1058.sMarketNo)
}
inline void HQ1058::set_smarketno(const char* value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1058.sMarketNo)
}
inline void HQ1058::set_smarketno(const char* value, size_t size) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1058.sMarketNo)
}
inline ::std::string* HQ1058::mutable_smarketno() {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1058.sMarketNo)
  return smarketno_;
}
inline ::std::string* HQ1058::release_smarketno() {
  clear_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = smarketno_;
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1058::set_allocated_smarketno(::std::string* smarketno) {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (smarketno) {
    set_has_smarketno();
    smarketno_ = smarketno;
  } else {
    clear_has_smarketno();
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1058.sMarketNo)
}

// optional double dThresholdAmount = 2;
inline bool HQ1058::has_dthresholdamount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HQ1058::set_has_dthresholdamount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HQ1058::clear_has_dthresholdamount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HQ1058::clear_dthresholdamount() {
  dthresholdamount_ = 0;
  clear_has_dthresholdamount();
}
inline double HQ1058::dthresholdamount() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1058.dThresholdAmount)
  return dthresholdamount_;
}
inline void HQ1058::set_dthresholdamount(double value) {
  set_has_dthresholdamount();
  dthresholdamount_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1058.dThresholdAmount)
}

// optional double dPosAmt = 3;
inline bool HQ1058::has_dposamt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HQ1058::set_has_dposamt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HQ1058::clear_has_dposamt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HQ1058::clear_dposamt() {
  dposamt_ = 0;
  clear_has_dposamt();
}
inline double HQ1058::dposamt() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1058.dPosAmt)
  return dposamt_;
}
inline void HQ1058::set_dposamt(double value) {
  set_has_dposamt();
  dposamt_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1058.dPosAmt)
}

// optional int32 iAmountStatus = 4;
inline bool HQ1058::has_iamountstatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HQ1058::set_has_iamountstatus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HQ1058::clear_has_iamountstatus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HQ1058::clear_iamountstatus() {
  iamountstatus_ = 0;
  clear_has_iamountstatus();
}
inline ::google::protobuf::int32 HQ1058::iamountstatus() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1058.iAmountStatus)
  return iamountstatus_;
}
inline void HQ1058::set_iamountstatus(::google::protobuf::int32 value) {
  set_has_iamountstatus();
  iamountstatus_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1058.iAmountStatus)
}

// optional string sTradeStatus = 5;
inline bool HQ1058::has_stradestatus() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HQ1058::set_has_stradestatus() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HQ1058::clear_has_stradestatus() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HQ1058::clear_stradestatus() {
  if (stradestatus_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradestatus_->clear();
  }
  clear_has_stradestatus();
}
inline const ::std::string& HQ1058::stradestatus() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1058.sTradeStatus)
  return *stradestatus_;
}
inline void HQ1058::set_stradestatus(const ::std::string& value) {
  set_has_stradestatus();
  if (stradestatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradestatus_ = new ::std::string;
  }
  stradestatus_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1058.sTradeStatus)
}
inline void HQ1058::set_stradestatus(const char* value) {
  set_has_stradestatus();
  if (stradestatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradestatus_ = new ::std::string;
  }
  stradestatus_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1058.sTradeStatus)
}
inline void HQ1058::set_stradestatus(const char* value, size_t size) {
  set_has_stradestatus();
  if (stradestatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradestatus_ = new ::std::string;
  }
  stradestatus_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1058.sTradeStatus)
}
inline ::std::string* HQ1058::mutable_stradestatus() {
  set_has_stradestatus();
  if (stradestatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradestatus_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1058.sTradeStatus)
  return stradestatus_;
}
inline ::std::string* HQ1058::release_stradestatus() {
  clear_has_stradestatus();
  if (stradestatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = stradestatus_;
    stradestatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1058::set_allocated_stradestatus(::std::string* stradestatus) {
  if (stradestatus_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stradestatus_;
  }
  if (stradestatus) {
    set_has_stradestatus();
    stradestatus_ = stradestatus;
  } else {
    clear_has_stradestatus();
    stradestatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1058.sTradeStatus)
}

// -------------------------------------------------------------------

// HQ1058s

// repeated .HQStockPackage.HQ1058 rHQ1058 = 1;
inline int HQ1058s::rhq1058_size() const {
  return rhq1058_.size();
}
inline void HQ1058s::clear_rhq1058() {
  rhq1058_.Clear();
}
inline const ::HQStockPackage::HQ1058& HQ1058s::rhq1058(int index) const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1058s.rHQ1058)
  return rhq1058_.Get(index);
}
inline ::HQStockPackage::HQ1058* HQ1058s::mutable_rhq1058(int index) {
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1058s.rHQ1058)
  return rhq1058_.Mutable(index);
}
inline ::HQStockPackage::HQ1058* HQ1058s::add_rhq1058() {
  // @@protoc_insertion_point(field_add:HQStockPackage.HQ1058s.rHQ1058)
  return rhq1058_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1058 >&
HQ1058s::rhq1058() const {
  // @@protoc_insertion_point(field_list:HQStockPackage.HQ1058s.rHQ1058)
  return rhq1058_;
}
inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1058 >*
HQ1058s::mutable_rhq1058() {
  // @@protoc_insertion_point(field_mutable_list:HQStockPackage.HQ1058s.rHQ1058)
  return &rhq1058_;
}

// -------------------------------------------------------------------

// HQ1059

// required string sMarketNo = 1;
inline bool HQ1059::has_smarketno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HQ1059::set_has_smarketno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HQ1059::clear_has_smarketno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HQ1059::clear_smarketno() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_->clear();
  }
  clear_has_smarketno();
}
inline const ::std::string& HQ1059::smarketno() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1059.sMarketNo)
  return *smarketno_;
}
inline void HQ1059::set_smarketno(const ::std::string& value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1059.sMarketNo)
}
inline void HQ1059::set_smarketno(const char* value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1059.sMarketNo)
}
inline void HQ1059::set_smarketno(const char* value, size_t size) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1059.sMarketNo)
}
inline ::std::string* HQ1059::mutable_smarketno() {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1059.sMarketNo)
  return smarketno_;
}
inline ::std::string* HQ1059::release_smarketno() {
  clear_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = smarketno_;
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1059::set_allocated_smarketno(::std::string* smarketno) {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (smarketno) {
    set_has_smarketno();
    smarketno_ = smarketno;
  } else {
    clear_has_smarketno();
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1059.sMarketNo)
}

// required string sRecordNo = 2;
inline bool HQ1059::has_srecordno() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HQ1059::set_has_srecordno() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HQ1059::clear_has_srecordno() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HQ1059::clear_srecordno() {
  if (srecordno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srecordno_->clear();
  }
  clear_has_srecordno();
}
inline const ::std::string& HQ1059::srecordno() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1059.sRecordNo)
  return *srecordno_;
}
inline void HQ1059::set_srecordno(const ::std::string& value) {
  set_has_srecordno();
  if (srecordno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srecordno_ = new ::std::string;
  }
  srecordno_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1059.sRecordNo)
}
inline void HQ1059::set_srecordno(const char* value) {
  set_has_srecordno();
  if (srecordno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srecordno_ = new ::std::string;
  }
  srecordno_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1059.sRecordNo)
}
inline void HQ1059::set_srecordno(const char* value, size_t size) {
  set_has_srecordno();
  if (srecordno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srecordno_ = new ::std::string;
  }
  srecordno_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1059.sRecordNo)
}
inline ::std::string* HQ1059::mutable_srecordno() {
  set_has_srecordno();
  if (srecordno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srecordno_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1059.sRecordNo)
  return srecordno_;
}
inline ::std::string* HQ1059::release_srecordno() {
  clear_has_srecordno();
  if (srecordno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = srecordno_;
    srecordno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1059::set_allocated_srecordno(::std::string* srecordno) {
  if (srecordno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srecordno_;
  }
  if (srecordno) {
    set_has_srecordno();
    srecordno_ = srecordno;
  } else {
    clear_has_srecordno();
    srecordno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1059.sRecordNo)
}

// required string sReportSeat = 3;
inline bool HQ1059::has_sreportseat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HQ1059::set_has_sreportseat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HQ1059::clear_has_sreportseat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HQ1059::clear_sreportseat() {
  if (sreportseat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sreportseat_->clear();
  }
  clear_has_sreportseat();
}
inline const ::std::string& HQ1059::sreportseat() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1059.sReportSeat)
  return *sreportseat_;
}
inline void HQ1059::set_sreportseat(const ::std::string& value) {
  set_has_sreportseat();
  if (sreportseat_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sreportseat_ = new ::std::string;
  }
  sreportseat_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1059.sReportSeat)
}
inline void HQ1059::set_sreportseat(const char* value) {
  set_has_sreportseat();
  if (sreportseat_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sreportseat_ = new ::std::string;
  }
  sreportseat_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1059.sReportSeat)
}
inline void HQ1059::set_sreportseat(const char* value, size_t size) {
  set_has_sreportseat();
  if (sreportseat_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sreportseat_ = new ::std::string;
  }
  sreportseat_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1059.sReportSeat)
}
inline ::std::string* HQ1059::mutable_sreportseat() {
  set_has_sreportseat();
  if (sreportseat_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sreportseat_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1059.sReportSeat)
  return sreportseat_;
}
inline ::std::string* HQ1059::release_sreportseat() {
  clear_has_sreportseat();
  if (sreportseat_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sreportseat_;
    sreportseat_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1059::set_allocated_sreportseat(::std::string* sreportseat) {
  if (sreportseat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sreportseat_;
  }
  if (sreportseat) {
    set_has_sreportseat();
    sreportseat_ = sreportseat;
  } else {
    clear_has_sreportseat();
    sreportseat_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1059.sReportSeat)
}

// optional string sStockCode = 4;
inline bool HQ1059::has_sstockcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HQ1059::set_has_sstockcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HQ1059::clear_has_sstockcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HQ1059::clear_sstockcode() {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_->clear();
  }
  clear_has_sstockcode();
}
inline const ::std::string& HQ1059::sstockcode() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1059.sStockCode)
  return *sstockcode_;
}
inline void HQ1059::set_sstockcode(const ::std::string& value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1059.sStockCode)
}
inline void HQ1059::set_sstockcode(const char* value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1059.sStockCode)
}
inline void HQ1059::set_sstockcode(const char* value, size_t size) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1059.sStockCode)
}
inline ::std::string* HQ1059::mutable_sstockcode() {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1059.sStockCode)
  return sstockcode_;
}
inline ::std::string* HQ1059::release_sstockcode() {
  clear_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstockcode_;
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1059::set_allocated_sstockcode(::std::string* sstockcode) {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sstockcode) {
    set_has_sstockcode();
    sstockcode_ = sstockcode;
  } else {
    clear_has_sstockcode();
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1059.sStockCode)
}

// optional double dEntrustPrice = 5;
inline bool HQ1059::has_dentrustprice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HQ1059::set_has_dentrustprice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HQ1059::clear_has_dentrustprice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HQ1059::clear_dentrustprice() {
  dentrustprice_ = 0;
  clear_has_dentrustprice();
}
inline double HQ1059::dentrustprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1059.dEntrustPrice)
  return dentrustprice_;
}
inline void HQ1059::set_dentrustprice(double value) {
  set_has_dentrustprice();
  dentrustprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1059.dEntrustPrice)
}

// optional double dEntrustAmount = 6;
inline bool HQ1059::has_dentrustamount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HQ1059::set_has_dentrustamount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HQ1059::clear_has_dentrustamount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HQ1059::clear_dentrustamount() {
  dentrustamount_ = 0;
  clear_has_dentrustamount();
}
inline double HQ1059::dentrustamount() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1059.dEntrustAmount)
  return dentrustamount_;
}
inline void HQ1059::set_dentrustamount(double value) {
  set_has_dentrustamount();
  dentrustamount_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1059.dEntrustAmount)
}

// optional string sSide = 7;
inline bool HQ1059::has_sside() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HQ1059::set_has_sside() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HQ1059::clear_has_sside() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HQ1059::clear_sside() {
  if (sside_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sside_->clear();
  }
  clear_has_sside();
}
inline const ::std::string& HQ1059::sside() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1059.sSide)
  return *sside_;
}
inline void HQ1059::set_sside(const ::std::string& value) {
  set_has_sside();
  if (sside_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sside_ = new ::std::string;
  }
  sside_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1059.sSide)
}
inline void HQ1059::set_sside(const char* value) {
  set_has_sside();
  if (sside_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sside_ = new ::std::string;
  }
  sside_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1059.sSide)
}
inline void HQ1059::set_sside(const char* value, size_t size) {
  set_has_sside();
  if (sside_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sside_ = new ::std::string;
  }
  sside_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1059.sSide)
}
inline ::std::string* HQ1059::mutable_sside() {
  set_has_sside();
  if (sside_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sside_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1059.sSide)
  return sside_;
}
inline ::std::string* HQ1059::release_sside() {
  clear_has_sside();
  if (sside_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sside_;
    sside_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1059::set_allocated_sside(::std::string* sside) {
  if (sside_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sside_;
  }
  if (sside) {
    set_has_sside();
    sside_ = sside;
  } else {
    clear_has_sside();
    sside_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1059.sSide)
}

// required string sTransactDate = 8;
inline bool HQ1059::has_stransactdate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HQ1059::set_has_stransactdate() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HQ1059::clear_has_stransactdate() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HQ1059::clear_stransactdate() {
  if (stransactdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stransactdate_->clear();
  }
  clear_has_stransactdate();
}
inline const ::std::string& HQ1059::stransactdate() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1059.sTransactDate)
  return *stransactdate_;
}
inline void HQ1059::set_stransactdate(const ::std::string& value) {
  set_has_stransactdate();
  if (stransactdate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stransactdate_ = new ::std::string;
  }
  stransactdate_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1059.sTransactDate)
}
inline void HQ1059::set_stransactdate(const char* value) {
  set_has_stransactdate();
  if (stransactdate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stransactdate_ = new ::std::string;
  }
  stransactdate_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1059.sTransactDate)
}
inline void HQ1059::set_stransactdate(const char* value, size_t size) {
  set_has_stransactdate();
  if (stransactdate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stransactdate_ = new ::std::string;
  }
  stransactdate_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1059.sTransactDate)
}
inline ::std::string* HQ1059::mutable_stransactdate() {
  set_has_stransactdate();
  if (stransactdate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stransactdate_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1059.sTransactDate)
  return stransactdate_;
}
inline ::std::string* HQ1059::release_stransactdate() {
  clear_has_stransactdate();
  if (stransactdate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = stransactdate_;
    stransactdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1059::set_allocated_stransactdate(::std::string* stransactdate) {
  if (stransactdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stransactdate_;
  }
  if (stransactdate) {
    set_has_stransactdate();
    stransactdate_ = stransactdate;
  } else {
    clear_has_stransactdate();
    stransactdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1059.sTransactDate)
}

// optional string sTransactTime = 9;
inline bool HQ1059::has_stransacttime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HQ1059::set_has_stransacttime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HQ1059::clear_has_stransacttime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HQ1059::clear_stransacttime() {
  if (stransacttime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stransacttime_->clear();
  }
  clear_has_stransacttime();
}
inline const ::std::string& HQ1059::stransacttime() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1059.sTransactTime)
  return *stransacttime_;
}
inline void HQ1059::set_stransacttime(const ::std::string& value) {
  set_has_stransacttime();
  if (stransacttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stransacttime_ = new ::std::string;
  }
  stransacttime_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1059.sTransactTime)
}
inline void HQ1059::set_stransacttime(const char* value) {
  set_has_stransacttime();
  if (stransacttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stransacttime_ = new ::std::string;
  }
  stransacttime_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1059.sTransactTime)
}
inline void HQ1059::set_stransacttime(const char* value, size_t size) {
  set_has_stransacttime();
  if (stransacttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stransacttime_ = new ::std::string;
  }
  stransacttime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1059.sTransactTime)
}
inline ::std::string* HQ1059::mutable_stransacttime() {
  set_has_stransacttime();
  if (stransacttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stransacttime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1059.sTransactTime)
  return stransacttime_;
}
inline ::std::string* HQ1059::release_stransacttime() {
  clear_has_stransacttime();
  if (stransacttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = stransacttime_;
    stransacttime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1059::set_allocated_stransacttime(::std::string* stransacttime) {
  if (stransacttime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stransacttime_;
  }
  if (stransacttime) {
    set_has_stransacttime();
    stransacttime_ = stransacttime;
  } else {
    clear_has_stransacttime();
    stransacttime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1059.sTransactTime)
}

// optional int32 iExpirationDays = 10;
inline bool HQ1059::has_iexpirationdays() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void HQ1059::set_has_iexpirationdays() {
  _has_bits_[0] |= 0x00000200u;
}
inline void HQ1059::clear_has_iexpirationdays() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void HQ1059::clear_iexpirationdays() {
  iexpirationdays_ = 0;
  clear_has_iexpirationdays();
}
inline ::google::protobuf::int32 HQ1059::iexpirationdays() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1059.iExpirationDays)
  return iexpirationdays_;
}
inline void HQ1059::set_iexpirationdays(::google::protobuf::int32 value) {
  set_has_iexpirationdays();
  iexpirationdays_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1059.iExpirationDays)
}

// optional int32 iExpirationType = 11;
inline bool HQ1059::has_iexpirationtype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void HQ1059::set_has_iexpirationtype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void HQ1059::clear_has_iexpirationtype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void HQ1059::clear_iexpirationtype() {
  iexpirationtype_ = 0;
  clear_has_iexpirationtype();
}
inline ::google::protobuf::int32 HQ1059::iexpirationtype() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1059.iExpirationType)
  return iexpirationtype_;
}
inline void HQ1059::set_iexpirationtype(::google::protobuf::int32 value) {
  set_has_iexpirationtype();
  iexpirationtype_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1059.iExpirationType)
}

// optional string sExecType = 12;
inline bool HQ1059::has_sexectype() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void HQ1059::set_has_sexectype() {
  _has_bits_[0] |= 0x00000800u;
}
inline void HQ1059::clear_has_sexectype() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void HQ1059::clear_sexectype() {
  if (sexectype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sexectype_->clear();
  }
  clear_has_sexectype();
}
inline const ::std::string& HQ1059::sexectype() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1059.sExecType)
  return *sexectype_;
}
inline void HQ1059::set_sexectype(const ::std::string& value) {
  set_has_sexectype();
  if (sexectype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sexectype_ = new ::std::string;
  }
  sexectype_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1059.sExecType)
}
inline void HQ1059::set_sexectype(const char* value) {
  set_has_sexectype();
  if (sexectype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sexectype_ = new ::std::string;
  }
  sexectype_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1059.sExecType)
}
inline void HQ1059::set_sexectype(const char* value, size_t size) {
  set_has_sexectype();
  if (sexectype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sexectype_ = new ::std::string;
  }
  sexectype_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1059.sExecType)
}
inline ::std::string* HQ1059::mutable_sexectype() {
  set_has_sexectype();
  if (sexectype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sexectype_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1059.sExecType)
  return sexectype_;
}
inline ::std::string* HQ1059::release_sexectype() {
  clear_has_sexectype();
  if (sexectype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sexectype_;
    sexectype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1059::set_allocated_sexectype(::std::string* sexectype) {
  if (sexectype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sexectype_;
  }
  if (sexectype) {
    set_has_sexectype();
    sexectype_ = sexectype;
  } else {
    clear_has_sexectype();
    sexectype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1059.sExecType)
}

// -------------------------------------------------------------------

// HQ1059s

// repeated .HQStockPackage.HQ1059 rHQ1059 = 1;
inline int HQ1059s::rhq1059_size() const {
  return rhq1059_.size();
}
inline void HQ1059s::clear_rhq1059() {
  rhq1059_.Clear();
}
inline const ::HQStockPackage::HQ1059& HQ1059s::rhq1059(int index) const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1059s.rHQ1059)
  return rhq1059_.Get(index);
}
inline ::HQStockPackage::HQ1059* HQ1059s::mutable_rhq1059(int index) {
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1059s.rHQ1059)
  return rhq1059_.Mutable(index);
}
inline ::HQStockPackage::HQ1059* HQ1059s::add_rhq1059() {
  // @@protoc_insertion_point(field_add:HQStockPackage.HQ1059s.rHQ1059)
  return rhq1059_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1059 >&
HQ1059s::rhq1059() const {
  // @@protoc_insertion_point(field_list:HQStockPackage.HQ1059s.rHQ1059)
  return rhq1059_;
}
inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1059 >*
HQ1059s::mutable_rhq1059() {
  // @@protoc_insertion_point(field_mutable_list:HQStockPackage.HQ1059s.rHQ1059)
  return &rhq1059_;
}

// -------------------------------------------------------------------

// HQ1060

// required string sMarketNo = 1;
inline bool HQ1060::has_smarketno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HQ1060::set_has_smarketno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HQ1060::clear_has_smarketno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HQ1060::clear_smarketno() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_->clear();
  }
  clear_has_smarketno();
}
inline const ::std::string& HQ1060::smarketno() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1060.sMarketNo)
  return *smarketno_;
}
inline void HQ1060::set_smarketno(const ::std::string& value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1060.sMarketNo)
}
inline void HQ1060::set_smarketno(const char* value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1060.sMarketNo)
}
inline void HQ1060::set_smarketno(const char* value, size_t size) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1060.sMarketNo)
}
inline ::std::string* HQ1060::mutable_smarketno() {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1060.sMarketNo)
  return smarketno_;
}
inline ::std::string* HQ1060::release_smarketno() {
  clear_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = smarketno_;
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1060::set_allocated_smarketno(::std::string* smarketno) {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (smarketno) {
    set_has_smarketno();
    smarketno_ = smarketno;
  } else {
    clear_has_smarketno();
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1060.sMarketNo)
}

// required string sStockCode = 2;
inline bool HQ1060::has_sstockcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HQ1060::set_has_sstockcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HQ1060::clear_has_sstockcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HQ1060::clear_sstockcode() {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_->clear();
  }
  clear_has_sstockcode();
}
inline const ::std::string& HQ1060::sstockcode() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1060.sStockCode)
  return *sstockcode_;
}
inline void HQ1060::set_sstockcode(const ::std::string& value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1060.sStockCode)
}
inline void HQ1060::set_sstockcode(const char* value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1060.sStockCode)
}
inline void HQ1060::set_sstockcode(const char* value, size_t size) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1060.sStockCode)
}
inline ::std::string* HQ1060::mutable_sstockcode() {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1060.sStockCode)
  return sstockcode_;
}
inline ::std::string* HQ1060::release_sstockcode() {
  clear_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstockcode_;
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1060::set_allocated_sstockcode(::std::string* sstockcode) {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sstockcode) {
    set_has_sstockcode();
    sstockcode_ = sstockcode;
  } else {
    clear_has_sstockcode();
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1060.sStockCode)
}

// optional bytes sStockName = 3;
inline bool HQ1060::has_sstockname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HQ1060::set_has_sstockname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HQ1060::clear_has_sstockname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HQ1060::clear_sstockname() {
  if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_->clear();
  }
  clear_has_sstockname();
}
inline const ::std::string& HQ1060::sstockname() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1060.sStockName)
  return *sstockname_;
}
inline void HQ1060::set_sstockname(const ::std::string& value) {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  sstockname_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1060.sStockName)
}
inline void HQ1060::set_sstockname(const char* value) {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  sstockname_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1060.sStockName)
}
inline void HQ1060::set_sstockname(const void* value, size_t size) {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  sstockname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1060.sStockName)
}
inline ::std::string* HQ1060::mutable_sstockname() {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1060.sStockName)
  return sstockname_;
}
inline ::std::string* HQ1060::release_sstockname() {
  clear_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstockname_;
    sstockname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1060::set_allocated_sstockname(::std::string* sstockname) {
  if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockname_;
  }
  if (sstockname) {
    set_has_sstockname();
    sstockname_ = sstockname;
  } else {
    clear_has_sstockname();
    sstockname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1060.sStockName)
}

// optional string sTradingPhaseCode = 4;
inline bool HQ1060::has_stradingphasecode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HQ1060::set_has_stradingphasecode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HQ1060::clear_has_stradingphasecode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HQ1060::clear_stradingphasecode() {
  if (stradingphasecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingphasecode_->clear();
  }
  clear_has_stradingphasecode();
}
inline const ::std::string& HQ1060::stradingphasecode() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1060.sTradingPhaseCode)
  return *stradingphasecode_;
}
inline void HQ1060::set_stradingphasecode(const ::std::string& value) {
  set_has_stradingphasecode();
  if (stradingphasecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingphasecode_ = new ::std::string;
  }
  stradingphasecode_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1060.sTradingPhaseCode)
}
inline void HQ1060::set_stradingphasecode(const char* value) {
  set_has_stradingphasecode();
  if (stradingphasecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingphasecode_ = new ::std::string;
  }
  stradingphasecode_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1060.sTradingPhaseCode)
}
inline void HQ1060::set_stradingphasecode(const char* value, size_t size) {
  set_has_stradingphasecode();
  if (stradingphasecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingphasecode_ = new ::std::string;
  }
  stradingphasecode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1060.sTradingPhaseCode)
}
inline ::std::string* HQ1060::mutable_stradingphasecode() {
  set_has_stradingphasecode();
  if (stradingphasecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingphasecode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1060.sTradingPhaseCode)
  return stradingphasecode_;
}
inline ::std::string* HQ1060::release_stradingphasecode() {
  clear_has_stradingphasecode();
  if (stradingphasecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = stradingphasecode_;
    stradingphasecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1060::set_allocated_stradingphasecode(::std::string* stradingphasecode) {
  if (stradingphasecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stradingphasecode_;
  }
  if (stradingphasecode) {
    set_has_stradingphasecode();
    stradingphasecode_ = stradingphasecode;
  } else {
    clear_has_stradingphasecode();
    stradingphasecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1060.sTradingPhaseCode)
}

// optional double dPrevClosePx = 5;
inline bool HQ1060::has_dprevclosepx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HQ1060::set_has_dprevclosepx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HQ1060::clear_has_dprevclosepx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HQ1060::clear_dprevclosepx() {
  dprevclosepx_ = 0;
  clear_has_dprevclosepx();
}
inline double HQ1060::dprevclosepx() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1060.dPrevClosePx)
  return dprevclosepx_;
}
inline void HQ1060::set_dprevclosepx(double value) {
  set_has_dprevclosepx();
  dprevclosepx_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1060.dPrevClosePx)
}

// optional double dNumTrades = 6;
inline bool HQ1060::has_dnumtrades() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HQ1060::set_has_dnumtrades() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HQ1060::clear_has_dnumtrades() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HQ1060::clear_dnumtrades() {
  dnumtrades_ = 0;
  clear_has_dnumtrades();
}
inline double HQ1060::dnumtrades() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1060.dNumTrades)
  return dnumtrades_;
}
inline void HQ1060::set_dnumtrades(double value) {
  set_has_dnumtrades();
  dnumtrades_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1060.dNumTrades)
}

// optional double dTotalVolumeTrade = 7;
inline bool HQ1060::has_dtotalvolumetrade() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HQ1060::set_has_dtotalvolumetrade() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HQ1060::clear_has_dtotalvolumetrade() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HQ1060::clear_dtotalvolumetrade() {
  dtotalvolumetrade_ = 0;
  clear_has_dtotalvolumetrade();
}
inline double HQ1060::dtotalvolumetrade() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1060.dTotalVolumeTrade)
  return dtotalvolumetrade_;
}
inline void HQ1060::set_dtotalvolumetrade(double value) {
  set_has_dtotalvolumetrade();
  dtotalvolumetrade_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1060.dTotalVolumeTrade)
}

// optional double dTotalValueTrade = 8;
inline bool HQ1060::has_dtotalvaluetrade() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HQ1060::set_has_dtotalvaluetrade() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HQ1060::clear_has_dtotalvaluetrade() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HQ1060::clear_dtotalvaluetrade() {
  dtotalvaluetrade_ = 0;
  clear_has_dtotalvaluetrade();
}
inline double HQ1060::dtotalvaluetrade() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1060.dTotalValueTrade)
  return dtotalvaluetrade_;
}
inline void HQ1060::set_dtotalvaluetrade(double value) {
  set_has_dtotalvaluetrade();
  dtotalvaluetrade_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1060.dTotalValueTrade)
}

// optional double dReferPrice = 9;
inline bool HQ1060::has_dreferprice() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HQ1060::set_has_dreferprice() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HQ1060::clear_has_dreferprice() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HQ1060::clear_dreferprice() {
  dreferprice_ = 0;
  clear_has_dreferprice();
}
inline double HQ1060::dreferprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1060.dReferPrice)
  return dreferprice_;
}
inline void HQ1060::set_dreferprice(double value) {
  set_has_dreferprice();
  dreferprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1060.dReferPrice)
}

// optional double dBuyAmount = 10;
inline bool HQ1060::has_dbuyamount() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void HQ1060::set_has_dbuyamount() {
  _has_bits_[0] |= 0x00000200u;
}
inline void HQ1060::clear_has_dbuyamount() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void HQ1060::clear_dbuyamount() {
  dbuyamount_ = 0;
  clear_has_dbuyamount();
}
inline double HQ1060::dbuyamount() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1060.dBuyAmount)
  return dbuyamount_;
}
inline void HQ1060::set_dbuyamount(double value) {
  set_has_dbuyamount();
  dbuyamount_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1060.dBuyAmount)
}

// optional double dSaleAmount = 11;
inline bool HQ1060::has_dsaleamount() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void HQ1060::set_has_dsaleamount() {
  _has_bits_[0] |= 0x00000400u;
}
inline void HQ1060::clear_has_dsaleamount() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void HQ1060::clear_dsaleamount() {
  dsaleamount_ = 0;
  clear_has_dsaleamount();
}
inline double HQ1060::dsaleamount() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1060.dSaleAmount)
  return dsaleamount_;
}
inline void HQ1060::set_dsaleamount(double value) {
  set_has_dsaleamount();
  dsaleamount_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1060.dSaleAmount)
}

// optional string sTimeStamp = 12;
inline bool HQ1060::has_stimestamp() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void HQ1060::set_has_stimestamp() {
  _has_bits_[0] |= 0x00000800u;
}
inline void HQ1060::clear_has_stimestamp() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void HQ1060::clear_stimestamp() {
  if (stimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_->clear();
  }
  clear_has_stimestamp();
}
inline const ::std::string& HQ1060::stimestamp() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1060.sTimeStamp)
  return *stimestamp_;
}
inline void HQ1060::set_stimestamp(const ::std::string& value) {
  set_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_ = new ::std::string;
  }
  stimestamp_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1060.sTimeStamp)
}
inline void HQ1060::set_stimestamp(const char* value) {
  set_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_ = new ::std::string;
  }
  stimestamp_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1060.sTimeStamp)
}
inline void HQ1060::set_stimestamp(const char* value, size_t size) {
  set_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_ = new ::std::string;
  }
  stimestamp_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1060.sTimeStamp)
}
inline ::std::string* HQ1060::mutable_stimestamp() {
  set_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1060.sTimeStamp)
  return stimestamp_;
}
inline ::std::string* HQ1060::release_stimestamp() {
  clear_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = stimestamp_;
    stimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1060::set_allocated_stimestamp(::std::string* stimestamp) {
  if (stimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stimestamp_;
  }
  if (stimestamp) {
    set_has_stimestamp();
    stimestamp_ = stimestamp;
  } else {
    clear_has_stimestamp();
    stimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1060.sTimeStamp)
}

// optional int32 iInitDate = 13;
inline bool HQ1060::has_iinitdate() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void HQ1060::set_has_iinitdate() {
  _has_bits_[0] |= 0x00001000u;
}
inline void HQ1060::clear_has_iinitdate() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void HQ1060::clear_iinitdate() {
  iinitdate_ = 0;
  clear_has_iinitdate();
}
inline ::google::protobuf::int32 HQ1060::iinitdate() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1060.iInitDate)
  return iinitdate_;
}
inline void HQ1060::set_iinitdate(::google::protobuf::int32 value) {
  set_has_iinitdate();
  iinitdate_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1060.iInitDate)
}

// -------------------------------------------------------------------

// HQ1060s

// repeated .HQStockPackage.HQ1060 rHQ1060 = 1;
inline int HQ1060s::rhq1060_size() const {
  return rhq1060_.size();
}
inline void HQ1060s::clear_rhq1060() {
  rhq1060_.Clear();
}
inline const ::HQStockPackage::HQ1060& HQ1060s::rhq1060(int index) const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1060s.rHQ1060)
  return rhq1060_.Get(index);
}
inline ::HQStockPackage::HQ1060* HQ1060s::mutable_rhq1060(int index) {
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1060s.rHQ1060)
  return rhq1060_.Mutable(index);
}
inline ::HQStockPackage::HQ1060* HQ1060s::add_rhq1060() {
  // @@protoc_insertion_point(field_add:HQStockPackage.HQ1060s.rHQ1060)
  return rhq1060_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1060 >&
HQ1060s::rhq1060() const {
  // @@protoc_insertion_point(field_list:HQStockPackage.HQ1060s.rHQ1060)
  return rhq1060_;
}
inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1060 >*
HQ1060s::mutable_rhq1060() {
  // @@protoc_insertion_point(field_mutable_list:HQStockPackage.HQ1060s.rHQ1060)
  return &rhq1060_;
}

// -------------------------------------------------------------------

// HQ1061

// required string sMarketNo = 1;
inline bool HQ1061::has_smarketno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HQ1061::set_has_smarketno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HQ1061::clear_has_smarketno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HQ1061::clear_smarketno() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_->clear();
  }
  clear_has_smarketno();
}
inline const ::std::string& HQ1061::smarketno() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1061.sMarketNo)
  return *smarketno_;
}
inline void HQ1061::set_smarketno(const ::std::string& value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1061.sMarketNo)
}
inline void HQ1061::set_smarketno(const char* value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1061.sMarketNo)
}
inline void HQ1061::set_smarketno(const char* value, size_t size) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1061.sMarketNo)
}
inline ::std::string* HQ1061::mutable_smarketno() {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1061.sMarketNo)
  return smarketno_;
}
inline ::std::string* HQ1061::release_smarketno() {
  clear_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = smarketno_;
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1061::set_allocated_smarketno(::std::string* smarketno) {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (smarketno) {
    set_has_smarketno();
    smarketno_ = smarketno;
  } else {
    clear_has_smarketno();
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1061.sMarketNo)
}

// required string sStockCode = 2;
inline bool HQ1061::has_sstockcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HQ1061::set_has_sstockcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HQ1061::clear_has_sstockcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HQ1061::clear_sstockcode() {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_->clear();
  }
  clear_has_sstockcode();
}
inline const ::std::string& HQ1061::sstockcode() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1061.sStockCode)
  return *sstockcode_;
}
inline void HQ1061::set_sstockcode(const ::std::string& value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1061.sStockCode)
}
inline void HQ1061::set_sstockcode(const char* value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1061.sStockCode)
}
inline void HQ1061::set_sstockcode(const char* value, size_t size) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1061.sStockCode)
}
inline ::std::string* HQ1061::mutable_sstockcode() {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1061.sStockCode)
  return sstockcode_;
}
inline ::std::string* HQ1061::release_sstockcode() {
  clear_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstockcode_;
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1061::set_allocated_sstockcode(::std::string* sstockcode) {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sstockcode) {
    set_has_sstockcode();
    sstockcode_ = sstockcode;
  } else {
    clear_has_sstockcode();
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1061.sStockCode)
}

// optional bytes sStockName = 3;
inline bool HQ1061::has_sstockname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HQ1061::set_has_sstockname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HQ1061::clear_has_sstockname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HQ1061::clear_sstockname() {
  if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_->clear();
  }
  clear_has_sstockname();
}
inline const ::std::string& HQ1061::sstockname() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1061.sStockName)
  return *sstockname_;
}
inline void HQ1061::set_sstockname(const ::std::string& value) {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  sstockname_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1061.sStockName)
}
inline void HQ1061::set_sstockname(const char* value) {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  sstockname_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1061.sStockName)
}
inline void HQ1061::set_sstockname(const void* value, size_t size) {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  sstockname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1061.sStockName)
}
inline ::std::string* HQ1061::mutable_sstockname() {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1061.sStockName)
  return sstockname_;
}
inline ::std::string* HQ1061::release_sstockname() {
  clear_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstockname_;
    sstockname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1061::set_allocated_sstockname(::std::string* sstockname) {
  if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockname_;
  }
  if (sstockname) {
    set_has_sstockname();
    sstockname_ = sstockname;
  } else {
    clear_has_sstockname();
    sstockname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1061.sStockName)
}

// optional string sTradingPhaseCode = 4;
inline bool HQ1061::has_stradingphasecode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HQ1061::set_has_stradingphasecode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HQ1061::clear_has_stradingphasecode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HQ1061::clear_stradingphasecode() {
  if (stradingphasecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingphasecode_->clear();
  }
  clear_has_stradingphasecode();
}
inline const ::std::string& HQ1061::stradingphasecode() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1061.sTradingPhaseCode)
  return *stradingphasecode_;
}
inline void HQ1061::set_stradingphasecode(const ::std::string& value) {
  set_has_stradingphasecode();
  if (stradingphasecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingphasecode_ = new ::std::string;
  }
  stradingphasecode_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1061.sTradingPhaseCode)
}
inline void HQ1061::set_stradingphasecode(const char* value) {
  set_has_stradingphasecode();
  if (stradingphasecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingphasecode_ = new ::std::string;
  }
  stradingphasecode_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1061.sTradingPhaseCode)
}
inline void HQ1061::set_stradingphasecode(const char* value, size_t size) {
  set_has_stradingphasecode();
  if (stradingphasecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingphasecode_ = new ::std::string;
  }
  stradingphasecode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1061.sTradingPhaseCode)
}
inline ::std::string* HQ1061::mutable_stradingphasecode() {
  set_has_stradingphasecode();
  if (stradingphasecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stradingphasecode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1061.sTradingPhaseCode)
  return stradingphasecode_;
}
inline ::std::string* HQ1061::release_stradingphasecode() {
  clear_has_stradingphasecode();
  if (stradingphasecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = stradingphasecode_;
    stradingphasecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1061::set_allocated_stradingphasecode(::std::string* stradingphasecode) {
  if (stradingphasecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stradingphasecode_;
  }
  if (stradingphasecode) {
    set_has_stradingphasecode();
    stradingphasecode_ = stradingphasecode;
  } else {
    clear_has_stradingphasecode();
    stradingphasecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1061.sTradingPhaseCode)
}

// optional double dPrevClosePx = 5;
inline bool HQ1061::has_dprevclosepx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HQ1061::set_has_dprevclosepx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HQ1061::clear_has_dprevclosepx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HQ1061::clear_dprevclosepx() {
  dprevclosepx_ = 0;
  clear_has_dprevclosepx();
}
inline double HQ1061::dprevclosepx() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1061.dPrevClosePx)
  return dprevclosepx_;
}
inline void HQ1061::set_dprevclosepx(double value) {
  set_has_dprevclosepx();
  dprevclosepx_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1061.dPrevClosePx)
}

// optional double dNumTrades = 6;
inline bool HQ1061::has_dnumtrades() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HQ1061::set_has_dnumtrades() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HQ1061::clear_has_dnumtrades() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HQ1061::clear_dnumtrades() {
  dnumtrades_ = 0;
  clear_has_dnumtrades();
}
inline double HQ1061::dnumtrades() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1061.dNumTrades)
  return dnumtrades_;
}
inline void HQ1061::set_dnumtrades(double value) {
  set_has_dnumtrades();
  dnumtrades_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1061.dNumTrades)
}

// optional double dTotalVolumeTrade = 7;
inline bool HQ1061::has_dtotalvolumetrade() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HQ1061::set_has_dtotalvolumetrade() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HQ1061::clear_has_dtotalvolumetrade() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HQ1061::clear_dtotalvolumetrade() {
  dtotalvolumetrade_ = 0;
  clear_has_dtotalvolumetrade();
}
inline double HQ1061::dtotalvolumetrade() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1061.dTotalVolumeTrade)
  return dtotalvolumetrade_;
}
inline void HQ1061::set_dtotalvolumetrade(double value) {
  set_has_dtotalvolumetrade();
  dtotalvolumetrade_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1061.dTotalVolumeTrade)
}

// optional double dTotalValueTrade = 8;
inline bool HQ1061::has_dtotalvaluetrade() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HQ1061::set_has_dtotalvaluetrade() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HQ1061::clear_has_dtotalvaluetrade() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HQ1061::clear_dtotalvaluetrade() {
  dtotalvaluetrade_ = 0;
  clear_has_dtotalvaluetrade();
}
inline double HQ1061::dtotalvaluetrade() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1061.dTotalValueTrade)
  return dtotalvaluetrade_;
}
inline void HQ1061::set_dtotalvaluetrade(double value) {
  set_has_dtotalvaluetrade();
  dtotalvaluetrade_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1061.dTotalValueTrade)
}

// optional double dReferPrice = 9;
inline bool HQ1061::has_dreferprice() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HQ1061::set_has_dreferprice() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HQ1061::clear_has_dreferprice() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HQ1061::clear_dreferprice() {
  dreferprice_ = 0;
  clear_has_dreferprice();
}
inline double HQ1061::dreferprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1061.dReferPrice)
  return dreferprice_;
}
inline void HQ1061::set_dreferprice(double value) {
  set_has_dreferprice();
  dreferprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1061.dReferPrice)
}

// optional double dBuyAmount = 10;
inline bool HQ1061::has_dbuyamount() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void HQ1061::set_has_dbuyamount() {
  _has_bits_[0] |= 0x00000200u;
}
inline void HQ1061::clear_has_dbuyamount() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void HQ1061::clear_dbuyamount() {
  dbuyamount_ = 0;
  clear_has_dbuyamount();
}
inline double HQ1061::dbuyamount() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1061.dBuyAmount)
  return dbuyamount_;
}
inline void HQ1061::set_dbuyamount(double value) {
  set_has_dbuyamount();
  dbuyamount_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1061.dBuyAmount)
}

// optional double dSaleAmount = 11;
inline bool HQ1061::has_dsaleamount() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void HQ1061::set_has_dsaleamount() {
  _has_bits_[0] |= 0x00000400u;
}
inline void HQ1061::clear_has_dsaleamount() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void HQ1061::clear_dsaleamount() {
  dsaleamount_ = 0;
  clear_has_dsaleamount();
}
inline double HQ1061::dsaleamount() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1061.dSaleAmount)
  return dsaleamount_;
}
inline void HQ1061::set_dsaleamount(double value) {
  set_has_dsaleamount();
  dsaleamount_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1061.dSaleAmount)
}

// optional string sTimeStamp = 12;
inline bool HQ1061::has_stimestamp() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void HQ1061::set_has_stimestamp() {
  _has_bits_[0] |= 0x00000800u;
}
inline void HQ1061::clear_has_stimestamp() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void HQ1061::clear_stimestamp() {
  if (stimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_->clear();
  }
  clear_has_stimestamp();
}
inline const ::std::string& HQ1061::stimestamp() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1061.sTimeStamp)
  return *stimestamp_;
}
inline void HQ1061::set_stimestamp(const ::std::string& value) {
  set_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_ = new ::std::string;
  }
  stimestamp_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1061.sTimeStamp)
}
inline void HQ1061::set_stimestamp(const char* value) {
  set_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_ = new ::std::string;
  }
  stimestamp_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1061.sTimeStamp)
}
inline void HQ1061::set_stimestamp(const char* value, size_t size) {
  set_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_ = new ::std::string;
  }
  stimestamp_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1061.sTimeStamp)
}
inline ::std::string* HQ1061::mutable_stimestamp() {
  set_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stimestamp_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1061.sTimeStamp)
  return stimestamp_;
}
inline ::std::string* HQ1061::release_stimestamp() {
  clear_has_stimestamp();
  if (stimestamp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = stimestamp_;
    stimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1061::set_allocated_stimestamp(::std::string* stimestamp) {
  if (stimestamp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stimestamp_;
  }
  if (stimestamp) {
    set_has_stimestamp();
    stimestamp_ = stimestamp;
  } else {
    clear_has_stimestamp();
    stimestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1061.sTimeStamp)
}

// optional int32 iInitDate = 13;
inline bool HQ1061::has_iinitdate() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void HQ1061::set_has_iinitdate() {
  _has_bits_[0] |= 0x00001000u;
}
inline void HQ1061::clear_has_iinitdate() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void HQ1061::clear_iinitdate() {
  iinitdate_ = 0;
  clear_has_iinitdate();
}
inline ::google::protobuf::int32 HQ1061::iinitdate() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1061.iInitDate)
  return iinitdate_;
}
inline void HQ1061::set_iinitdate(::google::protobuf::int32 value) {
  set_has_iinitdate();
  iinitdate_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1061.iInitDate)
}

// -------------------------------------------------------------------

// HQ1061s

// repeated .HQStockPackage.HQ1061 rHQ1061 = 1;
inline int HQ1061s::rhq1061_size() const {
  return rhq1061_.size();
}
inline void HQ1061s::clear_rhq1061() {
  rhq1061_.Clear();
}
inline const ::HQStockPackage::HQ1061& HQ1061s::rhq1061(int index) const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1061s.rHQ1061)
  return rhq1061_.Get(index);
}
inline ::HQStockPackage::HQ1061* HQ1061s::mutable_rhq1061(int index) {
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1061s.rHQ1061)
  return rhq1061_.Mutable(index);
}
inline ::HQStockPackage::HQ1061* HQ1061s::add_rhq1061() {
  // @@protoc_insertion_point(field_add:HQStockPackage.HQ1061s.rHQ1061)
  return rhq1061_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1061 >&
HQ1061s::rhq1061() const {
  // @@protoc_insertion_point(field_list:HQStockPackage.HQ1061s.rHQ1061)
  return rhq1061_;
}
inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1061 >*
HQ1061s::mutable_rhq1061() {
  // @@protoc_insertion_point(field_mutable_list:HQStockPackage.HQ1061s.rHQ1061)
  return &rhq1061_;
}

// -------------------------------------------------------------------

// HQ1069

// optional int32 iInitDate = 1;
inline bool HQ1069::has_iinitdate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HQ1069::set_has_iinitdate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HQ1069::clear_has_iinitdate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HQ1069::clear_iinitdate() {
  iinitdate_ = 0;
  clear_has_iinitdate();
}
inline ::google::protobuf::int32 HQ1069::iinitdate() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1069.iInitDate)
  return iinitdate_;
}
inline void HQ1069::set_iinitdate(::google::protobuf::int32 value) {
  set_has_iinitdate();
  iinitdate_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1069.iInitDate)
}

// optional int32 iMarginlegID = 2;
inline bool HQ1069::has_imarginlegid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HQ1069::set_has_imarginlegid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HQ1069::clear_has_imarginlegid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HQ1069::clear_imarginlegid() {
  imarginlegid_ = 0;
  clear_has_imarginlegid();
}
inline ::google::protobuf::int32 HQ1069::imarginlegid() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1069.iMarginlegID)
  return imarginlegid_;
}
inline void HQ1069::set_imarginlegid(::google::protobuf::int32 value) {
  set_has_imarginlegid();
  imarginlegid_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1069.iMarginlegID)
}

// required string sMarketNo = 3;
inline bool HQ1069::has_smarketno() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HQ1069::set_has_smarketno() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HQ1069::clear_has_smarketno() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HQ1069::clear_smarketno() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_->clear();
  }
  clear_has_smarketno();
}
inline const ::std::string& HQ1069::smarketno() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1069.sMarketNo)
  return *smarketno_;
}
inline void HQ1069::set_smarketno(const ::std::string& value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1069.sMarketNo)
}
inline void HQ1069::set_smarketno(const char* value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1069.sMarketNo)
}
inline void HQ1069::set_smarketno(const char* value, size_t size) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1069.sMarketNo)
}
inline ::std::string* HQ1069::mutable_smarketno() {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1069.sMarketNo)
  return smarketno_;
}
inline ::std::string* HQ1069::release_smarketno() {
  clear_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = smarketno_;
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1069::set_allocated_smarketno(::std::string* smarketno) {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (smarketno) {
    set_has_smarketno();
    smarketno_ = smarketno;
  } else {
    clear_has_smarketno();
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1069.sMarketNo)
}

// optional string sEntrustBs = 4;
inline bool HQ1069::has_sentrustbs() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HQ1069::set_has_sentrustbs() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HQ1069::clear_has_sentrustbs() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HQ1069::clear_sentrustbs() {
  if (sentrustbs_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sentrustbs_->clear();
  }
  clear_has_sentrustbs();
}
inline const ::std::string& HQ1069::sentrustbs() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1069.sEntrustBs)
  return *sentrustbs_;
}
inline void HQ1069::set_sentrustbs(const ::std::string& value) {
  set_has_sentrustbs();
  if (sentrustbs_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sentrustbs_ = new ::std::string;
  }
  sentrustbs_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1069.sEntrustBs)
}
inline void HQ1069::set_sentrustbs(const char* value) {
  set_has_sentrustbs();
  if (sentrustbs_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sentrustbs_ = new ::std::string;
  }
  sentrustbs_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1069.sEntrustBs)
}
inline void HQ1069::set_sentrustbs(const char* value, size_t size) {
  set_has_sentrustbs();
  if (sentrustbs_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sentrustbs_ = new ::std::string;
  }
  sentrustbs_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1069.sEntrustBs)
}
inline ::std::string* HQ1069::mutable_sentrustbs() {
  set_has_sentrustbs();
  if (sentrustbs_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sentrustbs_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1069.sEntrustBs)
  return sentrustbs_;
}
inline ::std::string* HQ1069::release_sentrustbs() {
  clear_has_sentrustbs();
  if (sentrustbs_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sentrustbs_;
    sentrustbs_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1069::set_allocated_sentrustbs(::std::string* sentrustbs) {
  if (sentrustbs_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sentrustbs_;
  }
  if (sentrustbs) {
    set_has_sentrustbs();
    sentrustbs_ = sentrustbs;
  } else {
    clear_has_sentrustbs();
    sentrustbs_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1069.sEntrustBs)
}

// optional string sKindType = 5;
inline bool HQ1069::has_skindtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HQ1069::set_has_skindtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HQ1069::clear_has_skindtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HQ1069::clear_skindtype() {
  if (skindtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    skindtype_->clear();
  }
  clear_has_skindtype();
}
inline const ::std::string& HQ1069::skindtype() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1069.sKindType)
  return *skindtype_;
}
inline void HQ1069::set_skindtype(const ::std::string& value) {
  set_has_skindtype();
  if (skindtype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    skindtype_ = new ::std::string;
  }
  skindtype_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1069.sKindType)
}
inline void HQ1069::set_skindtype(const char* value) {
  set_has_skindtype();
  if (skindtype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    skindtype_ = new ::std::string;
  }
  skindtype_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1069.sKindType)
}
inline void HQ1069::set_skindtype(const char* value, size_t size) {
  set_has_skindtype();
  if (skindtype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    skindtype_ = new ::std::string;
  }
  skindtype_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1069.sKindType)
}
inline ::std::string* HQ1069::mutable_skindtype() {
  set_has_skindtype();
  if (skindtype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    skindtype_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1069.sKindType)
  return skindtype_;
}
inline ::std::string* HQ1069::release_skindtype() {
  clear_has_skindtype();
  if (skindtype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = skindtype_;
    skindtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1069::set_allocated_skindtype(::std::string* skindtype) {
  if (skindtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete skindtype_;
  }
  if (skindtype) {
    set_has_skindtype();
    skindtype_ = skindtype;
  } else {
    clear_has_skindtype();
    skindtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1069.sKindType)
}

// optional string sRuleType = 6;
inline bool HQ1069::has_sruletype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HQ1069::set_has_sruletype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HQ1069::clear_has_sruletype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HQ1069::clear_sruletype() {
  if (sruletype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sruletype_->clear();
  }
  clear_has_sruletype();
}
inline const ::std::string& HQ1069::sruletype() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1069.sRuleType)
  return *sruletype_;
}
inline void HQ1069::set_sruletype(const ::std::string& value) {
  set_has_sruletype();
  if (sruletype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sruletype_ = new ::std::string;
  }
  sruletype_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1069.sRuleType)
}
inline void HQ1069::set_sruletype(const char* value) {
  set_has_sruletype();
  if (sruletype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sruletype_ = new ::std::string;
  }
  sruletype_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1069.sRuleType)
}
inline void HQ1069::set_sruletype(const char* value, size_t size) {
  set_has_sruletype();
  if (sruletype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sruletype_ = new ::std::string;
  }
  sruletype_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1069.sRuleType)
}
inline ::std::string* HQ1069::mutable_sruletype() {
  set_has_sruletype();
  if (sruletype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sruletype_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1069.sRuleType)
  return sruletype_;
}
inline ::std::string* HQ1069::release_sruletype() {
  clear_has_sruletype();
  if (sruletype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sruletype_;
    sruletype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1069::set_allocated_sruletype(::std::string* sruletype) {
  if (sruletype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sruletype_;
  }
  if (sruletype) {
    set_has_sruletype();
    sruletype_ = sruletype;
  } else {
    clear_has_sruletype();
    sruletype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1069.sRuleType)
}

// required string sStockCode = 7;
inline bool HQ1069::has_sstockcode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HQ1069::set_has_sstockcode() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HQ1069::clear_has_sstockcode() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HQ1069::clear_sstockcode() {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_->clear();
  }
  clear_has_sstockcode();
}
inline const ::std::string& HQ1069::sstockcode() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1069.sStockCode)
  return *sstockcode_;
}
inline void HQ1069::set_sstockcode(const ::std::string& value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1069.sStockCode)
}
inline void HQ1069::set_sstockcode(const char* value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1069.sStockCode)
}
inline void HQ1069::set_sstockcode(const char* value, size_t size) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1069.sStockCode)
}
inline ::std::string* HQ1069::mutable_sstockcode() {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1069.sStockCode)
  return sstockcode_;
}
inline ::std::string* HQ1069::release_sstockcode() {
  clear_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstockcode_;
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1069::set_allocated_sstockcode(::std::string* sstockcode) {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sstockcode) {
    set_has_sstockcode();
    sstockcode_ = sstockcode;
  } else {
    clear_has_sstockcode();
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1069.sStockCode)
}

// optional string sFirstCode = 8;
inline bool HQ1069::has_sfirstcode() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HQ1069::set_has_sfirstcode() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HQ1069::clear_has_sfirstcode() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HQ1069::clear_sfirstcode() {
  if (sfirstcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sfirstcode_->clear();
  }
  clear_has_sfirstcode();
}
inline const ::std::string& HQ1069::sfirstcode() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1069.sFirstCode)
  return *sfirstcode_;
}
inline void HQ1069::set_sfirstcode(const ::std::string& value) {
  set_has_sfirstcode();
  if (sfirstcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sfirstcode_ = new ::std::string;
  }
  sfirstcode_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1069.sFirstCode)
}
inline void HQ1069::set_sfirstcode(const char* value) {
  set_has_sfirstcode();
  if (sfirstcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sfirstcode_ = new ::std::string;
  }
  sfirstcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1069.sFirstCode)
}
inline void HQ1069::set_sfirstcode(const char* value, size_t size) {
  set_has_sfirstcode();
  if (sfirstcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sfirstcode_ = new ::std::string;
  }
  sfirstcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1069.sFirstCode)
}
inline ::std::string* HQ1069::mutable_sfirstcode() {
  set_has_sfirstcode();
  if (sfirstcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sfirstcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1069.sFirstCode)
  return sfirstcode_;
}
inline ::std::string* HQ1069::release_sfirstcode() {
  clear_has_sfirstcode();
  if (sfirstcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sfirstcode_;
    sfirstcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1069::set_allocated_sfirstcode(::std::string* sfirstcode) {
  if (sfirstcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sfirstcode_;
  }
  if (sfirstcode) {
    set_has_sfirstcode();
    sfirstcode_ = sfirstcode;
  } else {
    clear_has_sfirstcode();
    sfirstcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1069.sFirstCode)
}

// optional string sFirstBs = 9;
inline bool HQ1069::has_sfirstbs() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HQ1069::set_has_sfirstbs() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HQ1069::clear_has_sfirstbs() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HQ1069::clear_sfirstbs() {
  if (sfirstbs_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sfirstbs_->clear();
  }
  clear_has_sfirstbs();
}
inline const ::std::string& HQ1069::sfirstbs() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1069.sFirstBs)
  return *sfirstbs_;
}
inline void HQ1069::set_sfirstbs(const ::std::string& value) {
  set_has_sfirstbs();
  if (sfirstbs_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sfirstbs_ = new ::std::string;
  }
  sfirstbs_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1069.sFirstBs)
}
inline void HQ1069::set_sfirstbs(const char* value) {
  set_has_sfirstbs();
  if (sfirstbs_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sfirstbs_ = new ::std::string;
  }
  sfirstbs_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1069.sFirstBs)
}
inline void HQ1069::set_sfirstbs(const char* value, size_t size) {
  set_has_sfirstbs();
  if (sfirstbs_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sfirstbs_ = new ::std::string;
  }
  sfirstbs_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1069.sFirstBs)
}
inline ::std::string* HQ1069::mutable_sfirstbs() {
  set_has_sfirstbs();
  if (sfirstbs_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sfirstbs_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1069.sFirstBs)
  return sfirstbs_;
}
inline ::std::string* HQ1069::release_sfirstbs() {
  clear_has_sfirstbs();
  if (sfirstbs_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sfirstbs_;
    sfirstbs_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1069::set_allocated_sfirstbs(::std::string* sfirstbs) {
  if (sfirstbs_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sfirstbs_;
  }
  if (sfirstbs) {
    set_has_sfirstbs();
    sfirstbs_ = sfirstbs;
  } else {
    clear_has_sfirstbs();
    sfirstbs_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1069.sFirstBs)
}

// optional int32 iFirstRation = 10;
inline bool HQ1069::has_ifirstration() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void HQ1069::set_has_ifirstration() {
  _has_bits_[0] |= 0x00000200u;
}
inline void HQ1069::clear_has_ifirstration() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void HQ1069::clear_ifirstration() {
  ifirstration_ = 0;
  clear_has_ifirstration();
}
inline ::google::protobuf::int32 HQ1069::ifirstration() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1069.iFirstRation)
  return ifirstration_;
}
inline void HQ1069::set_ifirstration(::google::protobuf::int32 value) {
  set_has_ifirstration();
  ifirstration_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1069.iFirstRation)
}

// optional string sSecondCode = 11;
inline bool HQ1069::has_ssecondcode() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void HQ1069::set_has_ssecondcode() {
  _has_bits_[0] |= 0x00000400u;
}
inline void HQ1069::clear_has_ssecondcode() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void HQ1069::clear_ssecondcode() {
  if (ssecondcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssecondcode_->clear();
  }
  clear_has_ssecondcode();
}
inline const ::std::string& HQ1069::ssecondcode() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1069.sSecondCode)
  return *ssecondcode_;
}
inline void HQ1069::set_ssecondcode(const ::std::string& value) {
  set_has_ssecondcode();
  if (ssecondcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssecondcode_ = new ::std::string;
  }
  ssecondcode_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1069.sSecondCode)
}
inline void HQ1069::set_ssecondcode(const char* value) {
  set_has_ssecondcode();
  if (ssecondcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssecondcode_ = new ::std::string;
  }
  ssecondcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1069.sSecondCode)
}
inline void HQ1069::set_ssecondcode(const char* value, size_t size) {
  set_has_ssecondcode();
  if (ssecondcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssecondcode_ = new ::std::string;
  }
  ssecondcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1069.sSecondCode)
}
inline ::std::string* HQ1069::mutable_ssecondcode() {
  set_has_ssecondcode();
  if (ssecondcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssecondcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1069.sSecondCode)
  return ssecondcode_;
}
inline ::std::string* HQ1069::release_ssecondcode() {
  clear_has_ssecondcode();
  if (ssecondcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ssecondcode_;
    ssecondcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1069::set_allocated_ssecondcode(::std::string* ssecondcode) {
  if (ssecondcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ssecondcode_;
  }
  if (ssecondcode) {
    set_has_ssecondcode();
    ssecondcode_ = ssecondcode;
  } else {
    clear_has_ssecondcode();
    ssecondcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1069.sSecondCode)
}

// optional string sSecondBs = 12;
inline bool HQ1069::has_ssecondbs() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void HQ1069::set_has_ssecondbs() {
  _has_bits_[0] |= 0x00000800u;
}
inline void HQ1069::clear_has_ssecondbs() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void HQ1069::clear_ssecondbs() {
  if (ssecondbs_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssecondbs_->clear();
  }
  clear_has_ssecondbs();
}
inline const ::std::string& HQ1069::ssecondbs() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1069.sSecondBs)
  return *ssecondbs_;
}
inline void HQ1069::set_ssecondbs(const ::std::string& value) {
  set_has_ssecondbs();
  if (ssecondbs_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssecondbs_ = new ::std::string;
  }
  ssecondbs_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1069.sSecondBs)
}
inline void HQ1069::set_ssecondbs(const char* value) {
  set_has_ssecondbs();
  if (ssecondbs_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssecondbs_ = new ::std::string;
  }
  ssecondbs_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1069.sSecondBs)
}
inline void HQ1069::set_ssecondbs(const char* value, size_t size) {
  set_has_ssecondbs();
  if (ssecondbs_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssecondbs_ = new ::std::string;
  }
  ssecondbs_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1069.sSecondBs)
}
inline ::std::string* HQ1069::mutable_ssecondbs() {
  set_has_ssecondbs();
  if (ssecondbs_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssecondbs_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1069.sSecondBs)
  return ssecondbs_;
}
inline ::std::string* HQ1069::release_ssecondbs() {
  clear_has_ssecondbs();
  if (ssecondbs_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ssecondbs_;
    ssecondbs_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1069::set_allocated_ssecondbs(::std::string* ssecondbs) {
  if (ssecondbs_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ssecondbs_;
  }
  if (ssecondbs) {
    set_has_ssecondbs();
    ssecondbs_ = ssecondbs;
  } else {
    clear_has_ssecondbs();
    ssecondbs_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1069.sSecondBs)
}

// optional int32 iSecondRation = 13;
inline bool HQ1069::has_isecondration() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void HQ1069::set_has_isecondration() {
  _has_bits_[0] |= 0x00001000u;
}
inline void HQ1069::clear_has_isecondration() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void HQ1069::clear_isecondration() {
  isecondration_ = 0;
  clear_has_isecondration();
}
inline ::google::protobuf::int32 HQ1069::isecondration() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1069.iSecondRation)
  return isecondration_;
}
inline void HQ1069::set_isecondration(::google::protobuf::int32 value) {
  set_has_isecondration();
  isecondration_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1069.iSecondRation)
}

// -------------------------------------------------------------------

// HQ1069s

// repeated .HQStockPackage.HQ1069 rHQ1069 = 1;
inline int HQ1069s::rhq1069_size() const {
  return rhq1069_.size();
}
inline void HQ1069s::clear_rhq1069() {
  rhq1069_.Clear();
}
inline const ::HQStockPackage::HQ1069& HQ1069s::rhq1069(int index) const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1069s.rHQ1069)
  return rhq1069_.Get(index);
}
inline ::HQStockPackage::HQ1069* HQ1069s::mutable_rhq1069(int index) {
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1069s.rHQ1069)
  return rhq1069_.Mutable(index);
}
inline ::HQStockPackage::HQ1069* HQ1069s::add_rhq1069() {
  // @@protoc_insertion_point(field_add:HQStockPackage.HQ1069s.rHQ1069)
  return rhq1069_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1069 >&
HQ1069s::rhq1069() const {
  // @@protoc_insertion_point(field_list:HQStockPackage.HQ1069s.rHQ1069)
  return rhq1069_;
}
inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1069 >*
HQ1069s::mutable_rhq1069() {
  // @@protoc_insertion_point(field_mutable_list:HQStockPackage.HQ1069s.rHQ1069)
  return &rhq1069_;
}

// -------------------------------------------------------------------

// HQ1070

// optional int32 iInitDate = 1;
inline bool HQ1070::has_iinitdate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HQ1070::set_has_iinitdate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HQ1070::clear_has_iinitdate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HQ1070::clear_iinitdate() {
  iinitdate_ = 0;
  clear_has_iinitdate();
}
inline ::google::protobuf::int32 HQ1070::iinitdate() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1070.iInitDate)
  return iinitdate_;
}
inline void HQ1070::set_iinitdate(::google::protobuf::int32 value) {
  set_has_iinitdate();
  iinitdate_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1070.iInitDate)
}

// required string sMarketNo = 2;
inline bool HQ1070::has_smarketno() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HQ1070::set_has_smarketno() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HQ1070::clear_has_smarketno() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HQ1070::clear_smarketno() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_->clear();
  }
  clear_has_smarketno();
}
inline const ::std::string& HQ1070::smarketno() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1070.sMarketNo)
  return *smarketno_;
}
inline void HQ1070::set_smarketno(const ::std::string& value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1070.sMarketNo)
}
inline void HQ1070::set_smarketno(const char* value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1070.sMarketNo)
}
inline void HQ1070::set_smarketno(const char* value, size_t size) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1070.sMarketNo)
}
inline ::std::string* HQ1070::mutable_smarketno() {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1070.sMarketNo)
  return smarketno_;
}
inline ::std::string* HQ1070::release_smarketno() {
  clear_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = smarketno_;
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1070::set_allocated_smarketno(::std::string* smarketno) {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (smarketno) {
    set_has_smarketno();
    smarketno_ = smarketno;
  } else {
    clear_has_smarketno();
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1070.sMarketNo)
}

// required string sStockCode = 3;
inline bool HQ1070::has_sstockcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HQ1070::set_has_sstockcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HQ1070::clear_has_sstockcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HQ1070::clear_sstockcode() {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_->clear();
  }
  clear_has_sstockcode();
}
inline const ::std::string& HQ1070::sstockcode() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1070.sStockCode)
  return *sstockcode_;
}
inline void HQ1070::set_sstockcode(const ::std::string& value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1070.sStockCode)
}
inline void HQ1070::set_sstockcode(const char* value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1070.sStockCode)
}
inline void HQ1070::set_sstockcode(const char* value, size_t size) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1070.sStockCode)
}
inline ::std::string* HQ1070::mutable_sstockcode() {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1070.sStockCode)
  return sstockcode_;
}
inline ::std::string* HQ1070::release_sstockcode() {
  clear_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstockcode_;
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1070::set_allocated_sstockcode(::std::string* sstockcode) {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sstockcode) {
    set_has_sstockcode();
    sstockcode_ = sstockcode;
  } else {
    clear_has_sstockcode();
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1070.sStockCode)
}

// optional bytes sStockName = 4;
inline bool HQ1070::has_sstockname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HQ1070::set_has_sstockname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HQ1070::clear_has_sstockname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HQ1070::clear_sstockname() {
  if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_->clear();
  }
  clear_has_sstockname();
}
inline const ::std::string& HQ1070::sstockname() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1070.sStockName)
  return *sstockname_;
}
inline void HQ1070::set_sstockname(const ::std::string& value) {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  sstockname_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1070.sStockName)
}
inline void HQ1070::set_sstockname(const char* value) {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  sstockname_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1070.sStockName)
}
inline void HQ1070::set_sstockname(const void* value, size_t size) {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  sstockname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1070.sStockName)
}
inline ::std::string* HQ1070::mutable_sstockname() {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1070.sStockName)
  return sstockname_;
}
inline ::std::string* HQ1070::release_sstockname() {
  clear_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstockname_;
    sstockname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1070::set_allocated_sstockname(::std::string* sstockname) {
  if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockname_;
  }
  if (sstockname) {
    set_has_sstockname();
    sstockname_ = sstockname;
  } else {
    clear_has_sstockname();
    sstockname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1070.sStockName)
}

// optional string sBuyOrderNo = 5;
inline bool HQ1070::has_sbuyorderno() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HQ1070::set_has_sbuyorderno() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HQ1070::clear_has_sbuyorderno() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HQ1070::clear_sbuyorderno() {
  if (sbuyorderno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbuyorderno_->clear();
  }
  clear_has_sbuyorderno();
}
inline const ::std::string& HQ1070::sbuyorderno() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1070.sBuyOrderNo)
  return *sbuyorderno_;
}
inline void HQ1070::set_sbuyorderno(const ::std::string& value) {
  set_has_sbuyorderno();
  if (sbuyorderno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbuyorderno_ = new ::std::string;
  }
  sbuyorderno_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1070.sBuyOrderNo)
}
inline void HQ1070::set_sbuyorderno(const char* value) {
  set_has_sbuyorderno();
  if (sbuyorderno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbuyorderno_ = new ::std::string;
  }
  sbuyorderno_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1070.sBuyOrderNo)
}
inline void HQ1070::set_sbuyorderno(const char* value, size_t size) {
  set_has_sbuyorderno();
  if (sbuyorderno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbuyorderno_ = new ::std::string;
  }
  sbuyorderno_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1070.sBuyOrderNo)
}
inline ::std::string* HQ1070::mutable_sbuyorderno() {
  set_has_sbuyorderno();
  if (sbuyorderno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbuyorderno_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1070.sBuyOrderNo)
  return sbuyorderno_;
}
inline ::std::string* HQ1070::release_sbuyorderno() {
  clear_has_sbuyorderno();
  if (sbuyorderno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sbuyorderno_;
    sbuyorderno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1070::set_allocated_sbuyorderno(::std::string* sbuyorderno) {
  if (sbuyorderno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sbuyorderno_;
  }
  if (sbuyorderno) {
    set_has_sbuyorderno();
    sbuyorderno_ = sbuyorderno;
  } else {
    clear_has_sbuyorderno();
    sbuyorderno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1070.sBuyOrderNo)
}

// optional int32 iBuyQuoteTime = 6;
inline bool HQ1070::has_ibuyquotetime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HQ1070::set_has_ibuyquotetime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HQ1070::clear_has_ibuyquotetime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HQ1070::clear_ibuyquotetime() {
  ibuyquotetime_ = 0;
  clear_has_ibuyquotetime();
}
inline ::google::protobuf::int32 HQ1070::ibuyquotetime() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1070.iBuyQuoteTime)
  return ibuyquotetime_;
}
inline void HQ1070::set_ibuyquotetime(::google::protobuf::int32 value) {
  set_has_ibuyquotetime();
  ibuyquotetime_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1070.iBuyQuoteTime)
}

// optional bytes sBuyQuoter = 7;
inline bool HQ1070::has_sbuyquoter() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HQ1070::set_has_sbuyquoter() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HQ1070::clear_has_sbuyquoter() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HQ1070::clear_sbuyquoter() {
  if (sbuyquoter_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbuyquoter_->clear();
  }
  clear_has_sbuyquoter();
}
inline const ::std::string& HQ1070::sbuyquoter() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1070.sBuyQuoter)
  return *sbuyquoter_;
}
inline void HQ1070::set_sbuyquoter(const ::std::string& value) {
  set_has_sbuyquoter();
  if (sbuyquoter_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbuyquoter_ = new ::std::string;
  }
  sbuyquoter_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1070.sBuyQuoter)
}
inline void HQ1070::set_sbuyquoter(const char* value) {
  set_has_sbuyquoter();
  if (sbuyquoter_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbuyquoter_ = new ::std::string;
  }
  sbuyquoter_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1070.sBuyQuoter)
}
inline void HQ1070::set_sbuyquoter(const void* value, size_t size) {
  set_has_sbuyquoter();
  if (sbuyquoter_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbuyquoter_ = new ::std::string;
  }
  sbuyquoter_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1070.sBuyQuoter)
}
inline ::std::string* HQ1070::mutable_sbuyquoter() {
  set_has_sbuyquoter();
  if (sbuyquoter_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sbuyquoter_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1070.sBuyQuoter)
  return sbuyquoter_;
}
inline ::std::string* HQ1070::release_sbuyquoter() {
  clear_has_sbuyquoter();
  if (sbuyquoter_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sbuyquoter_;
    sbuyquoter_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1070::set_allocated_sbuyquoter(::std::string* sbuyquoter) {
  if (sbuyquoter_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sbuyquoter_;
  }
  if (sbuyquoter) {
    set_has_sbuyquoter();
    sbuyquoter_ = sbuyquoter;
  } else {
    clear_has_sbuyquoter();
    sbuyquoter_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1070.sBuyQuoter)
}

// optional double dBuyNetPrice = 8;
inline bool HQ1070::has_dbuynetprice() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HQ1070::set_has_dbuynetprice() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HQ1070::clear_has_dbuynetprice() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HQ1070::clear_dbuynetprice() {
  dbuynetprice_ = 0;
  clear_has_dbuynetprice();
}
inline double HQ1070::dbuynetprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1070.dBuyNetPrice)
  return dbuynetprice_;
}
inline void HQ1070::set_dbuynetprice(double value) {
  set_has_dbuynetprice();
  dbuynetprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1070.dBuyNetPrice)
}

// optional double dBuyQty = 9;
inline bool HQ1070::has_dbuyqty() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HQ1070::set_has_dbuyqty() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HQ1070::clear_has_dbuyqty() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HQ1070::clear_dbuyqty() {
  dbuyqty_ = 0;
  clear_has_dbuyqty();
}
inline double HQ1070::dbuyqty() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1070.dBuyQty)
  return dbuyqty_;
}
inline void HQ1070::set_dbuyqty(double value) {
  set_has_dbuyqty();
  dbuyqty_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1070.dBuyQty)
}

// optional double dBuyAllPrice = 10;
inline bool HQ1070::has_dbuyallprice() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void HQ1070::set_has_dbuyallprice() {
  _has_bits_[0] |= 0x00000200u;
}
inline void HQ1070::clear_has_dbuyallprice() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void HQ1070::clear_dbuyallprice() {
  dbuyallprice_ = 0;
  clear_has_dbuyallprice();
}
inline double HQ1070::dbuyallprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1070.dBuyAllPrice)
  return dbuyallprice_;
}
inline void HQ1070::set_dbuyallprice(double value) {
  set_has_dbuyallprice();
  dbuyallprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1070.dBuyAllPrice)
}

// optional double dBuyProfitRatio = 11;
inline bool HQ1070::has_dbuyprofitratio() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void HQ1070::set_has_dbuyprofitratio() {
  _has_bits_[0] |= 0x00000400u;
}
inline void HQ1070::clear_has_dbuyprofitratio() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void HQ1070::clear_dbuyprofitratio() {
  dbuyprofitratio_ = 0;
  clear_has_dbuyprofitratio();
}
inline double HQ1070::dbuyprofitratio() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1070.dBuyProfitRatio)
  return dbuyprofitratio_;
}
inline void HQ1070::set_dbuyprofitratio(double value) {
  set_has_dbuyprofitratio();
  dbuyprofitratio_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1070.dBuyProfitRatio)
}

// optional string sSaleOrderNo = 12;
inline bool HQ1070::has_ssaleorderno() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void HQ1070::set_has_ssaleorderno() {
  _has_bits_[0] |= 0x00000800u;
}
inline void HQ1070::clear_has_ssaleorderno() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void HQ1070::clear_ssaleorderno() {
  if (ssaleorderno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssaleorderno_->clear();
  }
  clear_has_ssaleorderno();
}
inline const ::std::string& HQ1070::ssaleorderno() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1070.sSaleOrderNo)
  return *ssaleorderno_;
}
inline void HQ1070::set_ssaleorderno(const ::std::string& value) {
  set_has_ssaleorderno();
  if (ssaleorderno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssaleorderno_ = new ::std::string;
  }
  ssaleorderno_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1070.sSaleOrderNo)
}
inline void HQ1070::set_ssaleorderno(const char* value) {
  set_has_ssaleorderno();
  if (ssaleorderno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssaleorderno_ = new ::std::string;
  }
  ssaleorderno_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1070.sSaleOrderNo)
}
inline void HQ1070::set_ssaleorderno(const char* value, size_t size) {
  set_has_ssaleorderno();
  if (ssaleorderno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssaleorderno_ = new ::std::string;
  }
  ssaleorderno_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1070.sSaleOrderNo)
}
inline ::std::string* HQ1070::mutable_ssaleorderno() {
  set_has_ssaleorderno();
  if (ssaleorderno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssaleorderno_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1070.sSaleOrderNo)
  return ssaleorderno_;
}
inline ::std::string* HQ1070::release_ssaleorderno() {
  clear_has_ssaleorderno();
  if (ssaleorderno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ssaleorderno_;
    ssaleorderno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1070::set_allocated_ssaleorderno(::std::string* ssaleorderno) {
  if (ssaleorderno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ssaleorderno_;
  }
  if (ssaleorderno) {
    set_has_ssaleorderno();
    ssaleorderno_ = ssaleorderno;
  } else {
    clear_has_ssaleorderno();
    ssaleorderno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1070.sSaleOrderNo)
}

// optional int32 iSaleQuoteTime = 13;
inline bool HQ1070::has_isalequotetime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void HQ1070::set_has_isalequotetime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void HQ1070::clear_has_isalequotetime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void HQ1070::clear_isalequotetime() {
  isalequotetime_ = 0;
  clear_has_isalequotetime();
}
inline ::google::protobuf::int32 HQ1070::isalequotetime() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1070.iSaleQuoteTime)
  return isalequotetime_;
}
inline void HQ1070::set_isalequotetime(::google::protobuf::int32 value) {
  set_has_isalequotetime();
  isalequotetime_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1070.iSaleQuoteTime)
}

// optional bytes sSaleQuoter = 14;
inline bool HQ1070::has_ssalequoter() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void HQ1070::set_has_ssalequoter() {
  _has_bits_[0] |= 0x00002000u;
}
inline void HQ1070::clear_has_ssalequoter() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void HQ1070::clear_ssalequoter() {
  if (ssalequoter_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssalequoter_->clear();
  }
  clear_has_ssalequoter();
}
inline const ::std::string& HQ1070::ssalequoter() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1070.sSaleQuoter)
  return *ssalequoter_;
}
inline void HQ1070::set_ssalequoter(const ::std::string& value) {
  set_has_ssalequoter();
  if (ssalequoter_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssalequoter_ = new ::std::string;
  }
  ssalequoter_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1070.sSaleQuoter)
}
inline void HQ1070::set_ssalequoter(const char* value) {
  set_has_ssalequoter();
  if (ssalequoter_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssalequoter_ = new ::std::string;
  }
  ssalequoter_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1070.sSaleQuoter)
}
inline void HQ1070::set_ssalequoter(const void* value, size_t size) {
  set_has_ssalequoter();
  if (ssalequoter_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssalequoter_ = new ::std::string;
  }
  ssalequoter_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1070.sSaleQuoter)
}
inline ::std::string* HQ1070::mutable_ssalequoter() {
  set_has_ssalequoter();
  if (ssalequoter_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssalequoter_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1070.sSaleQuoter)
  return ssalequoter_;
}
inline ::std::string* HQ1070::release_ssalequoter() {
  clear_has_ssalequoter();
  if (ssalequoter_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ssalequoter_;
    ssalequoter_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1070::set_allocated_ssalequoter(::std::string* ssalequoter) {
  if (ssalequoter_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ssalequoter_;
  }
  if (ssalequoter) {
    set_has_ssalequoter();
    ssalequoter_ = ssalequoter;
  } else {
    clear_has_ssalequoter();
    ssalequoter_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1070.sSaleQuoter)
}

// optional double dSaleNetPrice = 15;
inline bool HQ1070::has_dsalenetprice() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void HQ1070::set_has_dsalenetprice() {
  _has_bits_[0] |= 0x00004000u;
}
inline void HQ1070::clear_has_dsalenetprice() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void HQ1070::clear_dsalenetprice() {
  dsalenetprice_ = 0;
  clear_has_dsalenetprice();
}
inline double HQ1070::dsalenetprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1070.dSaleNetPrice)
  return dsalenetprice_;
}
inline void HQ1070::set_dsalenetprice(double value) {
  set_has_dsalenetprice();
  dsalenetprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1070.dSaleNetPrice)
}

// optional double dSaleQty = 16;
inline bool HQ1070::has_dsaleqty() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void HQ1070::set_has_dsaleqty() {
  _has_bits_[0] |= 0x00008000u;
}
inline void HQ1070::clear_has_dsaleqty() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void HQ1070::clear_dsaleqty() {
  dsaleqty_ = 0;
  clear_has_dsaleqty();
}
inline double HQ1070::dsaleqty() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1070.dSaleQty)
  return dsaleqty_;
}
inline void HQ1070::set_dsaleqty(double value) {
  set_has_dsaleqty();
  dsaleqty_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1070.dSaleQty)
}

// optional double dSaleAllPrice = 17;
inline bool HQ1070::has_dsaleallprice() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void HQ1070::set_has_dsaleallprice() {
  _has_bits_[0] |= 0x00010000u;
}
inline void HQ1070::clear_has_dsaleallprice() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void HQ1070::clear_dsaleallprice() {
  dsaleallprice_ = 0;
  clear_has_dsaleallprice();
}
inline double HQ1070::dsaleallprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1070.dSaleAllPrice)
  return dsaleallprice_;
}
inline void HQ1070::set_dsaleallprice(double value) {
  set_has_dsaleallprice();
  dsaleallprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1070.dSaleAllPrice)
}

// optional double dSaleProfitRatio = 18;
inline bool HQ1070::has_dsaleprofitratio() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void HQ1070::set_has_dsaleprofitratio() {
  _has_bits_[0] |= 0x00020000u;
}
inline void HQ1070::clear_has_dsaleprofitratio() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void HQ1070::clear_dsaleprofitratio() {
  dsaleprofitratio_ = 0;
  clear_has_dsaleprofitratio();
}
inline double HQ1070::dsaleprofitratio() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1070.dSaleProfitRatio)
  return dsaleprofitratio_;
}
inline void HQ1070::set_dsaleprofitratio(double value) {
  set_has_dsaleprofitratio();
  dsaleprofitratio_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1070.dSaleProfitRatio)
}

// optional double dAccruedInterest = 19;
inline bool HQ1070::has_daccruedinterest() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void HQ1070::set_has_daccruedinterest() {
  _has_bits_[0] |= 0x00040000u;
}
inline void HQ1070::clear_has_daccruedinterest() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void HQ1070::clear_daccruedinterest() {
  daccruedinterest_ = 0;
  clear_has_daccruedinterest();
}
inline double HQ1070::daccruedinterest() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1070.dAccruedInterest)
  return daccruedinterest_;
}
inline void HQ1070::set_daccruedinterest(double value) {
  set_has_daccruedinterest();
  daccruedinterest_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1070.dAccruedInterest)
}

// optional string sRecordStatus = 20;
inline bool HQ1070::has_srecordstatus() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void HQ1070::set_has_srecordstatus() {
  _has_bits_[0] |= 0x00080000u;
}
inline void HQ1070::clear_has_srecordstatus() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void HQ1070::clear_srecordstatus() {
  if (srecordstatus_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srecordstatus_->clear();
  }
  clear_has_srecordstatus();
}
inline const ::std::string& HQ1070::srecordstatus() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1070.sRecordStatus)
  return *srecordstatus_;
}
inline void HQ1070::set_srecordstatus(const ::std::string& value) {
  set_has_srecordstatus();
  if (srecordstatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srecordstatus_ = new ::std::string;
  }
  srecordstatus_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1070.sRecordStatus)
}
inline void HQ1070::set_srecordstatus(const char* value) {
  set_has_srecordstatus();
  if (srecordstatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srecordstatus_ = new ::std::string;
  }
  srecordstatus_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1070.sRecordStatus)
}
inline void HQ1070::set_srecordstatus(const char* value, size_t size) {
  set_has_srecordstatus();
  if (srecordstatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srecordstatus_ = new ::std::string;
  }
  srecordstatus_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1070.sRecordStatus)
}
inline ::std::string* HQ1070::mutable_srecordstatus() {
  set_has_srecordstatus();
  if (srecordstatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srecordstatus_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1070.sRecordStatus)
  return srecordstatus_;
}
inline ::std::string* HQ1070::release_srecordstatus() {
  clear_has_srecordstatus();
  if (srecordstatus_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = srecordstatus_;
    srecordstatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1070::set_allocated_srecordstatus(::std::string* srecordstatus) {
  if (srecordstatus_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srecordstatus_;
  }
  if (srecordstatus) {
    set_has_srecordstatus();
    srecordstatus_ = srecordstatus;
  } else {
    clear_has_srecordstatus();
    srecordstatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1070.sRecordStatus)
}

// -------------------------------------------------------------------

// HQ1070s

// repeated .HQStockPackage.HQ1070 rHQ1070 = 1;
inline int HQ1070s::rhq1070_size() const {
  return rhq1070_.size();
}
inline void HQ1070s::clear_rhq1070() {
  rhq1070_.Clear();
}
inline const ::HQStockPackage::HQ1070& HQ1070s::rhq1070(int index) const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1070s.rHQ1070)
  return rhq1070_.Get(index);
}
inline ::HQStockPackage::HQ1070* HQ1070s::mutable_rhq1070(int index) {
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1070s.rHQ1070)
  return rhq1070_.Mutable(index);
}
inline ::HQStockPackage::HQ1070* HQ1070s::add_rhq1070() {
  // @@protoc_insertion_point(field_add:HQStockPackage.HQ1070s.rHQ1070)
  return rhq1070_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1070 >&
HQ1070s::rhq1070() const {
  // @@protoc_insertion_point(field_list:HQStockPackage.HQ1070s.rHQ1070)
  return rhq1070_;
}
inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1070 >*
HQ1070s::mutable_rhq1070() {
  // @@protoc_insertion_point(field_mutable_list:HQStockPackage.HQ1070s.rHQ1070)
  return &rhq1070_;
}

// -------------------------------------------------------------------

// HQ1071

// optional int32 iInitDate = 1;
inline bool HQ1071::has_iinitdate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HQ1071::set_has_iinitdate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HQ1071::clear_has_iinitdate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HQ1071::clear_iinitdate() {
  iinitdate_ = 0;
  clear_has_iinitdate();
}
inline ::google::protobuf::int32 HQ1071::iinitdate() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.iInitDate)
  return iinitdate_;
}
inline void HQ1071::set_iinitdate(::google::protobuf::int32 value) {
  set_has_iinitdate();
  iinitdate_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.iInitDate)
}

// required string sMarketNo = 2;
inline bool HQ1071::has_smarketno() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HQ1071::set_has_smarketno() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HQ1071::clear_has_smarketno() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HQ1071::clear_smarketno() {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_->clear();
  }
  clear_has_smarketno();
}
inline const ::std::string& HQ1071::smarketno() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.sMarketNo)
  return *smarketno_;
}
inline void HQ1071::set_smarketno(const ::std::string& value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.sMarketNo)
}
inline void HQ1071::set_smarketno(const char* value) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1071.sMarketNo)
}
inline void HQ1071::set_smarketno(const char* value, size_t size) {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  smarketno_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1071.sMarketNo)
}
inline ::std::string* HQ1071::mutable_smarketno() {
  set_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    smarketno_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1071.sMarketNo)
  return smarketno_;
}
inline ::std::string* HQ1071::release_smarketno() {
  clear_has_smarketno();
  if (smarketno_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = smarketno_;
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1071::set_allocated_smarketno(::std::string* smarketno) {
  if (smarketno_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete smarketno_;
  }
  if (smarketno) {
    set_has_smarketno();
    smarketno_ = smarketno;
  } else {
    clear_has_smarketno();
    smarketno_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1071.sMarketNo)
}

// required string sStockCode = 3;
inline bool HQ1071::has_sstockcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HQ1071::set_has_sstockcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HQ1071::clear_has_sstockcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HQ1071::clear_sstockcode() {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_->clear();
  }
  clear_has_sstockcode();
}
inline const ::std::string& HQ1071::sstockcode() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.sStockCode)
  return *sstockcode_;
}
inline void HQ1071::set_sstockcode(const ::std::string& value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.sStockCode)
}
inline void HQ1071::set_sstockcode(const char* value) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1071.sStockCode)
}
inline void HQ1071::set_sstockcode(const char* value, size_t size) {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  sstockcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1071.sStockCode)
}
inline ::std::string* HQ1071::mutable_sstockcode() {
  set_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1071.sStockCode)
  return sstockcode_;
}
inline ::std::string* HQ1071::release_sstockcode() {
  clear_has_sstockcode();
  if (sstockcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstockcode_;
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1071::set_allocated_sstockcode(::std::string* sstockcode) {
  if (sstockcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockcode_;
  }
  if (sstockcode) {
    set_has_sstockcode();
    sstockcode_ = sstockcode;
  } else {
    clear_has_sstockcode();
    sstockcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1071.sStockCode)
}

// optional bytes sStockName = 4;
inline bool HQ1071::has_sstockname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HQ1071::set_has_sstockname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HQ1071::clear_has_sstockname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HQ1071::clear_sstockname() {
  if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_->clear();
  }
  clear_has_sstockname();
}
inline const ::std::string& HQ1071::sstockname() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.sStockName)
  return *sstockname_;
}
inline void HQ1071::set_sstockname(const ::std::string& value) {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  sstockname_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.sStockName)
}
inline void HQ1071::set_sstockname(const char* value) {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  sstockname_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1071.sStockName)
}
inline void HQ1071::set_sstockname(const void* value, size_t size) {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  sstockname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1071.sStockName)
}
inline ::std::string* HQ1071::mutable_sstockname() {
  set_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sstockname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1071.sStockName)
  return sstockname_;
}
inline ::std::string* HQ1071::release_sstockname() {
  clear_has_sstockname();
  if (sstockname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sstockname_;
    sstockname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1071::set_allocated_sstockname(::std::string* sstockname) {
  if (sstockname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sstockname_;
  }
  if (sstockname) {
    set_has_sstockname();
    sstockname_ = sstockname;
  } else {
    clear_has_sstockname();
    sstockname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1071.sStockName)
}

// optional int32 iTimeStamp = 5;
inline bool HQ1071::has_itimestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HQ1071::set_has_itimestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HQ1071::clear_has_itimestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HQ1071::clear_itimestamp() {
  itimestamp_ = 0;
  clear_has_itimestamp();
}
inline ::google::protobuf::int32 HQ1071::itimestamp() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.iTimeStamp)
  return itimestamp_;
}
inline void HQ1071::set_itimestamp(::google::protobuf::int32 value) {
  set_has_itimestamp();
  itimestamp_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.iTimeStamp)
}

// optional double dYesterdayClosePrice = 6;
inline bool HQ1071::has_dyesterdaycloseprice() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HQ1071::set_has_dyesterdaycloseprice() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HQ1071::clear_has_dyesterdaycloseprice() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HQ1071::clear_dyesterdaycloseprice() {
  dyesterdaycloseprice_ = 0;
  clear_has_dyesterdaycloseprice();
}
inline double HQ1071::dyesterdaycloseprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.dYesterdayClosePrice)
  return dyesterdaycloseprice_;
}
inline void HQ1071::set_dyesterdaycloseprice(double value) {
  set_has_dyesterdaycloseprice();
  dyesterdaycloseprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.dYesterdayClosePrice)
}

// optional double dYesterdayWeightedAvgPrice = 7;
inline bool HQ1071::has_dyesterdayweightedavgprice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HQ1071::set_has_dyesterdayweightedavgprice() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HQ1071::clear_has_dyesterdayweightedavgprice() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HQ1071::clear_dyesterdayweightedavgprice() {
  dyesterdayweightedavgprice_ = 0;
  clear_has_dyesterdayweightedavgprice();
}
inline double HQ1071::dyesterdayweightedavgprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.dYesterdayWeightedAvgPrice)
  return dyesterdayweightedavgprice_;
}
inline void HQ1071::set_dyesterdayweightedavgprice(double value) {
  set_has_dyesterdayweightedavgprice();
  dyesterdayweightedavgprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.dYesterdayWeightedAvgPrice)
}

// optional double dOpenPrice = 8;
inline bool HQ1071::has_dopenprice() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HQ1071::set_has_dopenprice() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HQ1071::clear_has_dopenprice() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HQ1071::clear_dopenprice() {
  dopenprice_ = 0;
  clear_has_dopenprice();
}
inline double HQ1071::dopenprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.dOpenPrice)
  return dopenprice_;
}
inline void HQ1071::set_dopenprice(double value) {
  set_has_dopenprice();
  dopenprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.dOpenPrice)
}

// optional double dHighPrice = 9;
inline bool HQ1071::has_dhighprice() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HQ1071::set_has_dhighprice() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HQ1071::clear_has_dhighprice() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HQ1071::clear_dhighprice() {
  dhighprice_ = 0;
  clear_has_dhighprice();
}
inline double HQ1071::dhighprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.dHighPrice)
  return dhighprice_;
}
inline void HQ1071::set_dhighprice(double value) {
  set_has_dhighprice();
  dhighprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.dHighPrice)
}

// optional double dLowPrice = 10;
inline bool HQ1071::has_dlowprice() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void HQ1071::set_has_dlowprice() {
  _has_bits_[0] |= 0x00000200u;
}
inline void HQ1071::clear_has_dlowprice() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void HQ1071::clear_dlowprice() {
  dlowprice_ = 0;
  clear_has_dlowprice();
}
inline double HQ1071::dlowprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.dLowPrice)
  return dlowprice_;
}
inline void HQ1071::set_dlowprice(double value) {
  set_has_dlowprice();
  dlowprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.dLowPrice)
}

// optional double dLastPrice = 11;
inline bool HQ1071::has_dlastprice() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void HQ1071::set_has_dlastprice() {
  _has_bits_[0] |= 0x00000400u;
}
inline void HQ1071::clear_has_dlastprice() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void HQ1071::clear_dlastprice() {
  dlastprice_ = 0;
  clear_has_dlastprice();
}
inline double HQ1071::dlastprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.dLastPrice)
  return dlastprice_;
}
inline void HQ1071::set_dlastprice(double value) {
  set_has_dlastprice();
  dlastprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.dLastPrice)
}

// optional double dWeightedAvgPrice = 12;
inline bool HQ1071::has_dweightedavgprice() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void HQ1071::set_has_dweightedavgprice() {
  _has_bits_[0] |= 0x00000800u;
}
inline void HQ1071::clear_has_dweightedavgprice() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void HQ1071::clear_dweightedavgprice() {
  dweightedavgprice_ = 0;
  clear_has_dweightedavgprice();
}
inline double HQ1071::dweightedavgprice() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.dWeightedAvgPrice)
  return dweightedavgprice_;
}
inline void HQ1071::set_dweightedavgprice(double value) {
  set_has_dweightedavgprice();
  dweightedavgprice_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.dWeightedAvgPrice)
}

// optional double dTotalQty = 13;
inline bool HQ1071::has_dtotalqty() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void HQ1071::set_has_dtotalqty() {
  _has_bits_[0] |= 0x00001000u;
}
inline void HQ1071::clear_has_dtotalqty() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void HQ1071::clear_dtotalqty() {
  dtotalqty_ = 0;
  clear_has_dtotalqty();
}
inline double HQ1071::dtotalqty() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.dTotalQty)
  return dtotalqty_;
}
inline void HQ1071::set_dtotalqty(double value) {
  set_has_dtotalqty();
  dtotalqty_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.dTotalQty)
}

// optional double dTotalAmount = 14;
inline bool HQ1071::has_dtotalamount() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void HQ1071::set_has_dtotalamount() {
  _has_bits_[0] |= 0x00002000u;
}
inline void HQ1071::clear_has_dtotalamount() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void HQ1071::clear_dtotalamount() {
  dtotalamount_ = 0;
  clear_has_dtotalamount();
}
inline double HQ1071::dtotalamount() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.dTotalAmount)
  return dtotalamount_;
}
inline void HQ1071::set_dtotalamount(double value) {
  set_has_dtotalamount();
  dtotalamount_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.dTotalAmount)
}

// optional double dTotalNum = 15;
inline bool HQ1071::has_dtotalnum() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void HQ1071::set_has_dtotalnum() {
  _has_bits_[0] |= 0x00004000u;
}
inline void HQ1071::clear_has_dtotalnum() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void HQ1071::clear_dtotalnum() {
  dtotalnum_ = 0;
  clear_has_dtotalnum();
}
inline double HQ1071::dtotalnum() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.dTotalNum)
  return dtotalnum_;
}
inline void HQ1071::set_dtotalnum(double value) {
  set_has_dtotalnum();
  dtotalnum_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.dTotalNum)
}

// optional double dYesterdayCloseYield = 16;
inline bool HQ1071::has_dyesterdaycloseyield() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void HQ1071::set_has_dyesterdaycloseyield() {
  _has_bits_[0] |= 0x00008000u;
}
inline void HQ1071::clear_has_dyesterdaycloseyield() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void HQ1071::clear_dyesterdaycloseyield() {
  dyesterdaycloseyield_ = 0;
  clear_has_dyesterdaycloseyield();
}
inline double HQ1071::dyesterdaycloseyield() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.dYesterdayCloseYield)
  return dyesterdaycloseyield_;
}
inline void HQ1071::set_dyesterdaycloseyield(double value) {
  set_has_dyesterdaycloseyield();
  dyesterdaycloseyield_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.dYesterdayCloseYield)
}

// optional double dYesterdayWeightedAvgYield = 17;
inline bool HQ1071::has_dyesterdayweightedavgyield() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void HQ1071::set_has_dyesterdayweightedavgyield() {
  _has_bits_[0] |= 0x00010000u;
}
inline void HQ1071::clear_has_dyesterdayweightedavgyield() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void HQ1071::clear_dyesterdayweightedavgyield() {
  dyesterdayweightedavgyield_ = 0;
  clear_has_dyesterdayweightedavgyield();
}
inline double HQ1071::dyesterdayweightedavgyield() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.dYesterdayWeightedAvgYield)
  return dyesterdayweightedavgyield_;
}
inline void HQ1071::set_dyesterdayweightedavgyield(double value) {
  set_has_dyesterdayweightedavgyield();
  dyesterdayweightedavgyield_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.dYesterdayWeightedAvgYield)
}

// optional double dOpenYield = 18;
inline bool HQ1071::has_dopenyield() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void HQ1071::set_has_dopenyield() {
  _has_bits_[0] |= 0x00020000u;
}
inline void HQ1071::clear_has_dopenyield() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void HQ1071::clear_dopenyield() {
  dopenyield_ = 0;
  clear_has_dopenyield();
}
inline double HQ1071::dopenyield() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.dOpenYield)
  return dopenyield_;
}
inline void HQ1071::set_dopenyield(double value) {
  set_has_dopenyield();
  dopenyield_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.dOpenYield)
}

// optional double dHighYield = 19;
inline bool HQ1071::has_dhighyield() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void HQ1071::set_has_dhighyield() {
  _has_bits_[0] |= 0x00040000u;
}
inline void HQ1071::clear_has_dhighyield() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void HQ1071::clear_dhighyield() {
  dhighyield_ = 0;
  clear_has_dhighyield();
}
inline double HQ1071::dhighyield() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.dHighYield)
  return dhighyield_;
}
inline void HQ1071::set_dhighyield(double value) {
  set_has_dhighyield();
  dhighyield_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.dHighYield)
}

// optional double dLowYield = 20;
inline bool HQ1071::has_dlowyield() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void HQ1071::set_has_dlowyield() {
  _has_bits_[0] |= 0x00080000u;
}
inline void HQ1071::clear_has_dlowyield() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void HQ1071::clear_dlowyield() {
  dlowyield_ = 0;
  clear_has_dlowyield();
}
inline double HQ1071::dlowyield() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.dLowYield)
  return dlowyield_;
}
inline void HQ1071::set_dlowyield(double value) {
  set_has_dlowyield();
  dlowyield_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.dLowYield)
}

// optional double dLastYield = 21;
inline bool HQ1071::has_dlastyield() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void HQ1071::set_has_dlastyield() {
  _has_bits_[0] |= 0x00100000u;
}
inline void HQ1071::clear_has_dlastyield() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void HQ1071::clear_dlastyield() {
  dlastyield_ = 0;
  clear_has_dlastyield();
}
inline double HQ1071::dlastyield() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.dLastYield)
  return dlastyield_;
}
inline void HQ1071::set_dlastyield(double value) {
  set_has_dlastyield();
  dlastyield_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.dLastYield)
}

// optional double dWeightedAvgYield = 22;
inline bool HQ1071::has_dweightedavgyield() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void HQ1071::set_has_dweightedavgyield() {
  _has_bits_[0] |= 0x00200000u;
}
inline void HQ1071::clear_has_dweightedavgyield() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void HQ1071::clear_dweightedavgyield() {
  dweightedavgyield_ = 0;
  clear_has_dweightedavgyield();
}
inline double HQ1071::dweightedavgyield() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.dWeightedAvgYield)
  return dweightedavgyield_;
}
inline void HQ1071::set_dweightedavgyield(double value) {
  set_has_dweightedavgyield();
  dweightedavgyield_ = value;
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.dWeightedAvgYield)
}

// optional string sCodeType = 23;
inline bool HQ1071::has_scodetype() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void HQ1071::set_has_scodetype() {
  _has_bits_[0] |= 0x00400000u;
}
inline void HQ1071::clear_has_scodetype() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void HQ1071::clear_scodetype() {
  if (scodetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scodetype_->clear();
  }
  clear_has_scodetype();
}
inline const ::std::string& HQ1071::scodetype() const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071.sCodeType)
  return *scodetype_;
}
inline void HQ1071::set_scodetype(const ::std::string& value) {
  set_has_scodetype();
  if (scodetype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scodetype_ = new ::std::string;
  }
  scodetype_->assign(value);
  // @@protoc_insertion_point(field_set:HQStockPackage.HQ1071.sCodeType)
}
inline void HQ1071::set_scodetype(const char* value) {
  set_has_scodetype();
  if (scodetype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scodetype_ = new ::std::string;
  }
  scodetype_->assign(value);
  // @@protoc_insertion_point(field_set_char:HQStockPackage.HQ1071.sCodeType)
}
inline void HQ1071::set_scodetype(const char* value, size_t size) {
  set_has_scodetype();
  if (scodetype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scodetype_ = new ::std::string;
  }
  scodetype_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HQStockPackage.HQ1071.sCodeType)
}
inline ::std::string* HQ1071::mutable_scodetype() {
  set_has_scodetype();
  if (scodetype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    scodetype_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1071.sCodeType)
  return scodetype_;
}
inline ::std::string* HQ1071::release_scodetype() {
  clear_has_scodetype();
  if (scodetype_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = scodetype_;
    scodetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HQ1071::set_allocated_scodetype(::std::string* scodetype) {
  if (scodetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete scodetype_;
  }
  if (scodetype) {
    set_has_scodetype();
    scodetype_ = scodetype;
  } else {
    clear_has_scodetype();
    scodetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HQStockPackage.HQ1071.sCodeType)
}

// -------------------------------------------------------------------

// HQ1071s

// repeated .HQStockPackage.HQ1071 rHQ1071 = 1;
inline int HQ1071s::rhq1071_size() const {
  return rhq1071_.size();
}
inline void HQ1071s::clear_rhq1071() {
  rhq1071_.Clear();
}
inline const ::HQStockPackage::HQ1071& HQ1071s::rhq1071(int index) const {
  // @@protoc_insertion_point(field_get:HQStockPackage.HQ1071s.rHQ1071)
  return rhq1071_.Get(index);
}
inline ::HQStockPackage::HQ1071* HQ1071s::mutable_rhq1071(int index) {
  // @@protoc_insertion_point(field_mutable:HQStockPackage.HQ1071s.rHQ1071)
  return rhq1071_.Mutable(index);
}
inline ::HQStockPackage::HQ1071* HQ1071s::add_rhq1071() {
  // @@protoc_insertion_point(field_add:HQStockPackage.HQ1071s.rHQ1071)
  return rhq1071_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1071 >&
HQ1071s::rhq1071() const {
  // @@protoc_insertion_point(field_list:HQStockPackage.HQ1071s.rHQ1071)
  return rhq1071_;
}
inline ::google::protobuf::RepeatedPtrField< ::HQStockPackage::HQ1071 >*
HQ1071s::mutable_rhq1071() {
  // @@protoc_insertion_point(field_mutable_list:HQStockPackage.HQ1071s.rHQ1071)
  return &rhq1071_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace HQStockPackage

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_HQStock_2eproto__INCLUDED
